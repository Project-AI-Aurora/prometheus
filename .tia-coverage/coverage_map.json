{
  "test_to_files": {
    "Test": null,
    "Test500ErrorHttpResponse": [
      "github.com/prometheus/prometheus/discovery/eureka/client.go",
      "github.com/prometheus/prometheus/discovery/eureka/eureka.go",
      "github.com/prometheus/prometheus/discovery/eureka/metrics.go"
    ],
    "Test500ErrorHttpResponseWithValidJSONBody": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestAbortBlockCompactions": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestAcceptHeader": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestAddDuplicateLabelName": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestAddExemplar": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestAddingNewIntervals": [
      "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go"
    ],
    "TestAdminEndpoints": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestAgentAPIEndPoints": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestAgentFailedStartupWithInvalidConfig": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestAgentFailedStartupWithServerFlag": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestAgentMode": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestAgentSuccessfulStartup": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestAggregateExprPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestAlertingEvalWithOrigin": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRule": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleDuplicate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleEmptyLabelFromTemplate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleExternalLabelsInTemplate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleExternalURLInTemplate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleLabelsUpdate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleLimit": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleQueryInTemplate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleState": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRuleTemplateWithHistogram": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRule_ActiveAlertsCount": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRule_SetDependencyRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAlertingRule_SetDependentRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAllFloatBucketIterator": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestAllOptions": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestAllReverseFloatBucketIterator": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestAllServices": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestAmendHistogramDatapointCausesError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestApiStatusCodes": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestAppendEmptyLabelsIgnored": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestAppendHistogram": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestAppendingDifferentEncodingToSameSeries": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestApplyConfig": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestApplyConfigDoesNotModifyStaticTargets": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestAssertMatrixSorted": [
      "github.com/prometheus/prometheus/promql/promqltest/test.go",
      "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go"
    ],
    "TestAsyncRuleEvaluation": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestAtFloatHistogram": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestAtModifier": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestAuthorizationConfig": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestAutoReloadConfig_ValidToInvalidToValid": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestAutoReloadConfig_ValidToValid": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestAzureAd": [
      "github.com/prometheus/prometheus/storage/remote/azuread/azuread.go"
    ],
    "TestAzureAdConfig": [
      "github.com/prometheus/prometheus/storage/remote/azuread/azuread.go"
    ],
    "TestAzureRefresh": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestBackfill": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestBackfillLabels": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestBackfillRuleIntegration": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestBadConfigs": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestBadStaticConfigsYML": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestBasicContentNegotiation": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestBigEndian": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestBinaryExprPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestBlockBaseSeriesSet": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockClosingBlockedDuringRemoteRead": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockIndexReader_PostingsForLabelMatching": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockMetaMustNeverBeVersion2": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockQuerier": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockQuerierAndBlockChunkQuerier": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockQuerierDelete": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockQuerierReturnsSortedLabelValues": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockQuerier_AgainstHeadWithOpenChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockRanges": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockSize": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBlockWriter": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestBoundedRuleEvalConcurrency": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestBstreamReader": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestBstream_Reset": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestBucketIterator": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestBucketLimitAppender": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestBucketQuantile_ForcedMonotonicity": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestBufferedSeriesIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestBufferedSeriesIteratorMixedFloatsAndHistograms": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestBufferedSeriesIteratorMixedHistograms": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestBufferedSeriesIteratorNoBadAt": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestBuildTimeSeries": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestBuilder": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestByteSize": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestCORSHandler": [
      "github.com/prometheus/prometheus/util/httputil/compression.go",
      "github.com/prometheus/prometheus/util/httputil/context.go",
      "github.com/prometheus/prometheus/util/httputil/cors.go"
    ],
    "TestCTParseFailures": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestCalcClassicBucketStatistics": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCalculateDesiredShards": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestCalculateDesiredShardsDetail": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestCalculateDuration": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestCallExprPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestCancelCompactions": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChainSampleIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestChainSampleIteratorHistogramCounterResetHint": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestChainSampleIteratorNextImmediatelyFailingIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestChainSampleIteratorSeek": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestChainSampleIteratorSeekFailingIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestChainSampleIteratorSeekHistogramCounterResetHint": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestCheckAddError": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestCheckConfigSyntax": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckDuplicates": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckMetricsExtended": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckRules": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckRulesWithFeatureFlag": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckRulesWithRuleFiles": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckSDFile": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckScrapeConfigs": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckTargetConfig": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestCheckpointNoTmpFolderAfterError": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestCheckpointSeriesReset": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestChunk": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestChunkAtBlockBoundary": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkDiskMapper_Truncate": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkDiskMapper_Truncate_PreservesFileSequence": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkDiskMapper_Truncate_WriteQueueRaceCondition": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkDiskMapper_WriteChunk_Chunk_IterateChunks": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkNotFoundHeadGCRace": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkQuerierOOOQuery": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkQuerierReadWriteRace": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkQueryOOOHeadDuringTruncate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkReader_ConcurrentReads": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkSeriesSetToSeriesSet": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestChunkSnapshot": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkSnapshotReplayBug": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkSnapshotTakenAfterIncompleteSnapshot": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkWriteQueue_GettingChunkFromQueue": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkWriteQueue_HandlerErrorViaCallback": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkWriteQueue_WrappingAroundSizeLimit": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkWriteQueue_WritingThroughQueue": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestChunkWriter_ReadAfterWrite": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestChunkedReaderCanReadFromChunkedWriter": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestChunkedReader_CorruptedFrame": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestChunkedReader_Overflow": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestChunkedSeries": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestChunkedSeriesIterator": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestChunkedSeriesSet": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestChunksRefOrdering": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestChunksTimeOrdering": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestClientCustomHeaders": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestClientRetryAfter": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestClose": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCommit": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestCommitErr_V1Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestCommitErr_V2Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestCompactBlockMetas": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCompactEmptyResultBlockWithTombstone": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCompactHead": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCompactHeadWithDeletion": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCompactingChunkSeriesMerger": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestCompactingChunkSeriesMergerHistogramCounterResetHint": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestCompactionFailWillCleanUpTempDir": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCompaction_populateBlock": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCompareSpansAndInsert": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestCompression": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestCompressionHandler_Deflate": [
      "github.com/prometheus/prometheus/util/httputil/compression.go",
      "github.com/prometheus/prometheus/util/httputil/context.go",
      "github.com/prometheus/prometheus/util/httputil/cors.go"
    ],
    "TestCompressionHandler_Gzip": [
      "github.com/prometheus/prometheus/util/httputil/compression.go",
      "github.com/prometheus/prometheus/util/httputil/context.go",
      "github.com/prometheus/prometheus/util/httputil/cors.go"
    ],
    "TestCompressionHandler_PlainText": [
      "github.com/prometheus/prometheus/util/httputil/compression.go",
      "github.com/prometheus/prometheus/util/httputil/context.go",
      "github.com/prometheus/prometheus/util/httputil/cors.go"
    ],
    "TestComputeChunkEndTime": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestComputeExternalURL": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestConcatenatingChunkIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestConcatenatingChunkSeriesMerger": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestConcreteSeriesClonesLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestConcreteSeriesIterator_FloatAndHistogramSamples": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestConcreteSeriesIterator_FloatSamples": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestConcreteSeriesIterator_HistogramSamples": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestConcreteSeriesSet": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestConcurrentRangeQueries": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestConfigReloadAndShutdownRace": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestConfig_UnmarshalThenMarshal": [
      "github.com/prometheus/prometheus/model/relabel/relabel.go"
    ],
    "TestConfigsCustomUnMarshalMarshal": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestConfiguredService": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestConfiguredServiceWithTag": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestConfiguredServiceWithTags": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestContainsInOrder": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestContentTypeRegex": [
      "github.com/prometheus/prometheus/discovery/http/http.go",
      "github.com/prometheus/prometheus/discovery/http/metrics.go"
    ],
    "TestConvertBucketsLayout": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestConvertClassicHistogramsToNHCB": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestConvertExplicitHistogramBucketsToNHCBLayout": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestCoordinationWithReceiver": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestCopyState": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestCorrectNumTombstones": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCorruptAndCarryOn": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestCorruptedChunk": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCreateAttributes": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestCreateBlock": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestCreateNewHTTPResourceClient": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestCumulativeBucketIterator": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestCustomBucketsHistogramToFloat": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestCustomDo": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestCuttingNewHeadChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBAllowOOOSamples": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestDBAppenderAddRef": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBCannotSeePartialCommits": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBCreatedTimestampSamplesIngestion": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestDBOutOfOrderTimeWindow": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestDBPanicOnMmappingHeadChunk": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBQueryDoesntSeeAppendsAfterCreation": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBReadOnly": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBReadOnlyClosing": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBReadOnly_FlushWAL": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDBReadOnly_Querier_NoAlteration": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDB_InvalidSeries": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestDB_LabelNames": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDB_Snapshot": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDB_SnapshotWithDelete": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDB_Snapshot_ChunksOutsideOfCompactedRange": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDB_e2e": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDB_reloadOrder": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDNS": [
      "github.com/prometheus/prometheus/discovery/dns/dns.go",
      "github.com/prometheus/prometheus/discovery/dns/metrics.go"
    ],
    "TestDataAvailableOnlyAfterCommit": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDataMissingOnQueryDuringCompaction": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDataNotAvailableAfterRollback": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDebugHandler": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestDecbufUvarintWithInvalidBuffer": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestDecodeWriteRequest": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestDecodeWriteV2Request": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestDecoder_Postings_WrongInput": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestDedupe": [
      "github.com/prometheus/prometheus/util/logging/dedupe.go",
      "github.com/prometheus/prometheus/util/logging/file.go"
    ],
    "TestDedupeConcurrent": [
      "github.com/prometheus/prometheus/util/logging/dedupe.go",
      "github.com/prometheus/prometheus/util/logging/file.go"
    ],
    "TestDelayedCompaction": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDelayedCompactionDoesNotBlockUnrelatedOps": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeleteCheckpoints": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestDeleteCompactionBlockAfterFailedReload": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeleteSimple": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeleteUntilCurMax": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDelete_e2e": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeletedIterator": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeletedIterator_WithSeek": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeletedRuleMarkedStale": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDeletingTombstones": [
      "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go"
    ],
    "TestDependenciesEdgeCases": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestDependencyMap": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestDependencyMapUpdatesOnGroupUpdate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestDependentRulesWithNonMetricExpression": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestDeriv": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestDialContextWithRandomConnections": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestDigitalOceanSDRefresh": [
      "github.com/prometheus/prometheus/discovery/digitalocean/digitalocean.go",
      "github.com/prometheus/prometheus/discovery/digitalocean/metrics.go"
    ],
    "TestDisableAutoCompactions": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDisableReshardOnRetry": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestDiscoveredLabelsUpdate": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestDiscoverer": [
      "github.com/prometheus/prometheus/discovery/ovhcloud/dedicated_server.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/metrics.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/ovhcloud.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/vps.go"
    ],
    "TestDiscovererConfigs": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestDiskFillingUpAfterDisablingOOO": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDockerSDRefresh": [
      "github.com/prometheus/prometheus/discovery/moby/docker.go",
      "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/network.go",
      "github.com/prometheus/prometheus/discovery/moby/nodes.go",
      "github.com/prometheus/prometheus/discovery/moby/services.go",
      "github.com/prometheus/prometheus/discovery/moby/tasks.go"
    ],
    "TestDockerSDRefreshMatchAllNetworks": [
      "github.com/prometheus/prometheus/discovery/moby/docker.go",
      "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/network.go",
      "github.com/prometheus/prometheus/discovery/moby/nodes.go",
      "github.com/prometheus/prometheus/discovery/moby/services.go",
      "github.com/prometheus/prometheus/discovery/moby/tasks.go"
    ],
    "TestDockerSwarmNodesSDRefresh": [
      "github.com/prometheus/prometheus/discovery/moby/docker.go",
      "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/network.go",
      "github.com/prometheus/prometheus/discovery/moby/nodes.go",
      "github.com/prometheus/prometheus/discovery/moby/services.go",
      "github.com/prometheus/prometheus/discovery/moby/tasks.go"
    ],
    "TestDockerSwarmSDServicesRefresh": [
      "github.com/prometheus/prometheus/discovery/moby/docker.go",
      "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/network.go",
      "github.com/prometheus/prometheus/discovery/moby/nodes.go",
      "github.com/prometheus/prometheus/discovery/moby/services.go",
      "github.com/prometheus/prometheus/discovery/moby/tasks.go"
    ],
    "TestDockerSwarmSDServicesRefreshWithFilters": [
      "github.com/prometheus/prometheus/discovery/moby/docker.go",
      "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/network.go",
      "github.com/prometheus/prometheus/discovery/moby/nodes.go",
      "github.com/prometheus/prometheus/discovery/moby/services.go",
      "github.com/prometheus/prometheus/discovery/moby/tasks.go"
    ],
    "TestDockerSwarmTasksSDRefresh": [
      "github.com/prometheus/prometheus/discovery/moby/docker.go",
      "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go",
      "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go",
      "github.com/prometheus/prometheus/discovery/moby/network.go",
      "github.com/prometheus/prometheus/discovery/moby/nodes.go",
      "github.com/prometheus/prometheus/discovery/moby/services.go",
      "github.com/prometheus/prometheus/discovery/moby/tasks.go"
    ],
    "TestDocumentation": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestDropOldTimeSeries": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestDroppedAlertmanagers": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestDroppedTargetsList": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestDuplicateNaNDatapointNoAmendError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestDurationExprPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestDurationVisitor": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEC2DiscoveryRefresh": [
      "github.com/prometheus/prometheus/discovery/aws/ec2.go",
      "github.com/prometheus/prometheus/discovery/aws/lightsail.go",
      "github.com/prometheus/prometheus/discovery/aws/metrics_ec2.go",
      "github.com/prometheus/prometheus/discovery/aws/metrics_lightsail.go"
    ],
    "TestEC2DiscoveryRefreshAZIDs": [
      "github.com/prometheus/prometheus/discovery/aws/ec2.go",
      "github.com/prometheus/prometheus/discovery/aws/lightsail.go",
      "github.com/prometheus/prometheus/discovery/aws/metrics_ec2.go",
      "github.com/prometheus/prometheus/discovery/aws/metrics_lightsail.go"
    ],
    "TestElideSecrets": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestEmptyConfig": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestEmptyGlobalBlock": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestEmptyLabelsetCausesError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestEncodeDecode": [
      "github.com/prometheus/prometheus/util/compression/buffers.go",
      "github.com/prometheus/prometheus/util/compression/compression.go"
    ],
    "TestEndpointSliceDiscoveryAdd": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryBeforeRun": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryDelete": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryEmptyEndpoints": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryEmptyPodStatus": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryNamespaces": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryOwnNamespace": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoverySidecarContainer": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryWithService": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceDiscoveryWithServiceUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointSliceInfIndexersCount": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpoints": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestEndpointsDiscoveryAdd": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryBeforeRun": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryDelete": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryEmptyPodStatus": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryEmptySubsets": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryNamespaces": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryOwnNamespace": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoverySidecarContainer": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryUpdatePod": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryWithNodeMetadata": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryWithService": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryWithServiceUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsDiscoveryWithUpdatedNodeMetadata": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsSlicesDiscoveryWithNodeMetadata": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestEngineEvalStmtTimestamps": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEngineOptsValidation": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEngineShutdown": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEngine_Close": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEqual": [
      "github.com/prometheus/prometheus/util/almost/almost.go"
    ],
    "TestEqualMultiStringMapMatcher_addPrefix": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestEqualMultiStringMatcher_Matches": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestErrDuplicateSampleForTimestamp": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestErrReuseAppender": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestError": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestErrorInitClient": [
      "github.com/prometheus/prometheus/discovery/ovhcloud/dedicated_server.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/metrics.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/ovhcloud.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/vps.go"
    ],
    "TestErrorUnwrap": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestEurekaSDEmptyList": [
      "github.com/prometheus/prometheus/discovery/eureka/client.go",
      "github.com/prometheus/prometheus/discovery/eureka/eureka.go",
      "github.com/prometheus/prometheus/discovery/eureka/metrics.go"
    ],
    "TestEurekaSDHandleError": [
      "github.com/prometheus/prometheus/discovery/eureka/client.go",
      "github.com/prometheus/prometheus/discovery/eureka/eureka.go",
      "github.com/prometheus/prometheus/discovery/eureka/metrics.go"
    ],
    "TestEurekaSDSendGroup": [
      "github.com/prometheus/prometheus/discovery/eureka/client.go",
      "github.com/prometheus/prometheus/discovery/eureka/eureka.go",
      "github.com/prometheus/prometheus/discovery/eureka/metrics.go"
    ],
    "TestEvaluationWithDelayedNameRemovalDisabled": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEvaluations": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestEveryNTimes": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestExitCodes": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestExpandExternalLabels": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestExponentialToNativeHistogram": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestExprPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestExprString": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestExternalLabels": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestExternalLabelsQuerierAddExternalLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestExtractQueryOpts": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestExtractSelectors": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestFailedStartupExitCode": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestFailuresCountMetric": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestFanoutErrors": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestFanout_SelectSorted": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestFastRegexMatcher_MatchString": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestFastRegexMatcher_SetMatches_ShouldReturnACopy": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestFederation": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestFederationWithNativeHistograms": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestFederation_NotReady": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestFetchApps": [
      "github.com/prometheus/prometheus/discovery/eureka/client.go",
      "github.com/prometheus/prometheus/discovery/eureka/eureka.go",
      "github.com/prometheus/prometheus/discovery/eureka/metrics.go"
    ],
    "TestFileUpdate": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestFilterExternalLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestFilterOption": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestFindEqualOrPrefixStringMatchers": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestFindIntersectingPostings": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestFindSetMatches": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestFirstFloatHistogramExplicitCounterReset": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFirstHistogramExplicitCounterReset": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatBucketIteratorTargetSchema": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatCustomBucketsIterators": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramAdd": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramAppendOnlyErrors": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramChunkAppendable": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramChunkAppendableGauge": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramChunkAppendableWithEmptySpan": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramChunkBucketChanges": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramChunkSameBuckets": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramCompact": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramCopy": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramCopyTo": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramCopyToSchema": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramDetectReset": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramDiv": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramEquals": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramMul": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramReduceResolution": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramSize": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramString": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramSub": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestFloatHistogramUniqueCustomValuesAfterNext": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestFloatHistogramUniqueSpansAfterNext": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestForStateAddSamples": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestForStateRestore": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestFromFloatToFloatHistogram": null,
    "TestFromIntOrFloatHistogram_ResetHint": null,
    "TestFromIntToFloatOrIntHistogram": null,
    "TestFromMetadataType": null,
    "TestFromMetrics": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestFromOriginContext": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestFromQueryResultWithDuplicates": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestFullTruncateWAL": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestFunctionList": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestGCChunkAccess": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestGCSeriesAccess": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestGaugeFailedConfigs": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestGaugeFloatHistogramWALAndChunkHeader": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestGaugeHistogramWALAndChunkHeader": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestGenerateBucket": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestGenerateChecksum": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestGenerateCompactionDelay": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestGenerateTargetGroups": [
      "github.com/prometheus/prometheus/documentation/examples/custom-sd/adapter/adapter.go"
    ],
    "TestGetBoundExponential": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestGetBucketCountsAtTime": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestGetDatacenterShouldReturnError": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestGetGlobalURL": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestGetPromExemplars": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestGetScrapeConfigs": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestGetScrapeConfigs_Loaded": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestGetSeries": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestGroupHasAlertingRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestGroupStalenessOnRemoval": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestGroup_Equals": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestGroup_Eval_RaceConditionOnStoppingGroupEvaluationWhileRulesAreEvaluatedConcurrently": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestGroup_QueryOffset": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestHCloudSDRefresh": [
      "github.com/prometheus/prometheus/discovery/hetzner/hcloud.go",
      "github.com/prometheus/prometheus/discovery/hetzner/hetzner.go",
      "github.com/prometheus/prometheus/discovery/hetzner/metrics.go",
      "github.com/prometheus/prometheus/discovery/hetzner/robot.go"
    ],
    "TestHTTPInvalidCode": [
      "github.com/prometheus/prometheus/discovery/http/http.go",
      "github.com/prometheus/prometheus/discovery/http/metrics.go"
    ],
    "TestHTTPInvalidFormat": [
      "github.com/prometheus/prometheus/discovery/http/http.go",
      "github.com/prometheus/prometheus/discovery/http/metrics.go"
    ],
    "TestHTTPMetrics": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestHTTPResourceClientFetchEmptyResponse": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestHTTPResourceClientFetchFullResponse": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestHTTPResourceClientServerError": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestHTTPValidRefresh": [
      "github.com/prometheus/prometheus/discovery/http/http.go",
      "github.com/prometheus/prometheus/discovery/http/metrics.go"
    ],
    "TestHandleMultipleQuitRequests": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestHandlerNextBatch": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestHandlerQueuing": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestHandlerRelabel": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestHandlerSendAll": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestHandlerSendAllRemapPerAm": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestHangingNotifier": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestHasPrefixCaseInsensitive": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestHasSuffixCaseInsensitive": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestHeadAppendHistogramAndCommitConcurrency": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadAppender_AppendCT": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadAppender_AppendHistogramCTZeroSample": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadCompactableDoesNotCompactEmptyHead": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadCompactionWhileAppendAndCommitExemplar": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadCompactionWhileScraping": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestHeadCompactionWithHistograms": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadDeleteSeriesWithoutSamples": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadDeleteSimple": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadDetectsDuplicateSampleAtSizeLimit": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadExemplars": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadIndexReader_PostingsForLabelMatching": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadInit_DiscardChunksWithUnsupportedEncoding": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadLabelNamesValuesWithMinMaxRange": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadLabelNamesWithMatchers": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadLabelValuesWithMatchers": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadMinOOOTimeUpdate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadMintAfterTruncation": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadReadWriterRepair": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadReadWriter_ReadRepairOnEmptyLastFile": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestHeadReadWriter_TruncateAfterFailedIterateChunks": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestHeadSeriesChunkRace": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHeadShardedPostings": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_ActiveAppenders": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_HighConcurrencyReadAndWrite": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_KeepSeriesInWALCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_LogRollback": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_RaceBetweenSeriesCreationAndGC": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_ReadWAL": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_ReturnsSortedLabelValues": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_Truncate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_UnknownWALRecord": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHead_WALMultiRef": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHistogramAppendAndQuery": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHistogramAppendOnlyErrors": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramChunkAppendable": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramChunkAppendableGauge": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramChunkAppendableWithEmptySpan": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramChunkBucketChanges": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramChunkSameBuckets": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramCompact": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramCopy": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramCopyFromIteratorRegression": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestHistogramCopyTo": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramCounterResetHeader": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramCustomValuesInternedAfterNextWithAtHistogram": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramEquals": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramFixtureValid": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestHistogramInWALAndMmapChunk": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHistogramMetrics": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHistogramQuantileAnnotations": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestHistogramRateWithFloatStaleness": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestHistogramReduceResolution": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramSeriesToChunks": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestHistogramStaleSample": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestHistogramStatsDecoding": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestHistogramStatsMixedUse": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestHistogramString": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramTestExpression": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestHistogramToCustomBucketsHistogram": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestHistogramToFloat": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramUniqueSpansAfterNextWithAtHistogram": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestHistogramValidation": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestIONOSServerRefresh": [
      "github.com/prometheus/prometheus/discovery/ionos/ionos.go",
      "github.com/prometheus/prometheus/discovery/ionos/metrics.go",
      "github.com/prometheus/prometheus/discovery/ionos/server.go"
    ],
    "TestIdenticalConfigurationsAreCoalesced": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestIgnoreExternalLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestIgnoreOverriddenMetadataLabelsScratchBuilder": [
      "github.com/prometheus/prometheus/schema/labels.go"
    ],
    "TestInconsistentHistogramCount": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestIndexOverwrite": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIndexRW_Create_Open": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestIndexRW_Postings": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestIndexReuse": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestInfo": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestIngressDiscoveryAdd": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestIngressDiscoveryAddMixed": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestIngressDiscoveryAddTLS": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestIngressDiscoveryNamespaces": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestIngressDiscoveryOwnNamespace": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestInitialUpdate": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestInitializeHeadTimestamp": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestInstallingNewTracerProvider": [
      "github.com/prometheus/prometheus/tracing/tracing.go"
    ],
    "TestInstantQueryWithRangeVectorSelector": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIntern": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestIntern_DeleteRef": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestIntern_MultiRef": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestIntern_MultiRef_Concurrent": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestInteropV1UnmarshalWithV2_DeterministicEmpty": [
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/codec.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/custom.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/symbols.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/types.pb.go"
    ],
    "TestInteropV2UnmarshalWithV1_DeterministicEmpty": [
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/codec.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/custom.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/symbols.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/types.pb.go"
    ],
    "TestIntersect": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestIntersectWithMerge": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestInvalidFile": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestInvalidFileUpdate": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestInverse": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestIsQuerierCollidingWithTruncation": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIsRegexOptimized": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestIsSampleOld": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestIsSeriesPartOfFamily": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestIsolation": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIsolationAppendIDZeroIsNoop": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIsolationLowWatermarkMonotonous": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIsolationRollback": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIsolationWithoutAdd": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestIteratorSeekIntoBuffer": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestJSONFileLogger_basic": [
      "github.com/prometheus/prometheus/util/logging/dedupe.go",
      "github.com/prometheus/prometheus/util/logging/file.go"
    ],
    "TestJSONFileLogger_parallel": [
      "github.com/prometheus/prometheus/util/logging/dedupe.go",
      "github.com/prometheus/prometheus/util/logging/file.go"
    ],
    "TestJsonCodec_Encode": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestJunitOutput": [
      "github.com/prometheus/prometheus/util/junitxml/junitxml.go"
    ],
    "TestKahanSumInc": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestKeepFiringFor": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestKubernetesEmptyAPIServer": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestKubernetesSelectors": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestKubernetesWithKubeConfig": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestKumaHTTPDiscoveryRefresh": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestKumaMadsV1ResourceParserEmptySlice": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestKumaMadsV1ResourceParserInvalidResources": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestKumaMadsV1ResourceParserInvalidTypeURL": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestKumaMadsV1ResourceParserValidResources": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestLabelNames": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestLabelNamesWithMatchers": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestLabelSetNotReused": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestLabelValuesWithMatchers": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestLabelsToOpenAPILabelSet": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestLabels_BytesWithLabels": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_BytesWithoutLabels": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Compare": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Copy": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_DropMetricName": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_DropReserved": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Equal": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_FromMaps": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestLabels_FromStrings": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Get": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Has": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_HasDuplicateLabelNames": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Hash": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_IsValid": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_Map": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_MatchLabels": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_String": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_ValidationModes": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLabels_WithoutEmpty": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLastCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestLazyLoader_WithSamplesTill": [
      "github.com/prometheus/prometheus/promql/promqltest/test.go",
      "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go"
    ],
    "TestLeQuantileReLabel": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestLeveledCompactor_plan": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestLexer": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestLink": [
      "github.com/prometheus/prometheus/util/strutil/quote.go",
      "github.com/prometheus/prometheus/util/strutil/strconv.go"
    ],
    "TestLinodeSDRefresh": [
      "github.com/prometheus/prometheus/discovery/linode/linode.go",
      "github.com/prometheus/prometheus/discovery/linode/metrics.go"
    ],
    "TestListPostings": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestListSeriesIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestLiteralPrefixInsensitiveStringMatcher": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLiteralPrefixSensitiveStringMatcher": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLiteralSuffixStringMatcher": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestLiveReaderCorrupt_RecordTooLongAndShort": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestLiveReaderCorrupt_ShortFile": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestLoadConfig": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestLoadConfigRuleFilesAbsolutePath": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestLockfile": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestLocking": [
      "github.com/prometheus/prometheus/tsdb/fileutil/dir.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/dir_unix.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/direct_io.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/direct_io_unsupported.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/fileutil.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/flock.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/flock_unix.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/mmap.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/mmap_unix.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/preallocate.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/preallocate_darwin.go",
      "github.com/prometheus/prometheus/tsdb/fileutil/sync_darwin.go"
    ],
    "TestLogPartialWrite": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestMIMEType_Satisfies": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestMIMEType_String": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestMMapFile": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestMakeXDSResourceHttpEndpoint": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestMakeXDSResourceHttpEndpointEmptyServerURLHost": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestMakeXDSResourceHttpEndpointEmptyServerURLScheme": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestManagerApplyConfig": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestManagerCTZeroIngestion": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestManagerCTZeroIngestionHistogram": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestManagerScrapePools": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestManagerTargetsUpdates": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestManager_LoadGroups_ShouldCheckWhetherEachRuleHasDependentsAndDependencies": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestMapFromVMScaleSetVMWithEmptyOSType": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestMapFromVMScaleSetVMWithEmptyTags": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestMapFromVMScaleSetVMWithTags": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestMapFromVMWithEmptyOSType": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestMapFromVMWithEmptyTags": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestMapFromVMWithTags": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestMarathonSDEmptyList": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDHandleError": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDRemoveApp": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroup": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithContainerNetworkAndPortMapping": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithContainerPortMappings": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithDockerContainerPortMappings": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithMultiplePort": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithPortDefinitions": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithPortDefinitionsRequirePorts": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonSDSendGroupWithPorts": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarathonZeroTaskPorts": [
      "github.com/prometheus/prometheus/discovery/marathon/marathon.go",
      "github.com/prometheus/prometheus/discovery/marathon/metrics.go"
    ],
    "TestMarshaling": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestMatcher": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestMatrix_ContainsSameLabelset": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestMaxBlockChunkSegmentSizeBounds": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestMaxQuerySamples": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestMaxSchemaAppender": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestMaxSubscribers": [
      "github.com/prometheus/prometheus/util/notifications/notifications.go"
    ],
    "TestMemPostingsStats": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemPostings_Delete": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemPostings_PostingsForAllLabelValues": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemPostings_PostingsForLabelMatching": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemPostings_PostingsForLabelMatchingHonorsContextCancel": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemPostings_addFor": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemPostings_ensureOrder": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMemSeriesIsolation": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemSeries_append": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemSeries_appendHistogram": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemSeries_append_atVariableRate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemSeries_chunk": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemSeries_truncateChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemSeries_truncateChunks_scenarios": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMemTombstonesConcurrency": [
      "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go"
    ],
    "TestMemoizedSeriesIterator": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestMergeLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestMergeQuerierConcurrentSelectMatchers": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMergeQuerierWithChainMerger": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestMergeQuerierWithSecondaries_ErrorHandling": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestMergedPostings": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMergedPostingsSeek": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMetadata": [
      "github.com/prometheus/prometheus/schema/labels.go"
    ],
    "TestMetadataAssertInMemoryData": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMetadataCheckpointingOnlyKeepsLatestEntry": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMetadataDelivery": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestMetadataInWAL": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMetricStreamingDecoder": [
      "github.com/prometheus/prometheus/prompb/io/prometheus/client/decoder.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/client/metrics.pb.go"
    ],
    "TestMetricTextToWriteRequestErrorParsingFloatValue": [
      "github.com/prometheus/prometheus/util/fmtutil/format.go"
    ],
    "TestMetricTextToWriteRequestErrorParsingMetricType": [
      "github.com/prometheus/prometheus/util/fmtutil/format.go"
    ],
    "TestMetricsStalenessOnManagerShutdown": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestMetricsUpdate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestMigrateTestData_BasicMode": [
      "github.com/prometheus/prometheus/promql/promqltest/test.go",
      "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go"
    ],
    "TestMigrateTestData_StrictMode": [
      "github.com/prometheus/prometheus/promql/promqltest/test.go",
      "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go"
    ],
    "TestMigrateTestData_TolerantMode": [
      "github.com/prometheus/prometheus/promql/promqltest/test.go",
      "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go"
    ],
    "TestMmapPanicAfterMmapReplayCorruption": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMockSeries": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestModeSpecificFlags": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestMultiError_As": [
      "github.com/prometheus/prometheus/tsdb/errors/errors.go"
    ],
    "TestMultiError_Is": [
      "github.com/prometheus/prometheus/tsdb/errors/errors.go"
    ],
    "TestMultiIntersect": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMultiMerge": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestMultipleEncodingsCommitOrder": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestMultipleListenAddresses": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestMultipleSubscribers": [
      "github.com/prometheus/prometheus/util/notifications/notifications.go"
    ],
    "TestNHCBConvert": [
      "github.com/prometheus/prometheus/util/convertnhcb/convertnhcb.go"
    ],
    "TestNHCBParserErrorHandling": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestNHCBParserOMParser_MultipleHistograms": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestNHCBParserOnOMParser": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestNHCBParserResetLastExponential": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestNHCBParser_NoNHCBWhenExponential": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestNaNExpression": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestNativeHistogramFlag": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNativeHistogramMaxSchemaSet": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNativeHistogramsInRecordingRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNegotiateResponseType": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestNewAzureResourceFromID": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestNewClientWithBadTLSConfig": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewCompactorFunc": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNewDiscoveryError": [
      "github.com/prometheus/prometheus/discovery/zookeeper/zookeeper.go"
    ],
    "TestNewEqualMultiStringMatcher": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestNewFileReaderErrorNoOpenFiles": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestNewHTTPBasicAuth": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewHTTPBearerToken": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewHTTPBearerTokenFile": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewHTTPCACert": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewHTTPClientCert": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewHTTPWithBadServerName": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewHTTPWithServerName": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewKumaHTTPDiscovery": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestNewParser": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestNewRuleDetail": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNewRuleDetailPanics": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNewRuleGroupRestoration": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNewRuleGroupRestorationWithRestoreNewGroupOption": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNewScrapePool": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestNewWalSegmentOnTruncate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoDeadlock": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestNoDependency": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNoDuplicateReadConfigs": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestNoEmptyBlocks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoGapAfterRestartWithOOO": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoMetricSelector": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestNoPanicAfterWALCorruption": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoPanicFor0Tombstones": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoPanicOnTSDBOpenError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoTargets": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestNodeDiscoveryAdd": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestNodeDiscoveryBeforeStart": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestNodeDiscoveryDelete": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestNodeDiscoveryUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestNodeName": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestNomadSDRefresh": [
      "github.com/prometheus/prometheus/discovery/nomad/metrics.go",
      "github.com/prometheus/prometheus/discovery/nomad/nomad.go"
    ],
    "TestNonConfiguredService": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestNonDuplicateNaNDatapointsCausesAmendError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNoopFileUpdate": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestNotMatcherSelectsLabelsUnsetSeries": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestNotificationLifecycle": [
      "github.com/prometheus/prometheus/util/notifications/notifications.go"
    ],
    "TestNotify": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestOMNullByteHandling": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestOOOAppendAndQuery": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOAppendWithNoSeries": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOChunks_ToEncodedChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOCompaction": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOCompactionFailure": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOCompactionWithDisabledWriteLog": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOCompactionWithNormalCompaction": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOODisabled": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOHeadChunkReader_Chunk": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOHeadChunkReader_LabelValues": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOHeadIndexReader_Series": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOHistogramCompactionWithCounterResets": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOHistogramCounterResetHeaders": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOInsert": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOInsertDuplicate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOInterleavedImplicitCounterResets": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOIsolation": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOMmapCorruption": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOMmapReplay": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOONativeHistogramsSettings": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOONativeHistogramsWithCounterResets": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOOOWALWrite": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOTLPAllowServiceNameInTargetInfo": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestOTLPAllowUTF8": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestOTLPConvertHistogramsToNHCB": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestOTLPDelta": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestOTLPPromoteScopeMetadata": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestOTLPSanitizeResourceAttributes": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestOTLPWriteHandler": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestOneCheckpointPerCompactCall": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOneService": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestOnlyProviderStaleTargetsAreDropped": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestOnlyStaleTargetsAreDropped": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestOpenMetricsParse": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestOpenMetricsParseErrors": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestOpenMetricsParse_UTF8": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestOpen_VariousBlockStates": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOpenstackSDHypervisorRefresh": [
      "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go",
      "github.com/prometheus/prometheus/discovery/openstack/instance.go",
      "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go",
      "github.com/prometheus/prometheus/discovery/openstack/metrics.go",
      "github.com/prometheus/prometheus/discovery/openstack/openstack.go"
    ],
    "TestOpenstackSDHypervisorRefreshWithDoneContext": [
      "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go",
      "github.com/prometheus/prometheus/discovery/openstack/instance.go",
      "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go",
      "github.com/prometheus/prometheus/discovery/openstack/metrics.go",
      "github.com/prometheus/prometheus/discovery/openstack/openstack.go"
    ],
    "TestOpenstackSDInstanceRefresh": [
      "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go",
      "github.com/prometheus/prometheus/discovery/openstack/instance.go",
      "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go",
      "github.com/prometheus/prometheus/discovery/openstack/metrics.go",
      "github.com/prometheus/prometheus/discovery/openstack/openstack.go"
    ],
    "TestOpenstackSDInstanceRefreshWithDoneContext": [
      "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go",
      "github.com/prometheus/prometheus/discovery/openstack/instance.go",
      "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go",
      "github.com/prometheus/prometheus/discovery/openstack/metrics.go",
      "github.com/prometheus/prometheus/discovery/openstack/openstack.go"
    ],
    "TestOpenstackSDLoadBalancerRefresh": [
      "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go",
      "github.com/prometheus/prometheus/discovery/openstack/instance.go",
      "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go",
      "github.com/prometheus/prometheus/discovery/openstack/metrics.go",
      "github.com/prometheus/prometheus/discovery/openstack/openstack.go"
    ],
    "TestOpenstackSDLoadBalancerRefreshWithDoneContext": [
      "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go",
      "github.com/prometheus/prometheus/discovery/openstack/instance.go",
      "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go",
      "github.com/prometheus/prometheus/discovery/openstack/metrics.go",
      "github.com/prometheus/prometheus/discovery/openstack/openstack.go"
    ],
    "TestOptimizeConcatRegex": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestOptimizeEqualOrPrefixStringMatchers": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestOptimizedMarshal": [
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/codec.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/custom.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/symbols.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/types.pb.go"
    ],
    "TestOptionsMethod": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestOutOfOrderExemplar_V1Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestOutOfOrderHistogram_V1Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestOutOfOrderRuntimeConfig": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOutOfOrderSample_V1Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestOutOfOrderSamplesMetric": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOverlappingBlocksDetectsAllOverlaps": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestOvhCloudVpsRefresh": [
      "github.com/prometheus/prometheus/discovery/ovhcloud/dedicated_server.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/metrics.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/ovhcloud.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/vps.go"
    ],
    "TestOvhcloudDedicatedServerRefresh": [
      "github.com/prometheus/prometheus/discovery/ovhcloud/dedicated_server.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/metrics.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/ovhcloud.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/vps.go"
    ],
    "TestPanicOnApplyConfig": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestParenExprPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestParseAndPushMetricsTextAndFormat": [
      "github.com/prometheus/prometheus/util/fmtutil/format.go"
    ],
    "TestParseBrokenJSON": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestParseCustomFunctions": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestParseDuration": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestParseExpressions": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestParseFileFailure": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestParseFileSuccess": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestParseFileSuccessWithAliases": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestParseFiles": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestParseHistogramSeries": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestParseIPs": [
      "github.com/prometheus/prometheus/discovery/ovhcloud/dedicated_server.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/metrics.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/ovhcloud.go",
      "github.com/prometheus/prometheus/discovery/ovhcloud/vps.go"
    ],
    "TestParseSeries": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestParseSeriesDesc": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestParseTime": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestParseTimeParam": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestPartialTruncateWAL": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestPendingAndKeepFiringFor": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestPersistence_index_e2e": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestPickSchema": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestPodDiscoveryAdd": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryBeforeRun": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryDelete": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryInitContainer": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryNamespaces": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryOwnNamespace": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryUpdateEmptyPodIP": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryWithNodeMetadata": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPodDiscoveryWithNodeMetadataUpdateNode": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestPollingDisappearingTargets": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestPollingRefreshAttachesGroupMetadata": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestPollingRefreshSkipUpdate": [
      "github.com/prometheus/prometheus/discovery/xds/client.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma.go",
      "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go",
      "github.com/prometheus/prometheus/discovery/xds/metrics.go",
      "github.com/prometheus/prometheus/discovery/xds/xds.go"
    ],
    "TestPool": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestPopulateLabels": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestPopulateWithDelSeriesIterator_DoubleSeek": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPopulateWithDelSeriesIterator_NextWithMinTime": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPopulateWithDelSeriesIterator_SeekWithMinTime": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPopulateWithTombSeriesIterators": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPostPath": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestPostingsCardinalityStats": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPostingsForMatcher": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPostingsForMatchers": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestPostingsMany": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestPostingsStats": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestPostingsStats2": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestPostingsWithIndexHeap": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestPrefix": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestPreprocessAndWrapWithStepInvariantExpr": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestProcessExternalLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestPromNullByteHandling": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestPromParse": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestPromParseErrors": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestPromTextToProto": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestPrometheusConverter_AddHistogramDataPoints": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestPrometheusConverter_AddSummaryDataPoints": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestPrometheusConverter_addCustomBucketsHistogramDataPoints": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestPrometheusConverter_addExponentialHistogramDataPoints": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestPrometheusConverter_addGaugeNumberDataPoints": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestPrometheusConverter_addSumNumberDataPoints": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestProtobufParse": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestProviderStaleTargetsAreDropped": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestPuppetDBInvalidCode": [
      "github.com/prometheus/prometheus/discovery/puppetdb/metrics.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/puppetdb.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/resources.go"
    ],
    "TestPuppetDBInvalidFormat": [
      "github.com/prometheus/prometheus/discovery/puppetdb/metrics.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/puppetdb.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/resources.go"
    ],
    "TestPuppetDBRefresh": [
      "github.com/prometheus/prometheus/discovery/puppetdb/metrics.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/puppetdb.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/resources.go"
    ],
    "TestPuppetDBRefreshWithParameters": [
      "github.com/prometheus/prometheus/discovery/puppetdb/metrics.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/puppetdb.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/resources.go"
    ],
    "TestPuppetSlashInURL": [
      "github.com/prometheus/prometheus/discovery/puppetdb/metrics.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/puppetdb.go",
      "github.com/prometheus/prometheus/discovery/puppetdb/resources.go"
    ],
    "TestQuerierIndexQueriesRace": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQuerierOOOQuery": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQuerierWithBoundaryChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQueryCancel": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryConcurrency": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryError": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryExemplars": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestQueryForStateSeries": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestQueryHistogramFromBlocksWithCompaction": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQueryInstant": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestQueryLog": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestQueryLogger_basic": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryLogger_error": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryLogger_fields": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryLogging": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryLookbackDelta": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryOOOHeadDuringTruncate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQueryRange": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestQueryStatistics": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryStatsWithSpanTimers": [
      "github.com/prometheus/prometheus/util/stats/query_stats.go",
      "github.com/prometheus/prometheus/util/stats/timer.go"
    ],
    "TestQueryStatsWithTimersAndSamples": [
      "github.com/prometheus/prometheus/util/stats/query_stats.go",
      "github.com/prometheus/prometheus/util/stats/timer.go"
    ],
    "TestQueryTimeout": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestQueryWithDeletedHistograms": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQueryWithOneChunkCompletelyDeleted": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestQueueFilledDeadlock": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestQueueManagerMetrics": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestQueuePopAfterCloseReturnsAllElements": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueuePopBlocksOnEmptyQueue": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueuePopUnblocksOnClose": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueuePushBlocksOnFullQueue": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueuePushPopManyGoroutines": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueuePushPopSingleGoroutine": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueueSegmentIsKeptEvenIfEmpty": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestQueue_FlushAndShutdownDoesNotDeadlock": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestRangeForTimestamp": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestRangeWithFailedCompactionWontGetSelected": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestRateAnnotations": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestReadCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReadCheckpointMultipleSegments": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReadClient": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestReadIndexFormatV1": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestReadToEndNoCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReadToEndWithCheckpoint": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReader": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReaderData": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReaderFuzz": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReaderFuzz_Live": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReaderWithInvalidBuffer": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestReader_LabelNamesForHonorsContextCancel": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestReader_Live": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestReader_PostingsForAllLabelValues": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestReader_PostingsForLabelMatching": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestReader_PostingsForLabelMatchingHonorsContextCancel": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestReadyAndHealthy": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestRecord_Corrupted": [
      "github.com/prometheus/prometheus/tsdb/record/record.go"
    ],
    "TestRecord_EncodeDecode": [
      "github.com/prometheus/prometheus/tsdb/record/record.go"
    ],
    "TestRecord_MetadataDecodeUnknownExtraFields": [
      "github.com/prometheus/prometheus/tsdb/record/record.go"
    ],
    "TestRecord_Type": [
      "github.com/prometheus/prometheus/tsdb/record/record.go"
    ],
    "TestRecordingEvalWithOrigin": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRecordingRuleLimit": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRecordingRule_SetDependencyRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRecordingRule_SetDependentRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRecoverEvaluatorError": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestRecoverEvaluatorErrorWithWarnings": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestRecoverEvaluatorRuntime": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestRecoverParserError": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestRecoverParserRuntime": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestReduceResolutionFloatHistogram": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestReduceResolutionHistogram": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestRefresh": [
      "github.com/prometheus/prometheus/discovery/refresh/refresh.go"
    ],
    "TestRegexp_JSONUnmarshalThenMarshal": [
      "github.com/prometheus/prometheus/model/relabel/relabel.go"
    ],
    "TestRegexp_ShouldMarshalAndUnmarshalZeroValue": [
      "github.com/prometheus/prometheus/model/relabel/relabel.go"
    ],
    "TestRegularBucketIterator": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestReinstallingTracerProvider": [
      "github.com/prometheus/prometheus/tracing/tracing.go"
    ],
    "TestReinstallingTracerProviderWithTLS": [
      "github.com/prometheus/prometheus/tracing/tracing.go"
    ],
    "TestRelabel": [
      "github.com/prometheus/prometheus/model/relabel/relabel.go"
    ],
    "TestRelabelValidate": [
      "github.com/prometheus/prometheus/model/relabel/relabel.go"
    ],
    "TestReleaseNoninternedString": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestReload": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestRemoteWriteHandlerHeadersHandling_V1Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestRemoteWriteHandlerHeadersHandling_V2Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestRemoteWriteHandler_V1Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestRemoteWriteHandler_V2Message": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestRemoteWriteRetryOnRateLimit": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestRemoveFile": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestRemoveSeriesAfterRollbackAndTruncate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestRemovedNextStackoverflow": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestRemovedPostings": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestRemovedPostingsSeek": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestRepairBadIndexVersion": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestReplayAfterMmapReplayError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestReshard": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestReshardPartialBatch": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestReshardRaceWithStop": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestResize": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestRespondError": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestRespondSuccess": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestRespondSuccess_DefaultCodecCannotEncodeResponse": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestRetentionDurationMetric": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestRetryAfterDuration": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestRetryOnError": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestReturnAPIError": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestReusableConfig": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestReuseCacheRace": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestReuseScrapeCache": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestReverseFloatBucketIterator": [
      "github.com/prometheus/prometheus/model/histogram/float_histogram.go",
      "github.com/prometheus/prometheus/model/histogram/generic.go",
      "github.com/prometheus/prometheus/model/histogram/histogram.go",
      "github.com/prometheus/prometheus/model/histogram/test_utils.go"
    ],
    "TestRobotSDRefresh": [
      "github.com/prometheus/prometheus/discovery/hetzner/hcloud.go",
      "github.com/prometheus/prometheus/discovery/hetzner/hetzner.go",
      "github.com/prometheus/prometheus/discovery/hetzner/metrics.go",
      "github.com/prometheus/prometheus/discovery/hetzner/robot.go"
    ],
    "TestRobotSDRefreshHandleError": [
      "github.com/prometheus/prometheus/discovery/hetzner/hcloud.go",
      "github.com/prometheus/prometheus/discovery/hetzner/hetzner.go",
      "github.com/prometheus/prometheus/discovery/hetzner/metrics.go",
      "github.com/prometheus/prometheus/discovery/hetzner/robot.go"
    ],
    "TestRollback": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestRoutePrefix": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestRuleDependencyController_AnalyseRules": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRuleEval": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRuleEvalDuplicate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRuleGroupEvalIterationFunc": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRuleHealthUpdates": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRuleMovedBetweenGroups": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRulesDependentOnMetaMetrics": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestRulesUnitTest": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestRulesUnitTestRun": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestRunTest": [
      "github.com/prometheus/prometheus/promql/promqltest/test.go",
      "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go"
    ],
    "TestRun_AvoidNotifyWhenBehind": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestRun_StartupTime": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestRuntimeGOGCConfig": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestRwProtoMsgFlagParser": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestSDCheckResult": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestSDConfigUnmarshalYAML": [
      "github.com/prometheus/prometheus/discovery/dns/dns.go",
      "github.com/prometheus/prometheus/discovery/dns/metrics.go"
    ],
    "TestSampleAndChunkQueryableClient": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSampleDelivery": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSampleDeliveryOrder": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSampleDeliveryTimeout": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSampleRing": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestSampleRingAtFloatHistogram": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestSampleRingMixed": [
      "github.com/prometheus/prometheus/storage/buffer.go",
      "github.com/prometheus/prometheus/storage/errors.go",
      "github.com/prometheus/prometheus/storage/fanout.go",
      "github.com/prometheus/prometheus/storage/generic.go",
      "github.com/prometheus/prometheus/storage/interface.go",
      "github.com/prometheus/prometheus/storage/lazy.go",
      "github.com/prometheus/prometheus/storage/memoized_iterator.go",
      "github.com/prometheus/prometheus/storage/merge.go",
      "github.com/prometheus/prometheus/storage/noop.go",
      "github.com/prometheus/prometheus/storage/secondary.go",
      "github.com/prometheus/prometheus/storage/series.go"
    ],
    "TestSampledReadEndpoint": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSanitizeFullLabelName": [
      "github.com/prometheus/prometheus/util/strutil/quote.go",
      "github.com/prometheus/prometheus/util/strutil/strconv.go"
    ],
    "TestSanitizeLabelName": [
      "github.com/prometheus/prometheus/util/strutil/quote.go",
      "github.com/prometheus/prometheus/util/strutil/strconv.go"
    ],
    "TestScalewayInstanceAuthToken": [
      "github.com/prometheus/prometheus/discovery/scaleway/baremetal.go",
      "github.com/prometheus/prometheus/discovery/scaleway/instance.go",
      "github.com/prometheus/prometheus/discovery/scaleway/metrics.go",
      "github.com/prometheus/prometheus/discovery/scaleway/scaleway.go"
    ],
    "TestScalewayInstanceRefresh": [
      "github.com/prometheus/prometheus/discovery/scaleway/baremetal.go",
      "github.com/prometheus/prometheus/discovery/scaleway/instance.go",
      "github.com/prometheus/prometheus/discovery/scaleway/metrics.go",
      "github.com/prometheus/prometheus/discovery/scaleway/scaleway.go"
    ],
    "TestScrapeAddFast": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeAppendMetadataUpdate": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeAppendWithParseError": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeConfigDisableCompression": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestScrapeConfigNameEscapingSettings": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestScrapeConfigNameValidationSettings": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestScrapeFailureLogFile": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestScrapeIntervalLarger": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestScrapeLoopAppend": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendCacheEntryButErrNotFound": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendEmptyWithNoContentType": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendExemplar": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendExemplarSeries": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendFailsWithNoContentType": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendForConflictingPrefixedLabels": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendGracefullyIfAmendOrOutOfOrderOrOutOfBounds": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendNoStalenessIfTimestamp": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendSampleLimit": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendStaleness": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopAppendStalenessIfTrackTimestampStaleness": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopCache": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopCacheMemoryExhaustionProtection": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopCompression": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopDiscardDuplicateLabels": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopDiscardUnnamedMetrics": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopFailLegacyUnderUTF8": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopFailWithInvalidLabelsAfterRelabel": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopForcedErr": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopLabelLimit": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopMetadata": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopOutOfBoundsTimeError": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopRun": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrape": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrapeForTimestampedMetrics": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopRunCreatesStaleMarkersOnParseFailure": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopRunReportsTargetDownOnInvalidUTF8": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopRunReportsTargetDownOnScrapeError": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopSeriesAdded": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopSeriesAddedDuplicates": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopStop": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoopStopBeforeRun": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoop_ChangingMetricString": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoop_DiscardTimestamps": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoop_HistogramBucketLimit": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeLoop_RespectTimestamps": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolAppender": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolRaces": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolReload": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolReloadPreserveRelabeledIntervalTimeout": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolScrapeAfterReload": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolScrapeLoopsStarted": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolStop": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapePoolTargetLimit": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeProtocolHeader": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestScrapeReportLimit": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeReportMetadataUpdate": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeReportSingleAppender": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScrapeUTF8": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestScratchBuilder": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestSegmentMetric": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestSelectExemplar": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSelectExemplar_DuplicateSeries": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSelectExemplar_MultiSeries": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSelectExemplar_TimeRange": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSelectHintsSetCorrectly": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestSendAlerts": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestSendAlertsDontAffectActiveAlerts": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestSendSamplesWithBackoffWithSampleAgeLimit": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSeriesReset": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestSeriesSetFilter": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestServerSDRefresh": [
      "github.com/prometheus/prometheus/discovery/stackit/metrics.go",
      "github.com/prometheus/prometheus/discovery/stackit/server.go",
      "github.com/prometheus/prometheus/discovery/stackit/stackit.go"
    ],
    "TestServiceDiscoveryAdd": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestServiceDiscoveryAllNamespaces": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestServiceDiscoveryDelete": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestServiceDiscoveryNamespaces": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestServiceDiscoveryOwnNamespace": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestServiceDiscoveryUpdate": [
      "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/node.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/pod.go",
      "github.com/prometheus/prometheus/discovery/kubernetes/service.go"
    ],
    "TestSetCompactionFailed": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSetOffsetSeed": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestSetOptionsHandlingStaleness": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestSharedLimitListenerClose": [
      "github.com/prometheus/prometheus/util/netconnlimit/netconnlimit.go"
    ],
    "TestSharedLimitListenerConcurrency": [
      "github.com/prometheus/prometheus/util/netconnlimit/netconnlimit.go"
    ],
    "TestShouldReshard": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestShutdown": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestShutdownWithStaleConnection": [
      "github.com/prometheus/prometheus/web/federate.go",
      "github.com/prometheus/prometheus/web/web.go"
    ],
    "TestSizeOfLabels": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestSizeRetention": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSizeRetentionMetric": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSkippingInvalidValuesInSameTxn": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSnapshotAheadOfWALError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSnapshotError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSortMetaByMinTimeAndMinRef": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSourceDisappeared": [
      "github.com/prometheus/prometheus/discovery/http/http.go",
      "github.com/prometheus/prometheus/discovery/http/metrics.go"
    ],
    "TestSpansFromBidirectionalCompareSpans": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestSparseHistogramSpaceSavings": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSplitByRange": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestStableHash": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestStaleness": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestStartupInterrupt": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestStats": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestStepInvariantExpr": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestStop_DrainingDisabled": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestStop_DrainingEnabled": [
      "github.com/prometheus/prometheus/notifier/alert.go",
      "github.com/prometheus/prometheus/notifier/alertmanager.go",
      "github.com/prometheus/prometheus/notifier/alertmanagerset.go",
      "github.com/prometheus/prometheus/notifier/manager.go",
      "github.com/prometheus/prometheus/notifier/metric.go",
      "github.com/prometheus/prometheus/notifier/util.go"
    ],
    "TestStorageHandlesOutOfOrderTimestamps": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestStorageLifecycle": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestStorageOverflow": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestStorage_DuplicateExemplarsIgnored": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestStoreHTTPErrorHandling": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestStreamReadEndpoint": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestStreamResponse": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestString": [
      "github.com/prometheus/prometheus/discovery/targetgroup/targetgroup.go"
    ],
    "TestStringMatcherFromRegexp": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestStringMatcherFromRegexp_LiteralPrefix": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestStringMatcherFromRegexp_LiteralSuffix": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestStringMatcherFromRegexp_Quest": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestStripeSeries_Get": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestStripeSeries_gc": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestStripeSeries_getOrSet": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestSubquerySelector": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestSubscriberReceivesNotifications": [
      "github.com/prometheus/prometheus/util/notifications/notifications.go"
    ],
    "TestSymbols": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestSymbolsTable": [
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/codec.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/custom.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/symbols.go",
      "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/types.pb.go"
    ],
    "TestTSDBDump": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestTSDBDumpCommand": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestTSDBDumpOpenMetrics": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestTSDBDumpOpenMetricsRoundTrip": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestTSDBDumpOpenMetricsRoundTripPipe": [
      "github.com/prometheus/prometheus/cmd/promtool/analyze.go",
      "github.com/prometheus/prometheus/cmd/promtool/archive.go",
      "github.com/prometheus/prometheus/cmd/promtool/backfill.go",
      "github.com/prometheus/prometheus/cmd/promtool/debug.go",
      "github.com/prometheus/prometheus/cmd/promtool/main.go",
      "github.com/prometheus/prometheus/cmd/promtool/metrics.go",
      "github.com/prometheus/prometheus/cmd/promtool/query.go",
      "github.com/prometheus/prometheus/cmd/promtool/rules.go",
      "github.com/prometheus/prometheus/cmd/promtool/sd.go",
      "github.com/prometheus/prometheus/cmd/promtool/tsdb.go",
      "github.com/prometheus/prometheus/cmd/promtool/unittest.go"
    ],
    "TestTSDBStatus": [
      "github.com/prometheus/prometheus/web/api/v1/api.go",
      "github.com/prometheus/prometheus/web/api/v1/codec.go",
      "github.com/prometheus/prometheus/web/api/v1/json_codec.go",
      "github.com/prometheus/prometheus/web/api/v1/translate_ast.go"
    ],
    "TestTailSamples": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestTargetDisappearsAfterProviderRemoved": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetGroupJSONMarshal": [
      "github.com/prometheus/prometheus/discovery/targetgroup/targetgroup.go"
    ],
    "TestTargetGroupStrictJSONUnmarshal": [
      "github.com/prometheus/prometheus/discovery/targetgroup/targetgroup.go"
    ],
    "TestTargetGroupYamlMarshal": [
      "github.com/prometheus/prometheus/discovery/targetgroup/targetgroup.go"
    ],
    "TestTargetGroupYamlUnmarshal": [
      "github.com/prometheus/prometheus/discovery/targetgroup/targetgroup.go"
    ],
    "TestTargetLabelLegacyValidity": [
      "github.com/prometheus/prometheus/model/relabel/relabel.go"
    ],
    "TestTargetLabels": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetOffset": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetScrapeConfigWithLabels": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetScrapeIntervalAndTimeoutRelabel": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetScrapeScrapeCancel": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetScrapeScrapeNotFound": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetScraperBodySizeLimit": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetScraperScrapeOK": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetSetRecreatesEmptyStaticConfigs": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetSetRecreatesTargetGroupsOnConfigChange": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetSetTargetGroupsPresentOnConfigChange": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetSetTargetGroupsPresentOnConfigReload": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetSetTargetGroupsPresentOnConfigRename": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetSetTargetGroupsUpdateDuringApplyConfig": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetURL": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetUpdatesOrder": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestTargetsFromGroup": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTargetsFromGroupWithLabelKeepDrop": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestTemplateExpansion": [
      "github.com/prometheus/prometheus/template/template.go"
    ],
    "TestTemplateParsing": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestTemporality": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestTimeMetrics": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestTimeRetention": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestTimerGroup": [
      "github.com/prometheus/prometheus/util/stats/query_stats.go",
      "github.com/prometheus/prometheus/util/stats/timer.go"
    ],
    "TestTimerGroupNewTimer": [
      "github.com/prometheus/prometheus/util/stats/query_stats.go",
      "github.com/prometheus/prometheus/util/stats/timer.go"
    ],
    "TestToHistogram_Empty": null,
    "TestToLabels": null,
    "TestToMetadata": null,
    "TestToNormalisedLower": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "TestTokenProvider": [
      "github.com/prometheus/prometheus/storage/remote/azuread/azuread.go"
    ],
    "TestTombstoneClean": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestTombstoneCleanFail": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestTombstoneCleanResultEmptyBlock": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestTombstonesGetWithCopy": [
      "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go"
    ],
    "TestTracerProviderShutdown": [
      "github.com/prometheus/prometheus/tracing/tracing.go"
    ],
    "TestTranslatorMetricFromOtelMetric": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "TestTritonSDNew": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDNewBadConfig": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDNewCNConfig": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDNewGroupsConfig": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDRefreshCNsUUIDOnly": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDRefreshCNsWithHostname": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDRefreshCancelled": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDRefreshMultipleTargets": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDRefreshNoServer": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTritonSDRefreshNoTargets": [
      "github.com/prometheus/prometheus/discovery/triton/metrics.go",
      "github.com/prometheus/prometheus/discovery/triton/triton.go"
    ],
    "TestTruncateBefore": [
      "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go"
    ],
    "TestTypeUnitReLabel": [
      "github.com/prometheus/prometheus/scrape/clientprotobuf.go",
      "github.com/prometheus/prometheus/scrape/manager.go",
      "github.com/prometheus/prometheus/scrape/metrics.go",
      "github.com/prometheus/prometheus/scrape/scrape.go",
      "github.com/prometheus/prometheus/scrape/target.go"
    ],
    "TestUTF8PromParse": [
      "github.com/prometheus/prometheus/model/textparse/interface.go",
      "github.com/prometheus/prometheus/model/textparse/nhcbparse.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go",
      "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go",
      "github.com/prometheus/prometheus/model/textparse/promlex.l.go",
      "github.com/prometheus/prometheus/model/textparse/promparse.go",
      "github.com/prometheus/prometheus/model/textparse/protobufparse.go"
    ],
    "TestUnaryPretty": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestUncommittedSamplesNotLostOnTruncate": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestUninstallingTracerProvider": [
      "github.com/prometheus/prometheus/tracing/tracing.go"
    ],
    "TestUniqueErrorNodes": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestUnmarshalConfig": [
      "github.com/prometheus/prometheus/discovery/consul/consul.go",
      "github.com/prometheus/prometheus/discovery/consul/metrics.go"
    ],
    "TestUnquote": [
      "github.com/prometheus/prometheus/util/strutil/quote.go",
      "github.com/prometheus/prometheus/util/strutil/strconv.go"
    ],
    "TestUnregisterMetrics": [
      "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go",
      "github.com/prometheus/prometheus/discovery/discovery.go",
      "github.com/prometheus/prometheus/discovery/manager.go",
      "github.com/prometheus/prometheus/discovery/metrics.go",
      "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go",
      "github.com/prometheus/prometheus/discovery/metrics_refresh.go",
      "github.com/prometheus/prometheus/discovery/registry.go",
      "github.com/prometheus/prometheus/discovery/util.go"
    ],
    "TestUnsubscribe": [
      "github.com/prometheus/prometheus/util/notifications/notifications.go"
    ],
    "TestUnsupportedFunctions": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestUpdate": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestUpdateFileWithPartialWrites": [
      "github.com/prometheus/prometheus/discovery/file/file.go",
      "github.com/prometheus/prometheus/discovery/file/metrics.go"
    ],
    "TestUpdateRemoteReadConfigs": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestUpdateWhenStopped": [
      "github.com/prometheus/prometheus/rules/alerting.go",
      "github.com/prometheus/prometheus/rules/group.go",
      "github.com/prometheus/prometheus/rules/manager.go",
      "github.com/prometheus/prometheus/rules/origin.go",
      "github.com/prometheus/prometheus/rules/recording.go"
    ],
    "TestUyuniSDHandleError": [
      "github.com/prometheus/prometheus/discovery/uyuni/metrics.go",
      "github.com/prometheus/prometheus/discovery/uyuni/uyuni.go"
    ],
    "TestUyuniSDLogin": [
      "github.com/prometheus/prometheus/discovery/uyuni/metrics.go",
      "github.com/prometheus/prometheus/discovery/uyuni/uyuni.go"
    ],
    "TestUyuniSDSkipLogin": [
      "github.com/prometheus/prometheus/discovery/uyuni/metrics.go",
      "github.com/prometheus/prometheus/discovery/uyuni/uyuni.go"
    ],
    "TestVMToLabelSet": [
      "github.com/prometheus/prometheus/discovery/azure/azure.go",
      "github.com/prometheus/prometheus/discovery/azure/metrics.go"
    ],
    "TestValidateExemplar": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestValidateLabelsAndMetricName": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestVarbitInt": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestVarbitUint": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestVectorSelector_String": [
      "github.com/prometheus/prometheus/promql/parser/ast.go",
      "github.com/prometheus/prometheus/promql/parser/functions.go",
      "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go",
      "github.com/prometheus/prometheus/promql/parser/lex.go",
      "github.com/prometheus/prometheus/promql/parser/parse.go",
      "github.com/prometheus/prometheus/promql/parser/prettier.go",
      "github.com/prometheus/prometheus/promql/parser/printer.go",
      "github.com/prometheus/prometheus/promql/parser/value.go"
    ],
    "TestVector_ContainsSameLabelset": [
      "github.com/prometheus/prometheus/promql/durations.go",
      "github.com/prometheus/prometheus/promql/engine.go",
      "github.com/prometheus/prometheus/promql/functions.go",
      "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go",
      "github.com/prometheus/prometheus/promql/info.go",
      "github.com/prometheus/prometheus/promql/quantile.go",
      "github.com/prometheus/prometheus/promql/query_logger.go",
      "github.com/prometheus/prometheus/promql/value.go"
    ],
    "TestVultrSDRefresh": [
      "github.com/prometheus/prometheus/discovery/vultr/metrics.go",
      "github.com/prometheus/prometheus/discovery/vultr/vultr.go"
    ],
    "TestWALFlushedOnDBClose": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWALMetadataDelivery": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWALRepair_ReadingError": [
      "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go",
      "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/reader.go",
      "github.com/prometheus/prometheus/tsdb/wlog/watcher.go",
      "github.com/prometheus/prometheus/tsdb/wlog/wlog.go"
    ],
    "TestWALReplay": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "TestWALReplayRaceOnSamplesLoggedBeforeSeries": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWALSampleAndExemplarOrder": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWALSegmentSizeBounds": [
      "github.com/prometheus/prometheus/cmd/prometheus/main.go"
    ],
    "TestWALSegmentSizeOptions": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWBLAndMmapReplay": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWBLCorruption": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWBLReplay": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWaitForPendingReadersInTimeRange": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWalRepair_DecodingError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWatchScrapeManager_NotReady": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWatchScrapeManager_ReadyForCollection": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWblRepair_DecodingError": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWblReplayAfterOOODisableAndRestart": [
      "github.com/prometheus/prometheus/tsdb/block.go",
      "github.com/prometheus/prometheus/tsdb/blockwriter.go",
      "github.com/prometheus/prometheus/tsdb/compact.go",
      "github.com/prometheus/prometheus/tsdb/db.go",
      "github.com/prometheus/prometheus/tsdb/exemplar.go",
      "github.com/prometheus/prometheus/tsdb/head.go",
      "github.com/prometheus/prometheus/tsdb/head_append.go",
      "github.com/prometheus/prometheus/tsdb/head_other.go",
      "github.com/prometheus/prometheus/tsdb/head_read.go",
      "github.com/prometheus/prometheus/tsdb/head_wal.go",
      "github.com/prometheus/prometheus/tsdb/isolation.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head.go",
      "github.com/prometheus/prometheus/tsdb/ooo_head_read.go",
      "github.com/prometheus/prometheus/tsdb/ooo_isolation.go",
      "github.com/prometheus/prometheus/tsdb/querier.go",
      "github.com/prometheus/prometheus/tsdb/repair.go",
      "github.com/prometheus/prometheus/tsdb/testutil.go",
      "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go"
    ],
    "TestWithoutPostings": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestWrappedError": [
      "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go"
    ],
    "TestWriteAndReadbackTombstones": [
      "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go"
    ],
    "TestWriteOutput": [
      "github.com/prometheus/prometheus/documentation/examples/custom-sd/adapter/adapter.go"
    ],
    "TestWriteReadHistogramChunkLayout": [
      "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go",
      "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go"
    ],
    "TestWriteStorageApplyConfig_Idempotent": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfig_Lifecycle": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfig_PartialUpdate": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfig_RestartOnNameChange": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfig_UpdateExternalLabels": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfig_UpdateWithRegisterer": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteStorageApplyConfigsDuringCommit": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriteV2RequestFixture": [
      "github.com/prometheus/prometheus/storage/remote/chunked.go",
      "github.com/prometheus/prometheus/storage/remote/client.go",
      "github.com/prometheus/prometheus/storage/remote/codec.go",
      "github.com/prometheus/prometheus/storage/remote/dial_context.go",
      "github.com/prometheus/prometheus/storage/remote/ewma.go",
      "github.com/prometheus/prometheus/storage/remote/intern.go",
      "github.com/prometheus/prometheus/storage/remote/max_timestamp.go",
      "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go",
      "github.com/prometheus/prometheus/storage/remote/queue_manager.go",
      "github.com/prometheus/prometheus/storage/remote/read.go",
      "github.com/prometheus/prometheus/storage/remote/read_handler.go",
      "github.com/prometheus/prometheus/storage/remote/stats.go",
      "github.com/prometheus/prometheus/storage/remote/storage.go",
      "github.com/prometheus/prometheus/storage/remote/write.go",
      "github.com/prometheus/prometheus/storage/remote/write_handler.go"
    ],
    "TestWriterWithDefaultSegmentSize": [
      "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go",
      "github.com/prometheus/prometheus/tsdb/chunks/queue.go",
      "github.com/prometheus/prometheus/tsdb/chunks/samples.go"
    ],
    "TestWriter_ShouldReturnErrorOnSeriesWithDuplicatedLabelNames": [
      "github.com/prometheus/prometheus/tsdb/index/index.go",
      "github.com/prometheus/prometheus/tsdb/index/postings.go",
      "github.com/prometheus/prometheus/tsdb/index/postingsstats.go"
    ],
    "TestYAMLNotLongerSupportedAMApi": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestYAMLRoundtrip": [
      "github.com/prometheus/prometheus/config/config.go",
      "github.com/prometheus/prometheus/config/reload.go"
    ],
    "TestZeroOrOneCharacterStringMatcher": [
      "github.com/prometheus/prometheus/model/labels/labels_common.go",
      "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/matcher.go",
      "github.com/prometheus/prometheus/model/labels/regexp.go",
      "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go",
      "github.com/prometheus/prometheus/model/labels/test_utils.go"
    ],
    "Test_ExistingWAL_NextRef": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ],
    "Test_convertTimeStamp": [
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go",
      "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go"
    ],
    "Test_floatToTime": [
      "github.com/prometheus/prometheus/template/template.go"
    ],
    "Test_validateOptions": [
      "github.com/prometheus/prometheus/tsdb/agent/db.go",
      "github.com/prometheus/prometheus/tsdb/agent/series.go"
    ]
  },
  "file_to_tests": {
    "github.com/prometheus/prometheus/cmd/prometheus/main.go": [
      "TestAgentFailedStartupWithInvalidConfig",
      "TestAgentFailedStartupWithServerFlag",
      "TestAgentSuccessfulStartup",
      "TestAutoReloadConfig_ValidToInvalidToValid",
      "TestAutoReloadConfig_ValidToValid",
      "TestComputeExternalURL",
      "TestDocumentation",
      "TestFailedStartupExitCode",
      "TestHeadCompactionWhileScraping",
      "TestMaxBlockChunkSegmentSizeBounds",
      "TestModeSpecificFlags",
      "TestQueryLog",
      "TestRuntimeGOGCConfig",
      "TestRwProtoMsgFlagParser",
      "TestScrapeFailureLogFile",
      "TestSendAlerts",
      "TestStartupInterrupt",
      "TestTimeMetrics",
      "TestWALSegmentSizeBounds"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/analyze.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/archive.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/backfill.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/debug.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/main.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/metrics.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/query.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/rules.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/sd.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/tsdb.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/cmd/promtool/unittest.go": [
      "TestAuthorizationConfig",
      "TestBackfill",
      "TestBackfillLabels",
      "TestBackfillRuleIntegration",
      "TestCalcClassicBucketStatistics",
      "TestCheckConfigSyntax",
      "TestCheckDuplicates",
      "TestCheckMetricsExtended",
      "TestCheckRules",
      "TestCheckRulesWithFeatureFlag",
      "TestCheckRulesWithRuleFiles",
      "TestCheckSDFile",
      "TestCheckScrapeConfigs",
      "TestCheckTargetConfig",
      "TestExitCodes",
      "TestGenerateBucket",
      "TestGetBucketCountsAtTime",
      "TestQueryInstant",
      "TestQueryRange",
      "TestRulesUnitTest",
      "TestRulesUnitTestRun",
      "TestSDCheckResult",
      "TestTSDBDump",
      "TestTSDBDumpCommand",
      "TestTSDBDumpOpenMetrics",
      "TestTSDBDumpOpenMetricsRoundTrip",
      "TestTSDBDumpOpenMetricsRoundTripPipe"
    ],
    "github.com/prometheus/prometheus/config/config.go": [
      "TestAgentMode",
      "TestBadConfigs",
      "TestBadStaticConfigsYML",
      "TestElideSecrets",
      "TestEmptyConfig",
      "TestEmptyGlobalBlock",
      "TestExpandExternalLabels",
      "TestGenerateChecksum",
      "TestGetScrapeConfigs",
      "TestGetScrapeConfigs_Loaded",
      "TestKubernetesEmptyAPIServer",
      "TestKubernetesSelectors",
      "TestKubernetesWithKubeConfig",
      "TestLoadConfig",
      "TestLoadConfigRuleFilesAbsolutePath",
      "TestOTLPAllowServiceNameInTargetInfo",
      "TestOTLPAllowUTF8",
      "TestOTLPConvertHistogramsToNHCB",
      "TestOTLPPromoteScopeMetadata",
      "TestOTLPSanitizeResourceAttributes",
      "TestRemoteWriteRetryOnRateLimit",
      "TestScrapeConfigDisableCompression",
      "TestScrapeConfigNameEscapingSettings",
      "TestScrapeConfigNameValidationSettings",
      "TestScrapeIntervalLarger",
      "TestScrapeProtocolHeader",
      "TestYAMLNotLongerSupportedAMApi",
      "TestYAMLRoundtrip"
    ],
    "github.com/prometheus/prometheus/config/reload.go": [
      "TestAgentMode",
      "TestBadConfigs",
      "TestBadStaticConfigsYML",
      "TestElideSecrets",
      "TestEmptyConfig",
      "TestEmptyGlobalBlock",
      "TestExpandExternalLabels",
      "TestGenerateChecksum",
      "TestGetScrapeConfigs",
      "TestGetScrapeConfigs_Loaded",
      "TestKubernetesEmptyAPIServer",
      "TestKubernetesSelectors",
      "TestKubernetesWithKubeConfig",
      "TestLoadConfig",
      "TestLoadConfigRuleFilesAbsolutePath",
      "TestOTLPAllowServiceNameInTargetInfo",
      "TestOTLPAllowUTF8",
      "TestOTLPConvertHistogramsToNHCB",
      "TestOTLPPromoteScopeMetadata",
      "TestOTLPSanitizeResourceAttributes",
      "TestRemoteWriteRetryOnRateLimit",
      "TestScrapeConfigDisableCompression",
      "TestScrapeConfigNameEscapingSettings",
      "TestScrapeConfigNameValidationSettings",
      "TestScrapeIntervalLarger",
      "TestScrapeProtocolHeader",
      "TestYAMLNotLongerSupportedAMApi",
      "TestYAMLRoundtrip"
    ],
    "github.com/prometheus/prometheus/discovery/aws/ec2.go": [
      "TestEC2DiscoveryRefresh",
      "TestEC2DiscoveryRefreshAZIDs"
    ],
    "github.com/prometheus/prometheus/discovery/aws/lightsail.go": [
      "TestEC2DiscoveryRefresh",
      "TestEC2DiscoveryRefreshAZIDs"
    ],
    "github.com/prometheus/prometheus/discovery/aws/metrics_ec2.go": [
      "TestEC2DiscoveryRefresh",
      "TestEC2DiscoveryRefreshAZIDs"
    ],
    "github.com/prometheus/prometheus/discovery/aws/metrics_lightsail.go": [
      "TestEC2DiscoveryRefresh",
      "TestEC2DiscoveryRefreshAZIDs"
    ],
    "github.com/prometheus/prometheus/discovery/azure/azure.go": [
      "TestAzureRefresh",
      "TestMapFromVMScaleSetVMWithEmptyOSType",
      "TestMapFromVMScaleSetVMWithEmptyTags",
      "TestMapFromVMScaleSetVMWithTags",
      "TestMapFromVMWithEmptyOSType",
      "TestMapFromVMWithEmptyTags",
      "TestMapFromVMWithTags",
      "TestNewAzureResourceFromID",
      "TestVMToLabelSet"
    ],
    "github.com/prometheus/prometheus/discovery/azure/metrics.go": [
      "TestAzureRefresh",
      "TestMapFromVMScaleSetVMWithEmptyOSType",
      "TestMapFromVMScaleSetVMWithEmptyTags",
      "TestMapFromVMScaleSetVMWithTags",
      "TestMapFromVMWithEmptyOSType",
      "TestMapFromVMWithEmptyTags",
      "TestMapFromVMWithTags",
      "TestNewAzureResourceFromID",
      "TestVMToLabelSet"
    ],
    "github.com/prometheus/prometheus/discovery/consul/consul.go": [
      "TestAllOptions",
      "TestAllServices",
      "TestConfiguredService",
      "TestConfiguredServiceWithTag",
      "TestConfiguredServiceWithTags",
      "TestFilterOption",
      "TestGetDatacenterShouldReturnError",
      "TestNoTargets",
      "TestNonConfiguredService",
      "TestOneService",
      "TestUnmarshalConfig"
    ],
    "github.com/prometheus/prometheus/discovery/consul/metrics.go": [
      "TestAllOptions",
      "TestAllServices",
      "TestConfiguredService",
      "TestConfiguredServiceWithTag",
      "TestConfiguredServiceWithTags",
      "TestFilterOption",
      "TestGetDatacenterShouldReturnError",
      "TestNoTargets",
      "TestNonConfiguredService",
      "TestOneService",
      "TestUnmarshalConfig"
    ],
    "github.com/prometheus/prometheus/discovery/digitalocean/digitalocean.go": [
      "TestDigitalOceanSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/digitalocean/metrics.go": [
      "TestDigitalOceanSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/discoverer_metrics_noop.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/discovery.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/dns/dns.go": [
      "TestDNS",
      "TestSDConfigUnmarshalYAML"
    ],
    "github.com/prometheus/prometheus/discovery/dns/metrics.go": [
      "TestDNS",
      "TestSDConfigUnmarshalYAML"
    ],
    "github.com/prometheus/prometheus/discovery/eureka/client.go": [
      "Test500ErrorHttpResponse",
      "TestEurekaSDEmptyList",
      "TestEurekaSDHandleError",
      "TestEurekaSDSendGroup",
      "TestFetchApps"
    ],
    "github.com/prometheus/prometheus/discovery/eureka/eureka.go": [
      "Test500ErrorHttpResponse",
      "TestEurekaSDEmptyList",
      "TestEurekaSDHandleError",
      "TestEurekaSDSendGroup",
      "TestFetchApps"
    ],
    "github.com/prometheus/prometheus/discovery/eureka/metrics.go": [
      "Test500ErrorHttpResponse",
      "TestEurekaSDEmptyList",
      "TestEurekaSDHandleError",
      "TestEurekaSDSendGroup",
      "TestFetchApps"
    ],
    "github.com/prometheus/prometheus/discovery/file/file.go": [
      "TestFileUpdate",
      "TestInitialUpdate",
      "TestInvalidFile",
      "TestInvalidFileUpdate",
      "TestNoopFileUpdate",
      "TestRemoveFile",
      "TestUpdateFileWithPartialWrites"
    ],
    "github.com/prometheus/prometheus/discovery/file/metrics.go": [
      "TestFileUpdate",
      "TestInitialUpdate",
      "TestInvalidFile",
      "TestInvalidFileUpdate",
      "TestNoopFileUpdate",
      "TestRemoveFile",
      "TestUpdateFileWithPartialWrites"
    ],
    "github.com/prometheus/prometheus/discovery/hetzner/hcloud.go": [
      "TestHCloudSDRefresh",
      "TestRobotSDRefresh",
      "TestRobotSDRefreshHandleError"
    ],
    "github.com/prometheus/prometheus/discovery/hetzner/hetzner.go": [
      "TestHCloudSDRefresh",
      "TestRobotSDRefresh",
      "TestRobotSDRefreshHandleError"
    ],
    "github.com/prometheus/prometheus/discovery/hetzner/metrics.go": [
      "TestHCloudSDRefresh",
      "TestRobotSDRefresh",
      "TestRobotSDRefreshHandleError"
    ],
    "github.com/prometheus/prometheus/discovery/hetzner/robot.go": [
      "TestHCloudSDRefresh",
      "TestRobotSDRefresh",
      "TestRobotSDRefreshHandleError"
    ],
    "github.com/prometheus/prometheus/discovery/http/http.go": [
      "TestContentTypeRegex",
      "TestHTTPInvalidCode",
      "TestHTTPInvalidFormat",
      "TestHTTPValidRefresh",
      "TestSourceDisappeared"
    ],
    "github.com/prometheus/prometheus/discovery/http/metrics.go": [
      "TestContentTypeRegex",
      "TestHTTPInvalidCode",
      "TestHTTPInvalidFormat",
      "TestHTTPValidRefresh",
      "TestSourceDisappeared"
    ],
    "github.com/prometheus/prometheus/discovery/ionos/ionos.go": [
      "TestIONOSServerRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/ionos/metrics.go": [
      "TestIONOSServerRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/ionos/server.go": [
      "TestIONOSServerRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/endpoints.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/endpointslice.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/ingress.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/kubernetes.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/metrics.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/node.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/pod.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/kubernetes/service.go": [
      "TestEndpointSliceDiscoveryAdd",
      "TestEndpointSliceDiscoveryBeforeRun",
      "TestEndpointSliceDiscoveryDelete",
      "TestEndpointSliceDiscoveryEmptyEndpoints",
      "TestEndpointSliceDiscoveryEmptyPodStatus",
      "TestEndpointSliceDiscoveryNamespaces",
      "TestEndpointSliceDiscoveryOwnNamespace",
      "TestEndpointSliceDiscoverySidecarContainer",
      "TestEndpointSliceDiscoveryUpdate",
      "TestEndpointSliceDiscoveryWithService",
      "TestEndpointSliceDiscoveryWithServiceUpdate",
      "TestEndpointSliceInfIndexersCount",
      "TestEndpointsDiscoveryAdd",
      "TestEndpointsDiscoveryBeforeRun",
      "TestEndpointsDiscoveryDelete",
      "TestEndpointsDiscoveryEmptyPodStatus",
      "TestEndpointsDiscoveryEmptySubsets",
      "TestEndpointsDiscoveryNamespaces",
      "TestEndpointsDiscoveryOwnNamespace",
      "TestEndpointsDiscoverySidecarContainer",
      "TestEndpointsDiscoveryUpdate",
      "TestEndpointsDiscoveryUpdatePod",
      "TestEndpointsDiscoveryWithNodeMetadata",
      "TestEndpointsDiscoveryWithService",
      "TestEndpointsDiscoveryWithServiceUpdate",
      "TestEndpointsDiscoveryWithUpdatedNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithNodeMetadata",
      "TestEndpointsSlicesDiscoveryWithUpdatedNodeMetadata",
      "TestFailuresCountMetric",
      "TestIngressDiscoveryAdd",
      "TestIngressDiscoveryAddMixed",
      "TestIngressDiscoveryAddTLS",
      "TestIngressDiscoveryNamespaces",
      "TestIngressDiscoveryOwnNamespace",
      "TestNodeDiscoveryAdd",
      "TestNodeDiscoveryBeforeStart",
      "TestNodeDiscoveryDelete",
      "TestNodeDiscoveryUpdate",
      "TestNodeName",
      "TestPodDiscoveryAdd",
      "TestPodDiscoveryBeforeRun",
      "TestPodDiscoveryDelete",
      "TestPodDiscoveryInitContainer",
      "TestPodDiscoveryNamespaces",
      "TestPodDiscoveryOwnNamespace",
      "TestPodDiscoveryUpdate",
      "TestPodDiscoveryUpdateEmptyPodIP",
      "TestPodDiscoveryWithNodeMetadata",
      "TestPodDiscoveryWithNodeMetadataUpdateNode",
      "TestRetryOnError",
      "TestServiceDiscoveryAdd",
      "TestServiceDiscoveryAllNamespaces",
      "TestServiceDiscoveryDelete",
      "TestServiceDiscoveryNamespaces",
      "TestServiceDiscoveryOwnNamespace",
      "TestServiceDiscoveryUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/linode/linode.go": [
      "TestLinodeSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/linode/metrics.go": [
      "TestLinodeSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/manager.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/marathon/marathon.go": [
      "Test500ErrorHttpResponseWithValidJSONBody",
      "TestMarathonSDEmptyList",
      "TestMarathonSDHandleError",
      "TestMarathonSDRemoveApp",
      "TestMarathonSDSendGroup",
      "TestMarathonSDSendGroupWithContainerNetworkAndPortMapping",
      "TestMarathonSDSendGroupWithContainerPortMappings",
      "TestMarathonSDSendGroupWithDockerContainerPortMappings",
      "TestMarathonSDSendGroupWithMultiplePort",
      "TestMarathonSDSendGroupWithPortDefinitions",
      "TestMarathonSDSendGroupWithPortDefinitionsRequirePorts",
      "TestMarathonSDSendGroupWithPorts",
      "TestMarathonZeroTaskPorts"
    ],
    "github.com/prometheus/prometheus/discovery/marathon/metrics.go": [
      "Test500ErrorHttpResponseWithValidJSONBody",
      "TestMarathonSDEmptyList",
      "TestMarathonSDHandleError",
      "TestMarathonSDRemoveApp",
      "TestMarathonSDSendGroup",
      "TestMarathonSDSendGroupWithContainerNetworkAndPortMapping",
      "TestMarathonSDSendGroupWithContainerPortMappings",
      "TestMarathonSDSendGroupWithDockerContainerPortMappings",
      "TestMarathonSDSendGroupWithMultiplePort",
      "TestMarathonSDSendGroupWithPortDefinitions",
      "TestMarathonSDSendGroupWithPortDefinitionsRequirePorts",
      "TestMarathonSDSendGroupWithPorts",
      "TestMarathonZeroTaskPorts"
    ],
    "github.com/prometheus/prometheus/discovery/metrics.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/metrics_k8s_client.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/metrics_refresh.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/moby/docker.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/dockerswarm.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/metrics_docker.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/metrics_dockerswarm.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/network.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/nodes.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/services.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/moby/tasks.go": [
      "TestDockerSDRefresh",
      "TestDockerSDRefreshMatchAllNetworks",
      "TestDockerSwarmNodesSDRefresh",
      "TestDockerSwarmSDServicesRefresh",
      "TestDockerSwarmSDServicesRefreshWithFilters",
      "TestDockerSwarmTasksSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/nomad/metrics.go": [
      "TestNomadSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/nomad/nomad.go": [
      "TestNomadSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/openstack/hypervisor.go": [
      "TestOpenstackSDHypervisorRefresh",
      "TestOpenstackSDHypervisorRefreshWithDoneContext",
      "TestOpenstackSDInstanceRefresh",
      "TestOpenstackSDInstanceRefreshWithDoneContext",
      "TestOpenstackSDLoadBalancerRefresh",
      "TestOpenstackSDLoadBalancerRefreshWithDoneContext"
    ],
    "github.com/prometheus/prometheus/discovery/openstack/instance.go": [
      "TestOpenstackSDHypervisorRefresh",
      "TestOpenstackSDHypervisorRefreshWithDoneContext",
      "TestOpenstackSDInstanceRefresh",
      "TestOpenstackSDInstanceRefreshWithDoneContext",
      "TestOpenstackSDLoadBalancerRefresh",
      "TestOpenstackSDLoadBalancerRefreshWithDoneContext"
    ],
    "github.com/prometheus/prometheus/discovery/openstack/loadbalancer.go": [
      "TestOpenstackSDHypervisorRefresh",
      "TestOpenstackSDHypervisorRefreshWithDoneContext",
      "TestOpenstackSDInstanceRefresh",
      "TestOpenstackSDInstanceRefreshWithDoneContext",
      "TestOpenstackSDLoadBalancerRefresh",
      "TestOpenstackSDLoadBalancerRefreshWithDoneContext"
    ],
    "github.com/prometheus/prometheus/discovery/openstack/metrics.go": [
      "TestOpenstackSDHypervisorRefresh",
      "TestOpenstackSDHypervisorRefreshWithDoneContext",
      "TestOpenstackSDInstanceRefresh",
      "TestOpenstackSDInstanceRefreshWithDoneContext",
      "TestOpenstackSDLoadBalancerRefresh",
      "TestOpenstackSDLoadBalancerRefreshWithDoneContext"
    ],
    "github.com/prometheus/prometheus/discovery/openstack/openstack.go": [
      "TestOpenstackSDHypervisorRefresh",
      "TestOpenstackSDHypervisorRefreshWithDoneContext",
      "TestOpenstackSDInstanceRefresh",
      "TestOpenstackSDInstanceRefreshWithDoneContext",
      "TestOpenstackSDLoadBalancerRefresh",
      "TestOpenstackSDLoadBalancerRefreshWithDoneContext"
    ],
    "github.com/prometheus/prometheus/discovery/ovhcloud/dedicated_server.go": [
      "TestDiscoverer",
      "TestErrorInitClient",
      "TestOvhCloudVpsRefresh",
      "TestOvhcloudDedicatedServerRefresh",
      "TestParseIPs"
    ],
    "github.com/prometheus/prometheus/discovery/ovhcloud/metrics.go": [
      "TestDiscoverer",
      "TestErrorInitClient",
      "TestOvhCloudVpsRefresh",
      "TestOvhcloudDedicatedServerRefresh",
      "TestParseIPs"
    ],
    "github.com/prometheus/prometheus/discovery/ovhcloud/ovhcloud.go": [
      "TestDiscoverer",
      "TestErrorInitClient",
      "TestOvhCloudVpsRefresh",
      "TestOvhcloudDedicatedServerRefresh",
      "TestParseIPs"
    ],
    "github.com/prometheus/prometheus/discovery/ovhcloud/vps.go": [
      "TestDiscoverer",
      "TestErrorInitClient",
      "TestOvhCloudVpsRefresh",
      "TestOvhcloudDedicatedServerRefresh",
      "TestParseIPs"
    ],
    "github.com/prometheus/prometheus/discovery/puppetdb/metrics.go": [
      "TestPuppetDBInvalidCode",
      "TestPuppetDBInvalidFormat",
      "TestPuppetDBRefresh",
      "TestPuppetDBRefreshWithParameters",
      "TestPuppetSlashInURL"
    ],
    "github.com/prometheus/prometheus/discovery/puppetdb/puppetdb.go": [
      "TestPuppetDBInvalidCode",
      "TestPuppetDBInvalidFormat",
      "TestPuppetDBRefresh",
      "TestPuppetDBRefreshWithParameters",
      "TestPuppetSlashInURL"
    ],
    "github.com/prometheus/prometheus/discovery/puppetdb/resources.go": [
      "TestPuppetDBInvalidCode",
      "TestPuppetDBInvalidFormat",
      "TestPuppetDBRefresh",
      "TestPuppetDBRefreshWithParameters",
      "TestPuppetSlashInURL"
    ],
    "github.com/prometheus/prometheus/discovery/refresh/refresh.go": [
      "TestRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/registry.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/scaleway/baremetal.go": [
      "TestScalewayInstanceAuthToken",
      "TestScalewayInstanceRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/scaleway/instance.go": [
      "TestScalewayInstanceAuthToken",
      "TestScalewayInstanceRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/scaleway/metrics.go": [
      "TestScalewayInstanceAuthToken",
      "TestScalewayInstanceRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/scaleway/scaleway.go": [
      "TestScalewayInstanceAuthToken",
      "TestScalewayInstanceRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/stackit/metrics.go": [
      "TestServerSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/stackit/server.go": [
      "TestServerSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/stackit/stackit.go": [
      "TestServerSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/targetgroup/targetgroup.go": [
      "TestString",
      "TestTargetGroupJSONMarshal",
      "TestTargetGroupStrictJSONUnmarshal",
      "TestTargetGroupYamlMarshal",
      "TestTargetGroupYamlUnmarshal"
    ],
    "github.com/prometheus/prometheus/discovery/triton/metrics.go": [
      "TestTritonSDNew",
      "TestTritonSDNewBadConfig",
      "TestTritonSDNewCNConfig",
      "TestTritonSDNewGroupsConfig",
      "TestTritonSDRefreshCNsUUIDOnly",
      "TestTritonSDRefreshCNsWithHostname",
      "TestTritonSDRefreshCancelled",
      "TestTritonSDRefreshMultipleTargets",
      "TestTritonSDRefreshNoServer",
      "TestTritonSDRefreshNoTargets"
    ],
    "github.com/prometheus/prometheus/discovery/triton/triton.go": [
      "TestTritonSDNew",
      "TestTritonSDNewBadConfig",
      "TestTritonSDNewCNConfig",
      "TestTritonSDNewGroupsConfig",
      "TestTritonSDRefreshCNsUUIDOnly",
      "TestTritonSDRefreshCNsWithHostname",
      "TestTritonSDRefreshCancelled",
      "TestTritonSDRefreshMultipleTargets",
      "TestTritonSDRefreshNoServer",
      "TestTritonSDRefreshNoTargets"
    ],
    "github.com/prometheus/prometheus/discovery/util.go": [
      "TestApplyConfigDoesNotModifyStaticTargets",
      "TestConfigReloadAndShutdownRace",
      "TestConfigsCustomUnMarshalMarshal",
      "TestCoordinationWithReceiver",
      "TestDiscovererConfigs",
      "TestGaugeFailedConfigs",
      "TestIdenticalConfigurationsAreCoalesced",
      "TestTargetSetRecreatesEmptyStaticConfigs",
      "TestTargetSetRecreatesTargetGroupsOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigChange",
      "TestTargetSetTargetGroupsPresentOnConfigDuplicateAndDeleteOriginal",
      "TestTargetSetTargetGroupsPresentOnConfigReload",
      "TestTargetSetTargetGroupsPresentOnConfigRename",
      "TestTargetSetTargetGroupsUpdateDuringApplyConfig",
      "TestTargetUpdatesOrder",
      "TestUnregisterMetrics"
    ],
    "github.com/prometheus/prometheus/discovery/uyuni/metrics.go": [
      "TestUyuniSDHandleError",
      "TestUyuniSDLogin",
      "TestUyuniSDSkipLogin"
    ],
    "github.com/prometheus/prometheus/discovery/uyuni/uyuni.go": [
      "TestUyuniSDHandleError",
      "TestUyuniSDLogin",
      "TestUyuniSDSkipLogin"
    ],
    "github.com/prometheus/prometheus/discovery/vultr/metrics.go": [
      "TestVultrSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/vultr/vultr.go": [
      "TestVultrSDRefresh"
    ],
    "github.com/prometheus/prometheus/discovery/xds/client.go": [
      "TestCreateNewHTTPResourceClient",
      "TestHTTPResourceClientFetchEmptyResponse",
      "TestHTTPResourceClientFetchFullResponse",
      "TestHTTPResourceClientServerError",
      "TestKumaHTTPDiscoveryRefresh",
      "TestKumaMadsV1ResourceParserEmptySlice",
      "TestKumaMadsV1ResourceParserInvalidResources",
      "TestKumaMadsV1ResourceParserInvalidTypeURL",
      "TestKumaMadsV1ResourceParserValidResources",
      "TestMakeXDSResourceHttpEndpoint",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLHost",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLScheme",
      "TestNewKumaHTTPDiscovery",
      "TestPollingDisappearingTargets",
      "TestPollingRefreshAttachesGroupMetadata",
      "TestPollingRefreshSkipUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/xds/kuma.go": [
      "TestCreateNewHTTPResourceClient",
      "TestHTTPResourceClientFetchEmptyResponse",
      "TestHTTPResourceClientFetchFullResponse",
      "TestHTTPResourceClientServerError",
      "TestKumaHTTPDiscoveryRefresh",
      "TestKumaMadsV1ResourceParserEmptySlice",
      "TestKumaMadsV1ResourceParserInvalidResources",
      "TestKumaMadsV1ResourceParserInvalidTypeURL",
      "TestKumaMadsV1ResourceParserValidResources",
      "TestMakeXDSResourceHttpEndpoint",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLHost",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLScheme",
      "TestNewKumaHTTPDiscovery",
      "TestPollingDisappearingTargets",
      "TestPollingRefreshAttachesGroupMetadata",
      "TestPollingRefreshSkipUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/xds/kuma_mads.pb.go": [
      "TestCreateNewHTTPResourceClient",
      "TestHTTPResourceClientFetchEmptyResponse",
      "TestHTTPResourceClientFetchFullResponse",
      "TestHTTPResourceClientServerError",
      "TestKumaHTTPDiscoveryRefresh",
      "TestKumaMadsV1ResourceParserEmptySlice",
      "TestKumaMadsV1ResourceParserInvalidResources",
      "TestKumaMadsV1ResourceParserInvalidTypeURL",
      "TestKumaMadsV1ResourceParserValidResources",
      "TestMakeXDSResourceHttpEndpoint",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLHost",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLScheme",
      "TestNewKumaHTTPDiscovery",
      "TestPollingDisappearingTargets",
      "TestPollingRefreshAttachesGroupMetadata",
      "TestPollingRefreshSkipUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/xds/metrics.go": [
      "TestCreateNewHTTPResourceClient",
      "TestHTTPResourceClientFetchEmptyResponse",
      "TestHTTPResourceClientFetchFullResponse",
      "TestHTTPResourceClientServerError",
      "TestKumaHTTPDiscoveryRefresh",
      "TestKumaMadsV1ResourceParserEmptySlice",
      "TestKumaMadsV1ResourceParserInvalidResources",
      "TestKumaMadsV1ResourceParserInvalidTypeURL",
      "TestKumaMadsV1ResourceParserValidResources",
      "TestMakeXDSResourceHttpEndpoint",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLHost",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLScheme",
      "TestNewKumaHTTPDiscovery",
      "TestPollingDisappearingTargets",
      "TestPollingRefreshAttachesGroupMetadata",
      "TestPollingRefreshSkipUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/xds/xds.go": [
      "TestCreateNewHTTPResourceClient",
      "TestHTTPResourceClientFetchEmptyResponse",
      "TestHTTPResourceClientFetchFullResponse",
      "TestHTTPResourceClientServerError",
      "TestKumaHTTPDiscoveryRefresh",
      "TestKumaMadsV1ResourceParserEmptySlice",
      "TestKumaMadsV1ResourceParserInvalidResources",
      "TestKumaMadsV1ResourceParserInvalidTypeURL",
      "TestKumaMadsV1ResourceParserValidResources",
      "TestMakeXDSResourceHttpEndpoint",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLHost",
      "TestMakeXDSResourceHttpEndpointEmptyServerURLScheme",
      "TestNewKumaHTTPDiscovery",
      "TestPollingDisappearingTargets",
      "TestPollingRefreshAttachesGroupMetadata",
      "TestPollingRefreshSkipUpdate"
    ],
    "github.com/prometheus/prometheus/discovery/zookeeper/zookeeper.go": [
      "TestNewDiscoveryError"
    ],
    "github.com/prometheus/prometheus/documentation/examples/custom-sd/adapter/adapter.go": [
      "TestGenerateTargetGroups",
      "TestWriteOutput"
    ],
    "github.com/prometheus/prometheus/model/histogram/float_histogram.go": [
      "TestAllFloatBucketIterator",
      "TestAllReverseFloatBucketIterator",
      "TestCumulativeBucketIterator",
      "TestCustomBucketsHistogramToFloat",
      "TestFloatBucketIteratorTargetSchema",
      "TestFloatCustomBucketsIterators",
      "TestFloatHistogramAdd",
      "TestFloatHistogramCompact",
      "TestFloatHistogramCopy",
      "TestFloatHistogramCopyTo",
      "TestFloatHistogramCopyToSchema",
      "TestFloatHistogramDetectReset",
      "TestFloatHistogramDiv",
      "TestFloatHistogramEquals",
      "TestFloatHistogramMul",
      "TestFloatHistogramReduceResolution",
      "TestFloatHistogramSize",
      "TestFloatHistogramString",
      "TestFloatHistogramSub",
      "TestGetBoundExponential",
      "TestHistogramCompact",
      "TestHistogramCopy",
      "TestHistogramCopyTo",
      "TestHistogramEquals",
      "TestHistogramReduceResolution",
      "TestHistogramString",
      "TestHistogramToFloat",
      "TestHistogramValidation",
      "TestReduceResolutionFloatHistogram",
      "TestReduceResolutionHistogram",
      "TestRegularBucketIterator",
      "TestReverseFloatBucketIterator"
    ],
    "github.com/prometheus/prometheus/model/histogram/generic.go": [
      "TestAllFloatBucketIterator",
      "TestAllReverseFloatBucketIterator",
      "TestCumulativeBucketIterator",
      "TestCustomBucketsHistogramToFloat",
      "TestFloatBucketIteratorTargetSchema",
      "TestFloatCustomBucketsIterators",
      "TestFloatHistogramAdd",
      "TestFloatHistogramCompact",
      "TestFloatHistogramCopy",
      "TestFloatHistogramCopyTo",
      "TestFloatHistogramCopyToSchema",
      "TestFloatHistogramDetectReset",
      "TestFloatHistogramDiv",
      "TestFloatHistogramEquals",
      "TestFloatHistogramMul",
      "TestFloatHistogramReduceResolution",
      "TestFloatHistogramSize",
      "TestFloatHistogramString",
      "TestFloatHistogramSub",
      "TestGetBoundExponential",
      "TestHistogramCompact",
      "TestHistogramCopy",
      "TestHistogramCopyTo",
      "TestHistogramEquals",
      "TestHistogramReduceResolution",
      "TestHistogramString",
      "TestHistogramToFloat",
      "TestHistogramValidation",
      "TestReduceResolutionFloatHistogram",
      "TestReduceResolutionHistogram",
      "TestRegularBucketIterator",
      "TestReverseFloatBucketIterator"
    ],
    "github.com/prometheus/prometheus/model/histogram/histogram.go": [
      "TestAllFloatBucketIterator",
      "TestAllReverseFloatBucketIterator",
      "TestCumulativeBucketIterator",
      "TestCustomBucketsHistogramToFloat",
      "TestFloatBucketIteratorTargetSchema",
      "TestFloatCustomBucketsIterators",
      "TestFloatHistogramAdd",
      "TestFloatHistogramCompact",
      "TestFloatHistogramCopy",
      "TestFloatHistogramCopyTo",
      "TestFloatHistogramCopyToSchema",
      "TestFloatHistogramDetectReset",
      "TestFloatHistogramDiv",
      "TestFloatHistogramEquals",
      "TestFloatHistogramMul",
      "TestFloatHistogramReduceResolution",
      "TestFloatHistogramSize",
      "TestFloatHistogramString",
      "TestFloatHistogramSub",
      "TestGetBoundExponential",
      "TestHistogramCompact",
      "TestHistogramCopy",
      "TestHistogramCopyTo",
      "TestHistogramEquals",
      "TestHistogramReduceResolution",
      "TestHistogramString",
      "TestHistogramToFloat",
      "TestHistogramValidation",
      "TestReduceResolutionFloatHistogram",
      "TestReduceResolutionHistogram",
      "TestRegularBucketIterator",
      "TestReverseFloatBucketIterator"
    ],
    "github.com/prometheus/prometheus/model/histogram/test_utils.go": [
      "TestAllFloatBucketIterator",
      "TestAllReverseFloatBucketIterator",
      "TestCumulativeBucketIterator",
      "TestCustomBucketsHistogramToFloat",
      "TestFloatBucketIteratorTargetSchema",
      "TestFloatCustomBucketsIterators",
      "TestFloatHistogramAdd",
      "TestFloatHistogramCompact",
      "TestFloatHistogramCopy",
      "TestFloatHistogramCopyTo",
      "TestFloatHistogramCopyToSchema",
      "TestFloatHistogramDetectReset",
      "TestFloatHistogramDiv",
      "TestFloatHistogramEquals",
      "TestFloatHistogramMul",
      "TestFloatHistogramReduceResolution",
      "TestFloatHistogramSize",
      "TestFloatHistogramString",
      "TestFloatHistogramSub",
      "TestGetBoundExponential",
      "TestHistogramCompact",
      "TestHistogramCopy",
      "TestHistogramCopyTo",
      "TestHistogramEquals",
      "TestHistogramReduceResolution",
      "TestHistogramString",
      "TestHistogramToFloat",
      "TestHistogramValidation",
      "TestReduceResolutionFloatHistogram",
      "TestReduceResolutionHistogram",
      "TestRegularBucketIterator",
      "TestReverseFloatBucketIterator"
    ],
    "github.com/prometheus/prometheus/model/labels/labels_common.go": [
      "TestBuilder",
      "TestByteSize",
      "TestContainsInOrder",
      "TestEqualMultiStringMapMatcher_addPrefix",
      "TestEqualMultiStringMatcher_Matches",
      "TestFastRegexMatcher_MatchString",
      "TestFastRegexMatcher_SetMatches_ShouldReturnACopy",
      "TestFindEqualOrPrefixStringMatchers",
      "TestFindSetMatches",
      "TestHasPrefixCaseInsensitive",
      "TestHasSuffixCaseInsensitive",
      "TestInverse",
      "TestIsRegexOptimized",
      "TestLabels_BytesWithLabels",
      "TestLabels_BytesWithoutLabels",
      "TestLabels_Compare",
      "TestLabels_Copy",
      "TestLabels_DropMetricName",
      "TestLabels_DropReserved",
      "TestLabels_Equal",
      "TestLabels_FromStrings",
      "TestLabels_Get",
      "TestLabels_Has",
      "TestLabels_HasDuplicateLabelNames",
      "TestLabels_Hash",
      "TestLabels_IsValid",
      "TestLabels_Map",
      "TestLabels_MatchLabels",
      "TestLabels_String",
      "TestLabels_ValidationModes",
      "TestLabels_WithoutEmpty",
      "TestLiteralPrefixInsensitiveStringMatcher",
      "TestLiteralPrefixSensitiveStringMatcher",
      "TestLiteralSuffixStringMatcher",
      "TestMarshaling",
      "TestMatcher",
      "TestNewEqualMultiStringMatcher",
      "TestOptimizeConcatRegex",
      "TestOptimizeEqualOrPrefixStringMatchers",
      "TestPrefix",
      "TestScratchBuilder",
      "TestSizeOfLabels",
      "TestStableHash",
      "TestStringMatcherFromRegexp",
      "TestStringMatcherFromRegexp_LiteralPrefix",
      "TestStringMatcherFromRegexp_LiteralSuffix",
      "TestStringMatcherFromRegexp_Quest",
      "TestToNormalisedLower",
      "TestZeroOrOneCharacterStringMatcher"
    ],
    "github.com/prometheus/prometheus/model/labels/labels_stringlabels.go": [
      "TestBuilder",
      "TestByteSize",
      "TestContainsInOrder",
      "TestEqualMultiStringMapMatcher_addPrefix",
      "TestEqualMultiStringMatcher_Matches",
      "TestFastRegexMatcher_MatchString",
      "TestFastRegexMatcher_SetMatches_ShouldReturnACopy",
      "TestFindEqualOrPrefixStringMatchers",
      "TestFindSetMatches",
      "TestHasPrefixCaseInsensitive",
      "TestHasSuffixCaseInsensitive",
      "TestInverse",
      "TestIsRegexOptimized",
      "TestLabels_BytesWithLabels",
      "TestLabels_BytesWithoutLabels",
      "TestLabels_Compare",
      "TestLabels_Copy",
      "TestLabels_DropMetricName",
      "TestLabels_DropReserved",
      "TestLabels_Equal",
      "TestLabels_FromStrings",
      "TestLabels_Get",
      "TestLabels_Has",
      "TestLabels_HasDuplicateLabelNames",
      "TestLabels_Hash",
      "TestLabels_IsValid",
      "TestLabels_Map",
      "TestLabels_MatchLabels",
      "TestLabels_String",
      "TestLabels_ValidationModes",
      "TestLabels_WithoutEmpty",
      "TestLiteralPrefixInsensitiveStringMatcher",
      "TestLiteralPrefixSensitiveStringMatcher",
      "TestLiteralSuffixStringMatcher",
      "TestMarshaling",
      "TestMatcher",
      "TestNewEqualMultiStringMatcher",
      "TestOptimizeConcatRegex",
      "TestOptimizeEqualOrPrefixStringMatchers",
      "TestPrefix",
      "TestScratchBuilder",
      "TestSizeOfLabels",
      "TestStableHash",
      "TestStringMatcherFromRegexp",
      "TestStringMatcherFromRegexp_LiteralPrefix",
      "TestStringMatcherFromRegexp_LiteralSuffix",
      "TestStringMatcherFromRegexp_Quest",
      "TestToNormalisedLower",
      "TestZeroOrOneCharacterStringMatcher"
    ],
    "github.com/prometheus/prometheus/model/labels/matcher.go": [
      "TestBuilder",
      "TestByteSize",
      "TestContainsInOrder",
      "TestEqualMultiStringMapMatcher_addPrefix",
      "TestEqualMultiStringMatcher_Matches",
      "TestFastRegexMatcher_MatchString",
      "TestFastRegexMatcher_SetMatches_ShouldReturnACopy",
      "TestFindEqualOrPrefixStringMatchers",
      "TestFindSetMatches",
      "TestHasPrefixCaseInsensitive",
      "TestHasSuffixCaseInsensitive",
      "TestInverse",
      "TestIsRegexOptimized",
      "TestLabels_BytesWithLabels",
      "TestLabels_BytesWithoutLabels",
      "TestLabels_Compare",
      "TestLabels_Copy",
      "TestLabels_DropMetricName",
      "TestLabels_DropReserved",
      "TestLabels_Equal",
      "TestLabels_FromStrings",
      "TestLabels_Get",
      "TestLabels_Has",
      "TestLabels_HasDuplicateLabelNames",
      "TestLabels_Hash",
      "TestLabels_IsValid",
      "TestLabels_Map",
      "TestLabels_MatchLabels",
      "TestLabels_String",
      "TestLabels_ValidationModes",
      "TestLabels_WithoutEmpty",
      "TestLiteralPrefixInsensitiveStringMatcher",
      "TestLiteralPrefixSensitiveStringMatcher",
      "TestLiteralSuffixStringMatcher",
      "TestMarshaling",
      "TestMatcher",
      "TestNewEqualMultiStringMatcher",
      "TestOptimizeConcatRegex",
      "TestOptimizeEqualOrPrefixStringMatchers",
      "TestPrefix",
      "TestScratchBuilder",
      "TestSizeOfLabels",
      "TestStableHash",
      "TestStringMatcherFromRegexp",
      "TestStringMatcherFromRegexp_LiteralPrefix",
      "TestStringMatcherFromRegexp_LiteralSuffix",
      "TestStringMatcherFromRegexp_Quest",
      "TestToNormalisedLower",
      "TestZeroOrOneCharacterStringMatcher"
    ],
    "github.com/prometheus/prometheus/model/labels/regexp.go": [
      "TestBuilder",
      "TestByteSize",
      "TestContainsInOrder",
      "TestEqualMultiStringMapMatcher_addPrefix",
      "TestEqualMultiStringMatcher_Matches",
      "TestFastRegexMatcher_MatchString",
      "TestFastRegexMatcher_SetMatches_ShouldReturnACopy",
      "TestFindEqualOrPrefixStringMatchers",
      "TestFindSetMatches",
      "TestHasPrefixCaseInsensitive",
      "TestHasSuffixCaseInsensitive",
      "TestInverse",
      "TestIsRegexOptimized",
      "TestLabels_BytesWithLabels",
      "TestLabels_BytesWithoutLabels",
      "TestLabels_Compare",
      "TestLabels_Copy",
      "TestLabels_DropMetricName",
      "TestLabels_DropReserved",
      "TestLabels_Equal",
      "TestLabels_FromStrings",
      "TestLabels_Get",
      "TestLabels_Has",
      "TestLabels_HasDuplicateLabelNames",
      "TestLabels_Hash",
      "TestLabels_IsValid",
      "TestLabels_Map",
      "TestLabels_MatchLabels",
      "TestLabels_String",
      "TestLabels_ValidationModes",
      "TestLabels_WithoutEmpty",
      "TestLiteralPrefixInsensitiveStringMatcher",
      "TestLiteralPrefixSensitiveStringMatcher",
      "TestLiteralSuffixStringMatcher",
      "TestMarshaling",
      "TestMatcher",
      "TestNewEqualMultiStringMatcher",
      "TestOptimizeConcatRegex",
      "TestOptimizeEqualOrPrefixStringMatchers",
      "TestPrefix",
      "TestScratchBuilder",
      "TestSizeOfLabels",
      "TestStableHash",
      "TestStringMatcherFromRegexp",
      "TestStringMatcherFromRegexp_LiteralPrefix",
      "TestStringMatcherFromRegexp_LiteralSuffix",
      "TestStringMatcherFromRegexp_Quest",
      "TestToNormalisedLower",
      "TestZeroOrOneCharacterStringMatcher"
    ],
    "github.com/prometheus/prometheus/model/labels/sharding_stringlabels.go": [
      "TestBuilder",
      "TestByteSize",
      "TestContainsInOrder",
      "TestEqualMultiStringMapMatcher_addPrefix",
      "TestEqualMultiStringMatcher_Matches",
      "TestFastRegexMatcher_MatchString",
      "TestFastRegexMatcher_SetMatches_ShouldReturnACopy",
      "TestFindEqualOrPrefixStringMatchers",
      "TestFindSetMatches",
      "TestHasPrefixCaseInsensitive",
      "TestHasSuffixCaseInsensitive",
      "TestInverse",
      "TestIsRegexOptimized",
      "TestLabels_BytesWithLabels",
      "TestLabels_BytesWithoutLabels",
      "TestLabels_Compare",
      "TestLabels_Copy",
      "TestLabels_DropMetricName",
      "TestLabels_DropReserved",
      "TestLabels_Equal",
      "TestLabels_FromStrings",
      "TestLabels_Get",
      "TestLabels_Has",
      "TestLabels_HasDuplicateLabelNames",
      "TestLabels_Hash",
      "TestLabels_IsValid",
      "TestLabels_Map",
      "TestLabels_MatchLabels",
      "TestLabels_String",
      "TestLabels_ValidationModes",
      "TestLabels_WithoutEmpty",
      "TestLiteralPrefixInsensitiveStringMatcher",
      "TestLiteralPrefixSensitiveStringMatcher",
      "TestLiteralSuffixStringMatcher",
      "TestMarshaling",
      "TestMatcher",
      "TestNewEqualMultiStringMatcher",
      "TestOptimizeConcatRegex",
      "TestOptimizeEqualOrPrefixStringMatchers",
      "TestPrefix",
      "TestScratchBuilder",
      "TestSizeOfLabels",
      "TestStableHash",
      "TestStringMatcherFromRegexp",
      "TestStringMatcherFromRegexp_LiteralPrefix",
      "TestStringMatcherFromRegexp_LiteralSuffix",
      "TestStringMatcherFromRegexp_Quest",
      "TestToNormalisedLower",
      "TestZeroOrOneCharacterStringMatcher"
    ],
    "github.com/prometheus/prometheus/model/labels/test_utils.go": [
      "TestBuilder",
      "TestByteSize",
      "TestContainsInOrder",
      "TestEqualMultiStringMapMatcher_addPrefix",
      "TestEqualMultiStringMatcher_Matches",
      "TestFastRegexMatcher_MatchString",
      "TestFastRegexMatcher_SetMatches_ShouldReturnACopy",
      "TestFindEqualOrPrefixStringMatchers",
      "TestFindSetMatches",
      "TestHasPrefixCaseInsensitive",
      "TestHasSuffixCaseInsensitive",
      "TestInverse",
      "TestIsRegexOptimized",
      "TestLabels_BytesWithLabels",
      "TestLabels_BytesWithoutLabels",
      "TestLabels_Compare",
      "TestLabels_Copy",
      "TestLabels_DropMetricName",
      "TestLabels_DropReserved",
      "TestLabels_Equal",
      "TestLabels_FromStrings",
      "TestLabels_Get",
      "TestLabels_Has",
      "TestLabels_HasDuplicateLabelNames",
      "TestLabels_Hash",
      "TestLabels_IsValid",
      "TestLabels_Map",
      "TestLabels_MatchLabels",
      "TestLabels_String",
      "TestLabels_ValidationModes",
      "TestLabels_WithoutEmpty",
      "TestLiteralPrefixInsensitiveStringMatcher",
      "TestLiteralPrefixSensitiveStringMatcher",
      "TestLiteralSuffixStringMatcher",
      "TestMarshaling",
      "TestMatcher",
      "TestNewEqualMultiStringMatcher",
      "TestOptimizeConcatRegex",
      "TestOptimizeEqualOrPrefixStringMatchers",
      "TestPrefix",
      "TestScratchBuilder",
      "TestSizeOfLabels",
      "TestStableHash",
      "TestStringMatcherFromRegexp",
      "TestStringMatcherFromRegexp_LiteralPrefix",
      "TestStringMatcherFromRegexp_LiteralSuffix",
      "TestStringMatcherFromRegexp_Quest",
      "TestToNormalisedLower",
      "TestZeroOrOneCharacterStringMatcher"
    ],
    "github.com/prometheus/prometheus/model/relabel/relabel.go": [
      "TestConfig_UnmarshalThenMarshal",
      "TestRegexp_JSONUnmarshalThenMarshal",
      "TestRegexp_ShouldMarshalAndUnmarshalZeroValue",
      "TestRelabel",
      "TestRelabelValidate",
      "TestTargetLabelLegacyValidity"
    ],
    "github.com/prometheus/prometheus/model/rulefmt/rulefmt.go": [
      "TestError",
      "TestErrorUnwrap",
      "TestParseFileFailure",
      "TestParseFileSuccess",
      "TestParseFileSuccessWithAliases",
      "TestTemplateParsing",
      "TestUniqueErrorNodes",
      "TestWrappedError"
    ],
    "github.com/prometheus/prometheus/model/textparse/interface.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/model/textparse/nhcbparse.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/model/textparse/openmetricslex.l.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/model/textparse/openmetricsparse.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/model/textparse/promlex.l.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/model/textparse/promparse.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/model/textparse/protobufparse.go": [
      "TestCTParseFailures",
      "TestNHCBParserErrorHandling",
      "TestNHCBParserOMParser_MultipleHistograms",
      "TestNHCBParserOnOMParser",
      "TestNHCBParserResetLastExponential",
      "TestNHCBParser_NoNHCBWhenExponential",
      "TestNewParser",
      "TestOMNullByteHandling",
      "TestOpenMetricsParse",
      "TestOpenMetricsParseErrors",
      "TestOpenMetricsParse_UTF8",
      "TestPromNullByteHandling",
      "TestPromParse",
      "TestPromParseErrors",
      "TestProtobufParse",
      "TestUTF8PromParse"
    ],
    "github.com/prometheus/prometheus/notifier/alert.go": [
      "TestApplyConfig",
      "TestCustomDo",
      "TestDroppedAlertmanagers",
      "TestExternalLabels",
      "TestHandlerNextBatch",
      "TestHandlerQueuing",
      "TestHandlerRelabel",
      "TestHandlerSendAll",
      "TestHandlerSendAllRemapPerAm",
      "TestHangingNotifier",
      "TestLabelSetNotReused",
      "TestLabelsToOpenAPILabelSet",
      "TestPostPath",
      "TestReload",
      "TestStop_DrainingDisabled",
      "TestStop_DrainingEnabled"
    ],
    "github.com/prometheus/prometheus/notifier/alertmanager.go": [
      "TestApplyConfig",
      "TestCustomDo",
      "TestDroppedAlertmanagers",
      "TestExternalLabels",
      "TestHandlerNextBatch",
      "TestHandlerQueuing",
      "TestHandlerRelabel",
      "TestHandlerSendAll",
      "TestHandlerSendAllRemapPerAm",
      "TestHangingNotifier",
      "TestLabelSetNotReused",
      "TestLabelsToOpenAPILabelSet",
      "TestPostPath",
      "TestReload",
      "TestStop_DrainingDisabled",
      "TestStop_DrainingEnabled"
    ],
    "github.com/prometheus/prometheus/notifier/alertmanagerset.go": [
      "TestApplyConfig",
      "TestCustomDo",
      "TestDroppedAlertmanagers",
      "TestExternalLabels",
      "TestHandlerNextBatch",
      "TestHandlerQueuing",
      "TestHandlerRelabel",
      "TestHandlerSendAll",
      "TestHandlerSendAllRemapPerAm",
      "TestHangingNotifier",
      "TestLabelSetNotReused",
      "TestLabelsToOpenAPILabelSet",
      "TestPostPath",
      "TestReload",
      "TestStop_DrainingDisabled",
      "TestStop_DrainingEnabled"
    ],
    "github.com/prometheus/prometheus/notifier/manager.go": [
      "TestApplyConfig",
      "TestCustomDo",
      "TestDroppedAlertmanagers",
      "TestExternalLabels",
      "TestHandlerNextBatch",
      "TestHandlerQueuing",
      "TestHandlerRelabel",
      "TestHandlerSendAll",
      "TestHandlerSendAllRemapPerAm",
      "TestHangingNotifier",
      "TestLabelSetNotReused",
      "TestLabelsToOpenAPILabelSet",
      "TestPostPath",
      "TestReload",
      "TestStop_DrainingDisabled",
      "TestStop_DrainingEnabled"
    ],
    "github.com/prometheus/prometheus/notifier/metric.go": [
      "TestApplyConfig",
      "TestCustomDo",
      "TestDroppedAlertmanagers",
      "TestExternalLabels",
      "TestHandlerNextBatch",
      "TestHandlerQueuing",
      "TestHandlerRelabel",
      "TestHandlerSendAll",
      "TestHandlerSendAllRemapPerAm",
      "TestHangingNotifier",
      "TestLabelSetNotReused",
      "TestLabelsToOpenAPILabelSet",
      "TestPostPath",
      "TestReload",
      "TestStop_DrainingDisabled",
      "TestStop_DrainingEnabled"
    ],
    "github.com/prometheus/prometheus/notifier/util.go": [
      "TestApplyConfig",
      "TestCustomDo",
      "TestDroppedAlertmanagers",
      "TestExternalLabels",
      "TestHandlerNextBatch",
      "TestHandlerQueuing",
      "TestHandlerRelabel",
      "TestHandlerSendAll",
      "TestHandlerSendAllRemapPerAm",
      "TestHangingNotifier",
      "TestLabelSetNotReused",
      "TestLabelsToOpenAPILabelSet",
      "TestPostPath",
      "TestReload",
      "TestStop_DrainingDisabled",
      "TestStop_DrainingEnabled"
    ],
    "github.com/prometheus/prometheus/prompb/io/prometheus/client/decoder.go": [
      "TestMetricStreamingDecoder"
    ],
    "github.com/prometheus/prometheus/prompb/io/prometheus/client/metrics.pb.go": [
      "TestMetricStreamingDecoder"
    ],
    "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/codec.go": [
      "TestInteropV1UnmarshalWithV2_DeterministicEmpty",
      "TestInteropV2UnmarshalWithV1_DeterministicEmpty",
      "TestOptimizedMarshal",
      "TestSymbolsTable"
    ],
    "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/custom.go": [
      "TestInteropV1UnmarshalWithV2_DeterministicEmpty",
      "TestInteropV2UnmarshalWithV1_DeterministicEmpty",
      "TestOptimizedMarshal",
      "TestSymbolsTable"
    ],
    "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/symbols.go": [
      "TestInteropV1UnmarshalWithV2_DeterministicEmpty",
      "TestInteropV2UnmarshalWithV1_DeterministicEmpty",
      "TestOptimizedMarshal",
      "TestSymbolsTable"
    ],
    "github.com/prometheus/prometheus/prompb/io/prometheus/write/v2/types.pb.go": [
      "TestInteropV1UnmarshalWithV2_DeterministicEmpty",
      "TestInteropV2UnmarshalWithV1_DeterministicEmpty",
      "TestOptimizedMarshal",
      "TestSymbolsTable"
    ],
    "github.com/prometheus/prometheus/promql/durations.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/engine.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/functions.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/histogram_stats_iterator.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/info.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/parser/ast.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/functions.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/generated_parser.y.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/lex.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/parse.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/prettier.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/printer.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/parser/value.go": [
      "TestAggregateExprPretty",
      "TestBinaryExprPretty",
      "TestCallExprPretty",
      "TestDurationExprPretty",
      "TestExprPretty",
      "TestExprString",
      "TestExtractSelectors",
      "TestHistogramTestExpression",
      "TestLexer",
      "TestNaNExpression",
      "TestParenExprPretty",
      "TestParseCustomFunctions",
      "TestParseExpressions",
      "TestParseHistogramSeries",
      "TestParseSeries",
      "TestParseSeriesDesc",
      "TestRecoverParserError",
      "TestRecoverParserRuntime",
      "TestStepInvariantExpr",
      "TestUnaryPretty",
      "TestVectorSelector_String"
    ],
    "github.com/prometheus/prometheus/promql/promqltest/test.go": [
      "TestAssertMatrixSorted",
      "TestLazyLoader_WithSamplesTill",
      "TestMigrateTestData_BasicMode",
      "TestMigrateTestData_StrictMode",
      "TestMigrateTestData_TolerantMode",
      "TestRunTest"
    ],
    "github.com/prometheus/prometheus/promql/promqltest/test_migrate.go": [
      "TestAssertMatrixSorted",
      "TestLazyLoader_WithSamplesTill",
      "TestMigrateTestData_BasicMode",
      "TestMigrateTestData_StrictMode",
      "TestMigrateTestData_TolerantMode",
      "TestRunTest"
    ],
    "github.com/prometheus/prometheus/promql/quantile.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/query_logger.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/promql/value.go": [
      "TestAtModifier",
      "TestBucketQuantile_ForcedMonotonicity",
      "TestCalculateDuration",
      "TestConcurrentRangeQueries",
      "TestDeriv",
      "TestDurationVisitor",
      "TestEngineEvalStmtTimestamps",
      "TestEngineOptsValidation",
      "TestEngineShutdown",
      "TestEngine_Close",
      "TestEvaluationWithDelayedNameRemovalDisabled",
      "TestEvaluations",
      "TestFunctionList",
      "TestHistogramCopyFromIteratorRegression",
      "TestHistogramQuantileAnnotations",
      "TestHistogramRateWithFloatStaleness",
      "TestHistogramStatsDecoding",
      "TestHistogramStatsMixedUse",
      "TestInconsistentHistogramCount",
      "TestIndexReuse",
      "TestInfo",
      "TestInstantQueryWithRangeVectorSelector",
      "TestKahanSumInc",
      "TestMMapFile",
      "TestMatrix_ContainsSameLabelset",
      "TestMaxQuerySamples",
      "TestParseBrokenJSON",
      "TestPreprocessAndWrapWithStepInvariantExpr",
      "TestQueryCancel",
      "TestQueryConcurrency",
      "TestQueryError",
      "TestQueryLogger_basic",
      "TestQueryLogger_error",
      "TestQueryLogger_fields",
      "TestQueryLogging",
      "TestQueryLookbackDelta",
      "TestQueryStatistics",
      "TestQueryTimeout",
      "TestRateAnnotations",
      "TestRecoverEvaluatorError",
      "TestRecoverEvaluatorErrorWithWarnings",
      "TestRecoverEvaluatorRuntime",
      "TestSelectHintsSetCorrectly",
      "TestSubquerySelector",
      "TestVector_ContainsSameLabelset"
    ],
    "github.com/prometheus/prometheus/rules/alerting.go": [
      "TestAlertingEvalWithOrigin",
      "TestAlertingRule",
      "TestAlertingRuleDuplicate",
      "TestAlertingRuleEmptyLabelFromTemplate",
      "TestAlertingRuleExternalLabelsInTemplate",
      "TestAlertingRuleExternalURLInTemplate",
      "TestAlertingRuleLabelsUpdate",
      "TestAlertingRuleLimit",
      "TestAlertingRuleQueryInTemplate",
      "TestAlertingRuleState",
      "TestAlertingRuleTemplateWithHistogram",
      "TestAlertingRule_ActiveAlertsCount",
      "TestAlertingRule_SetDependencyRules",
      "TestAlertingRule_SetDependentRules",
      "TestAsyncRuleEvaluation",
      "TestBoundedRuleEvalConcurrency",
      "TestCopyState",
      "TestDeletedRuleMarkedStale",
      "TestDependenciesEdgeCases",
      "TestDependencyMap",
      "TestDependencyMapUpdatesOnGroupUpdate",
      "TestDependentRulesWithNonMetricExpression",
      "TestForStateAddSamples",
      "TestForStateRestore",
      "TestFromOriginContext",
      "TestGroupHasAlertingRules",
      "TestGroupStalenessOnRemoval",
      "TestGroup_Equals",
      "TestGroup_Eval_RaceConditionOnStoppingGroupEvaluationWhileRulesAreEvaluatedConcurrently",
      "TestGroup_QueryOffset",
      "TestKeepFiringFor",
      "TestLabels_FromMaps",
      "TestManager_LoadGroups_ShouldCheckWhetherEachRuleHasDependentsAndDependencies",
      "TestMetricsStalenessOnManagerShutdown",
      "TestMetricsUpdate",
      "TestNativeHistogramsInRecordingRules",
      "TestNewRuleDetail",
      "TestNewRuleDetailPanics",
      "TestNewRuleGroupRestoration",
      "TestNewRuleGroupRestorationWithRestoreNewGroupOption",
      "TestNoDependency",
      "TestNoMetricSelector",
      "TestNotify",
      "TestParseFiles",
      "TestPendingAndKeepFiringFor",
      "TestQueryForStateSeries",
      "TestRecordingEvalWithOrigin",
      "TestRecordingRuleLimit",
      "TestRecordingRule_SetDependencyRules",
      "TestRecordingRule_SetDependentRules",
      "TestRuleDependencyController_AnalyseRules",
      "TestRuleEval",
      "TestRuleEvalDuplicate",
      "TestRuleGroupEvalIterationFunc",
      "TestRuleHealthUpdates",
      "TestRuleMovedBetweenGroups",
      "TestRulesDependentOnMetaMetrics",
      "TestSendAlertsDontAffectActiveAlerts",
      "TestStaleness",
      "TestUpdate",
      "TestUpdateWhenStopped"
    ],
    "github.com/prometheus/prometheus/rules/group.go": [
      "TestAlertingEvalWithOrigin",
      "TestAlertingRule",
      "TestAlertingRuleDuplicate",
      "TestAlertingRuleEmptyLabelFromTemplate",
      "TestAlertingRuleExternalLabelsInTemplate",
      "TestAlertingRuleExternalURLInTemplate",
      "TestAlertingRuleLabelsUpdate",
      "TestAlertingRuleLimit",
      "TestAlertingRuleQueryInTemplate",
      "TestAlertingRuleState",
      "TestAlertingRuleTemplateWithHistogram",
      "TestAlertingRule_ActiveAlertsCount",
      "TestAlertingRule_SetDependencyRules",
      "TestAlertingRule_SetDependentRules",
      "TestAsyncRuleEvaluation",
      "TestBoundedRuleEvalConcurrency",
      "TestCopyState",
      "TestDeletedRuleMarkedStale",
      "TestDependenciesEdgeCases",
      "TestDependencyMap",
      "TestDependencyMapUpdatesOnGroupUpdate",
      "TestDependentRulesWithNonMetricExpression",
      "TestForStateAddSamples",
      "TestForStateRestore",
      "TestFromOriginContext",
      "TestGroupHasAlertingRules",
      "TestGroupStalenessOnRemoval",
      "TestGroup_Equals",
      "TestGroup_Eval_RaceConditionOnStoppingGroupEvaluationWhileRulesAreEvaluatedConcurrently",
      "TestGroup_QueryOffset",
      "TestKeepFiringFor",
      "TestLabels_FromMaps",
      "TestManager_LoadGroups_ShouldCheckWhetherEachRuleHasDependentsAndDependencies",
      "TestMetricsStalenessOnManagerShutdown",
      "TestMetricsUpdate",
      "TestNativeHistogramsInRecordingRules",
      "TestNewRuleDetail",
      "TestNewRuleDetailPanics",
      "TestNewRuleGroupRestoration",
      "TestNewRuleGroupRestorationWithRestoreNewGroupOption",
      "TestNoDependency",
      "TestNoMetricSelector",
      "TestNotify",
      "TestParseFiles",
      "TestPendingAndKeepFiringFor",
      "TestQueryForStateSeries",
      "TestRecordingEvalWithOrigin",
      "TestRecordingRuleLimit",
      "TestRecordingRule_SetDependencyRules",
      "TestRecordingRule_SetDependentRules",
      "TestRuleDependencyController_AnalyseRules",
      "TestRuleEval",
      "TestRuleEvalDuplicate",
      "TestRuleGroupEvalIterationFunc",
      "TestRuleHealthUpdates",
      "TestRuleMovedBetweenGroups",
      "TestRulesDependentOnMetaMetrics",
      "TestSendAlertsDontAffectActiveAlerts",
      "TestStaleness",
      "TestUpdate",
      "TestUpdateWhenStopped"
    ],
    "github.com/prometheus/prometheus/rules/manager.go": [
      "TestAlertingEvalWithOrigin",
      "TestAlertingRule",
      "TestAlertingRuleDuplicate",
      "TestAlertingRuleEmptyLabelFromTemplate",
      "TestAlertingRuleExternalLabelsInTemplate",
      "TestAlertingRuleExternalURLInTemplate",
      "TestAlertingRuleLabelsUpdate",
      "TestAlertingRuleLimit",
      "TestAlertingRuleQueryInTemplate",
      "TestAlertingRuleState",
      "TestAlertingRuleTemplateWithHistogram",
      "TestAlertingRule_ActiveAlertsCount",
      "TestAlertingRule_SetDependencyRules",
      "TestAlertingRule_SetDependentRules",
      "TestAsyncRuleEvaluation",
      "TestBoundedRuleEvalConcurrency",
      "TestCopyState",
      "TestDeletedRuleMarkedStale",
      "TestDependenciesEdgeCases",
      "TestDependencyMap",
      "TestDependencyMapUpdatesOnGroupUpdate",
      "TestDependentRulesWithNonMetricExpression",
      "TestForStateAddSamples",
      "TestForStateRestore",
      "TestFromOriginContext",
      "TestGroupHasAlertingRules",
      "TestGroupStalenessOnRemoval",
      "TestGroup_Equals",
      "TestGroup_Eval_RaceConditionOnStoppingGroupEvaluationWhileRulesAreEvaluatedConcurrently",
      "TestGroup_QueryOffset",
      "TestKeepFiringFor",
      "TestLabels_FromMaps",
      "TestManager_LoadGroups_ShouldCheckWhetherEachRuleHasDependentsAndDependencies",
      "TestMetricsStalenessOnManagerShutdown",
      "TestMetricsUpdate",
      "TestNativeHistogramsInRecordingRules",
      "TestNewRuleDetail",
      "TestNewRuleDetailPanics",
      "TestNewRuleGroupRestoration",
      "TestNewRuleGroupRestorationWithRestoreNewGroupOption",
      "TestNoDependency",
      "TestNoMetricSelector",
      "TestNotify",
      "TestParseFiles",
      "TestPendingAndKeepFiringFor",
      "TestQueryForStateSeries",
      "TestRecordingEvalWithOrigin",
      "TestRecordingRuleLimit",
      "TestRecordingRule_SetDependencyRules",
      "TestRecordingRule_SetDependentRules",
      "TestRuleDependencyController_AnalyseRules",
      "TestRuleEval",
      "TestRuleEvalDuplicate",
      "TestRuleGroupEvalIterationFunc",
      "TestRuleHealthUpdates",
      "TestRuleMovedBetweenGroups",
      "TestRulesDependentOnMetaMetrics",
      "TestSendAlertsDontAffectActiveAlerts",
      "TestStaleness",
      "TestUpdate",
      "TestUpdateWhenStopped"
    ],
    "github.com/prometheus/prometheus/rules/origin.go": [
      "TestAlertingEvalWithOrigin",
      "TestAlertingRule",
      "TestAlertingRuleDuplicate",
      "TestAlertingRuleEmptyLabelFromTemplate",
      "TestAlertingRuleExternalLabelsInTemplate",
      "TestAlertingRuleExternalURLInTemplate",
      "TestAlertingRuleLabelsUpdate",
      "TestAlertingRuleLimit",
      "TestAlertingRuleQueryInTemplate",
      "TestAlertingRuleState",
      "TestAlertingRuleTemplateWithHistogram",
      "TestAlertingRule_ActiveAlertsCount",
      "TestAlertingRule_SetDependencyRules",
      "TestAlertingRule_SetDependentRules",
      "TestAsyncRuleEvaluation",
      "TestBoundedRuleEvalConcurrency",
      "TestCopyState",
      "TestDeletedRuleMarkedStale",
      "TestDependenciesEdgeCases",
      "TestDependencyMap",
      "TestDependencyMapUpdatesOnGroupUpdate",
      "TestDependentRulesWithNonMetricExpression",
      "TestForStateAddSamples",
      "TestForStateRestore",
      "TestFromOriginContext",
      "TestGroupHasAlertingRules",
      "TestGroupStalenessOnRemoval",
      "TestGroup_Equals",
      "TestGroup_Eval_RaceConditionOnStoppingGroupEvaluationWhileRulesAreEvaluatedConcurrently",
      "TestGroup_QueryOffset",
      "TestKeepFiringFor",
      "TestLabels_FromMaps",
      "TestManager_LoadGroups_ShouldCheckWhetherEachRuleHasDependentsAndDependencies",
      "TestMetricsStalenessOnManagerShutdown",
      "TestMetricsUpdate",
      "TestNativeHistogramsInRecordingRules",
      "TestNewRuleDetail",
      "TestNewRuleDetailPanics",
      "TestNewRuleGroupRestoration",
      "TestNewRuleGroupRestorationWithRestoreNewGroupOption",
      "TestNoDependency",
      "TestNoMetricSelector",
      "TestNotify",
      "TestParseFiles",
      "TestPendingAndKeepFiringFor",
      "TestQueryForStateSeries",
      "TestRecordingEvalWithOrigin",
      "TestRecordingRuleLimit",
      "TestRecordingRule_SetDependencyRules",
      "TestRecordingRule_SetDependentRules",
      "TestRuleDependencyController_AnalyseRules",
      "TestRuleEval",
      "TestRuleEvalDuplicate",
      "TestRuleGroupEvalIterationFunc",
      "TestRuleHealthUpdates",
      "TestRuleMovedBetweenGroups",
      "TestRulesDependentOnMetaMetrics",
      "TestSendAlertsDontAffectActiveAlerts",
      "TestStaleness",
      "TestUpdate",
      "TestUpdateWhenStopped"
    ],
    "github.com/prometheus/prometheus/rules/recording.go": [
      "TestAlertingEvalWithOrigin",
      "TestAlertingRule",
      "TestAlertingRuleDuplicate",
      "TestAlertingRuleEmptyLabelFromTemplate",
      "TestAlertingRuleExternalLabelsInTemplate",
      "TestAlertingRuleExternalURLInTemplate",
      "TestAlertingRuleLabelsUpdate",
      "TestAlertingRuleLimit",
      "TestAlertingRuleQueryInTemplate",
      "TestAlertingRuleState",
      "TestAlertingRuleTemplateWithHistogram",
      "TestAlertingRule_ActiveAlertsCount",
      "TestAlertingRule_SetDependencyRules",
      "TestAlertingRule_SetDependentRules",
      "TestAsyncRuleEvaluation",
      "TestBoundedRuleEvalConcurrency",
      "TestCopyState",
      "TestDeletedRuleMarkedStale",
      "TestDependenciesEdgeCases",
      "TestDependencyMap",
      "TestDependencyMapUpdatesOnGroupUpdate",
      "TestDependentRulesWithNonMetricExpression",
      "TestForStateAddSamples",
      "TestForStateRestore",
      "TestFromOriginContext",
      "TestGroupHasAlertingRules",
      "TestGroupStalenessOnRemoval",
      "TestGroup_Equals",
      "TestGroup_Eval_RaceConditionOnStoppingGroupEvaluationWhileRulesAreEvaluatedConcurrently",
      "TestGroup_QueryOffset",
      "TestKeepFiringFor",
      "TestLabels_FromMaps",
      "TestManager_LoadGroups_ShouldCheckWhetherEachRuleHasDependentsAndDependencies",
      "TestMetricsStalenessOnManagerShutdown",
      "TestMetricsUpdate",
      "TestNativeHistogramsInRecordingRules",
      "TestNewRuleDetail",
      "TestNewRuleDetailPanics",
      "TestNewRuleGroupRestoration",
      "TestNewRuleGroupRestorationWithRestoreNewGroupOption",
      "TestNoDependency",
      "TestNoMetricSelector",
      "TestNotify",
      "TestParseFiles",
      "TestPendingAndKeepFiringFor",
      "TestQueryForStateSeries",
      "TestRecordingEvalWithOrigin",
      "TestRecordingRuleLimit",
      "TestRecordingRule_SetDependencyRules",
      "TestRecordingRule_SetDependentRules",
      "TestRuleDependencyController_AnalyseRules",
      "TestRuleEval",
      "TestRuleEvalDuplicate",
      "TestRuleGroupEvalIterationFunc",
      "TestRuleHealthUpdates",
      "TestRuleMovedBetweenGroups",
      "TestRulesDependentOnMetaMetrics",
      "TestSendAlertsDontAffectActiveAlerts",
      "TestStaleness",
      "TestUpdate",
      "TestUpdateWhenStopped"
    ],
    "github.com/prometheus/prometheus/schema/labels.go": [
      "TestIgnoreOverriddenMetadataLabelsScratchBuilder",
      "TestMetadata"
    ],
    "github.com/prometheus/prometheus/scrape/clientprotobuf.go": [
      "TestAcceptHeader",
      "TestBucketLimitAppender",
      "TestCheckAddError",
      "TestConvertClassicHistogramsToNHCB",
      "TestDiscoveredLabelsUpdate",
      "TestDroppedTargetsList",
      "TestIsSeriesPartOfFamily",
      "TestLeQuantileReLabel",
      "TestManagerApplyConfig",
      "TestManagerCTZeroIngestion",
      "TestManagerCTZeroIngestionHistogram",
      "TestManagerScrapePools",
      "TestManagerTargetsUpdates",
      "TestMaxSchemaAppender",
      "TestNativeHistogramMaxSchemaSet",
      "TestNewClientWithBadTLSConfig",
      "TestNewHTTPBasicAuth",
      "TestNewHTTPBearerToken",
      "TestNewHTTPBearerTokenFile",
      "TestNewHTTPCACert",
      "TestNewHTTPClientCert",
      "TestNewHTTPWithBadServerName",
      "TestNewHTTPWithServerName",
      "TestNewScrapePool",
      "TestOnlyProviderStaleTargetsAreDropped",
      "TestOnlyStaleTargetsAreDropped",
      "TestPickSchema",
      "TestPopulateLabels",
      "TestPromTextToProto",
      "TestProviderStaleTargetsAreDropped",
      "TestReusableConfig",
      "TestReuseCacheRace",
      "TestReuseScrapeCache",
      "TestScrapeAddFast",
      "TestScrapeAppendMetadataUpdate",
      "TestScrapeAppendWithParseError",
      "TestScrapeLoopAppend",
      "TestScrapeLoopAppendCacheEntryButErrNotFound",
      "TestScrapeLoopAppendEmptyWithNoContentType",
      "TestScrapeLoopAppendExemplar",
      "TestScrapeLoopAppendExemplarSeries",
      "TestScrapeLoopAppendFailsWithNoContentType",
      "TestScrapeLoopAppendForConflictingPrefixedLabels",
      "TestScrapeLoopAppendGracefullyIfAmendOrOutOfOrderOrOutOfBounds",
      "TestScrapeLoopAppendNoStalenessIfTimestamp",
      "TestScrapeLoopAppendSampleLimit",
      "TestScrapeLoopAppendStaleness",
      "TestScrapeLoopAppendStalenessIfTrackTimestampStaleness",
      "TestScrapeLoopCache",
      "TestScrapeLoopCacheMemoryExhaustionProtection",
      "TestScrapeLoopCompression",
      "TestScrapeLoopDiscardDuplicateLabels",
      "TestScrapeLoopDiscardUnnamedMetrics",
      "TestScrapeLoopFailLegacyUnderUTF8",
      "TestScrapeLoopFailWithInvalidLabelsAfterRelabel",
      "TestScrapeLoopForcedErr",
      "TestScrapeLoopLabelLimit",
      "TestScrapeLoopMetadata",
      "TestScrapeLoopOutOfBoundsTimeError",
      "TestScrapeLoopRun",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrape",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrapeForTimestampedMetrics",
      "TestScrapeLoopRunCreatesStaleMarkersOnParseFailure",
      "TestScrapeLoopRunReportsTargetDownOnInvalidUTF8",
      "TestScrapeLoopRunReportsTargetDownOnScrapeError",
      "TestScrapeLoopSeriesAdded",
      "TestScrapeLoopSeriesAddedDuplicates",
      "TestScrapeLoopStop",
      "TestScrapeLoopStopBeforeRun",
      "TestScrapeLoop_ChangingMetricString",
      "TestScrapeLoop_DiscardTimestamps",
      "TestScrapeLoop_HistogramBucketLimit",
      "TestScrapeLoop_RespectTimestamps",
      "TestScrapePoolAppender",
      "TestScrapePoolRaces",
      "TestScrapePoolReload",
      "TestScrapePoolReloadPreserveRelabeledIntervalTimeout",
      "TestScrapePoolScrapeAfterReload",
      "TestScrapePoolScrapeLoopsStarted",
      "TestScrapePoolStop",
      "TestScrapePoolTargetLimit",
      "TestScrapeReportLimit",
      "TestScrapeReportMetadataUpdate",
      "TestScrapeReportSingleAppender",
      "TestScrapeUTF8",
      "TestSetOffsetSeed",
      "TestSetOptionsHandlingStaleness",
      "TestStorageHandlesOutOfOrderTimestamps",
      "TestTargetDisappearsAfterProviderRemoved",
      "TestTargetLabels",
      "TestTargetOffset",
      "TestTargetScrapeConfigWithLabels",
      "TestTargetScrapeIntervalAndTimeoutRelabel",
      "TestTargetScrapeScrapeCancel",
      "TestTargetScrapeScrapeNotFound",
      "TestTargetScraperBodySizeLimit",
      "TestTargetScraperScrapeOK",
      "TestTargetURL",
      "TestTargetsFromGroup",
      "TestTargetsFromGroupWithLabelKeepDrop",
      "TestTypeUnitReLabel"
    ],
    "github.com/prometheus/prometheus/scrape/manager.go": [
      "TestAcceptHeader",
      "TestBucketLimitAppender",
      "TestCheckAddError",
      "TestConvertClassicHistogramsToNHCB",
      "TestDiscoveredLabelsUpdate",
      "TestDroppedTargetsList",
      "TestIsSeriesPartOfFamily",
      "TestLeQuantileReLabel",
      "TestManagerApplyConfig",
      "TestManagerCTZeroIngestion",
      "TestManagerCTZeroIngestionHistogram",
      "TestManagerScrapePools",
      "TestManagerTargetsUpdates",
      "TestMaxSchemaAppender",
      "TestNativeHistogramMaxSchemaSet",
      "TestNewClientWithBadTLSConfig",
      "TestNewHTTPBasicAuth",
      "TestNewHTTPBearerToken",
      "TestNewHTTPBearerTokenFile",
      "TestNewHTTPCACert",
      "TestNewHTTPClientCert",
      "TestNewHTTPWithBadServerName",
      "TestNewHTTPWithServerName",
      "TestNewScrapePool",
      "TestOnlyProviderStaleTargetsAreDropped",
      "TestOnlyStaleTargetsAreDropped",
      "TestPickSchema",
      "TestPopulateLabels",
      "TestPromTextToProto",
      "TestProviderStaleTargetsAreDropped",
      "TestReusableConfig",
      "TestReuseCacheRace",
      "TestReuseScrapeCache",
      "TestScrapeAddFast",
      "TestScrapeAppendMetadataUpdate",
      "TestScrapeAppendWithParseError",
      "TestScrapeLoopAppend",
      "TestScrapeLoopAppendCacheEntryButErrNotFound",
      "TestScrapeLoopAppendEmptyWithNoContentType",
      "TestScrapeLoopAppendExemplar",
      "TestScrapeLoopAppendExemplarSeries",
      "TestScrapeLoopAppendFailsWithNoContentType",
      "TestScrapeLoopAppendForConflictingPrefixedLabels",
      "TestScrapeLoopAppendGracefullyIfAmendOrOutOfOrderOrOutOfBounds",
      "TestScrapeLoopAppendNoStalenessIfTimestamp",
      "TestScrapeLoopAppendSampleLimit",
      "TestScrapeLoopAppendStaleness",
      "TestScrapeLoopAppendStalenessIfTrackTimestampStaleness",
      "TestScrapeLoopCache",
      "TestScrapeLoopCacheMemoryExhaustionProtection",
      "TestScrapeLoopCompression",
      "TestScrapeLoopDiscardDuplicateLabels",
      "TestScrapeLoopDiscardUnnamedMetrics",
      "TestScrapeLoopFailLegacyUnderUTF8",
      "TestScrapeLoopFailWithInvalidLabelsAfterRelabel",
      "TestScrapeLoopForcedErr",
      "TestScrapeLoopLabelLimit",
      "TestScrapeLoopMetadata",
      "TestScrapeLoopOutOfBoundsTimeError",
      "TestScrapeLoopRun",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrape",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrapeForTimestampedMetrics",
      "TestScrapeLoopRunCreatesStaleMarkersOnParseFailure",
      "TestScrapeLoopRunReportsTargetDownOnInvalidUTF8",
      "TestScrapeLoopRunReportsTargetDownOnScrapeError",
      "TestScrapeLoopSeriesAdded",
      "TestScrapeLoopSeriesAddedDuplicates",
      "TestScrapeLoopStop",
      "TestScrapeLoopStopBeforeRun",
      "TestScrapeLoop_ChangingMetricString",
      "TestScrapeLoop_DiscardTimestamps",
      "TestScrapeLoop_HistogramBucketLimit",
      "TestScrapeLoop_RespectTimestamps",
      "TestScrapePoolAppender",
      "TestScrapePoolRaces",
      "TestScrapePoolReload",
      "TestScrapePoolReloadPreserveRelabeledIntervalTimeout",
      "TestScrapePoolScrapeAfterReload",
      "TestScrapePoolScrapeLoopsStarted",
      "TestScrapePoolStop",
      "TestScrapePoolTargetLimit",
      "TestScrapeReportLimit",
      "TestScrapeReportMetadataUpdate",
      "TestScrapeReportSingleAppender",
      "TestScrapeUTF8",
      "TestSetOffsetSeed",
      "TestSetOptionsHandlingStaleness",
      "TestStorageHandlesOutOfOrderTimestamps",
      "TestTargetDisappearsAfterProviderRemoved",
      "TestTargetLabels",
      "TestTargetOffset",
      "TestTargetScrapeConfigWithLabels",
      "TestTargetScrapeIntervalAndTimeoutRelabel",
      "TestTargetScrapeScrapeCancel",
      "TestTargetScrapeScrapeNotFound",
      "TestTargetScraperBodySizeLimit",
      "TestTargetScraperScrapeOK",
      "TestTargetURL",
      "TestTargetsFromGroup",
      "TestTargetsFromGroupWithLabelKeepDrop",
      "TestTypeUnitReLabel"
    ],
    "github.com/prometheus/prometheus/scrape/metrics.go": [
      "TestAcceptHeader",
      "TestBucketLimitAppender",
      "TestCheckAddError",
      "TestConvertClassicHistogramsToNHCB",
      "TestDiscoveredLabelsUpdate",
      "TestDroppedTargetsList",
      "TestIsSeriesPartOfFamily",
      "TestLeQuantileReLabel",
      "TestManagerApplyConfig",
      "TestManagerCTZeroIngestion",
      "TestManagerCTZeroIngestionHistogram",
      "TestManagerScrapePools",
      "TestManagerTargetsUpdates",
      "TestMaxSchemaAppender",
      "TestNativeHistogramMaxSchemaSet",
      "TestNewClientWithBadTLSConfig",
      "TestNewHTTPBasicAuth",
      "TestNewHTTPBearerToken",
      "TestNewHTTPBearerTokenFile",
      "TestNewHTTPCACert",
      "TestNewHTTPClientCert",
      "TestNewHTTPWithBadServerName",
      "TestNewHTTPWithServerName",
      "TestNewScrapePool",
      "TestOnlyProviderStaleTargetsAreDropped",
      "TestOnlyStaleTargetsAreDropped",
      "TestPickSchema",
      "TestPopulateLabels",
      "TestPromTextToProto",
      "TestProviderStaleTargetsAreDropped",
      "TestReusableConfig",
      "TestReuseCacheRace",
      "TestReuseScrapeCache",
      "TestScrapeAddFast",
      "TestScrapeAppendMetadataUpdate",
      "TestScrapeAppendWithParseError",
      "TestScrapeLoopAppend",
      "TestScrapeLoopAppendCacheEntryButErrNotFound",
      "TestScrapeLoopAppendEmptyWithNoContentType",
      "TestScrapeLoopAppendExemplar",
      "TestScrapeLoopAppendExemplarSeries",
      "TestScrapeLoopAppendFailsWithNoContentType",
      "TestScrapeLoopAppendForConflictingPrefixedLabels",
      "TestScrapeLoopAppendGracefullyIfAmendOrOutOfOrderOrOutOfBounds",
      "TestScrapeLoopAppendNoStalenessIfTimestamp",
      "TestScrapeLoopAppendSampleLimit",
      "TestScrapeLoopAppendStaleness",
      "TestScrapeLoopAppendStalenessIfTrackTimestampStaleness",
      "TestScrapeLoopCache",
      "TestScrapeLoopCacheMemoryExhaustionProtection",
      "TestScrapeLoopCompression",
      "TestScrapeLoopDiscardDuplicateLabels",
      "TestScrapeLoopDiscardUnnamedMetrics",
      "TestScrapeLoopFailLegacyUnderUTF8",
      "TestScrapeLoopFailWithInvalidLabelsAfterRelabel",
      "TestScrapeLoopForcedErr",
      "TestScrapeLoopLabelLimit",
      "TestScrapeLoopMetadata",
      "TestScrapeLoopOutOfBoundsTimeError",
      "TestScrapeLoopRun",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrape",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrapeForTimestampedMetrics",
      "TestScrapeLoopRunCreatesStaleMarkersOnParseFailure",
      "TestScrapeLoopRunReportsTargetDownOnInvalidUTF8",
      "TestScrapeLoopRunReportsTargetDownOnScrapeError",
      "TestScrapeLoopSeriesAdded",
      "TestScrapeLoopSeriesAddedDuplicates",
      "TestScrapeLoopStop",
      "TestScrapeLoopStopBeforeRun",
      "TestScrapeLoop_ChangingMetricString",
      "TestScrapeLoop_DiscardTimestamps",
      "TestScrapeLoop_HistogramBucketLimit",
      "TestScrapeLoop_RespectTimestamps",
      "TestScrapePoolAppender",
      "TestScrapePoolRaces",
      "TestScrapePoolReload",
      "TestScrapePoolReloadPreserveRelabeledIntervalTimeout",
      "TestScrapePoolScrapeAfterReload",
      "TestScrapePoolScrapeLoopsStarted",
      "TestScrapePoolStop",
      "TestScrapePoolTargetLimit",
      "TestScrapeReportLimit",
      "TestScrapeReportMetadataUpdate",
      "TestScrapeReportSingleAppender",
      "TestScrapeUTF8",
      "TestSetOffsetSeed",
      "TestSetOptionsHandlingStaleness",
      "TestStorageHandlesOutOfOrderTimestamps",
      "TestTargetDisappearsAfterProviderRemoved",
      "TestTargetLabels",
      "TestTargetOffset",
      "TestTargetScrapeConfigWithLabels",
      "TestTargetScrapeIntervalAndTimeoutRelabel",
      "TestTargetScrapeScrapeCancel",
      "TestTargetScrapeScrapeNotFound",
      "TestTargetScraperBodySizeLimit",
      "TestTargetScraperScrapeOK",
      "TestTargetURL",
      "TestTargetsFromGroup",
      "TestTargetsFromGroupWithLabelKeepDrop",
      "TestTypeUnitReLabel"
    ],
    "github.com/prometheus/prometheus/scrape/scrape.go": [
      "TestAcceptHeader",
      "TestBucketLimitAppender",
      "TestCheckAddError",
      "TestConvertClassicHistogramsToNHCB",
      "TestDiscoveredLabelsUpdate",
      "TestDroppedTargetsList",
      "TestIsSeriesPartOfFamily",
      "TestLeQuantileReLabel",
      "TestManagerApplyConfig",
      "TestManagerCTZeroIngestion",
      "TestManagerCTZeroIngestionHistogram",
      "TestManagerScrapePools",
      "TestManagerTargetsUpdates",
      "TestMaxSchemaAppender",
      "TestNativeHistogramMaxSchemaSet",
      "TestNewClientWithBadTLSConfig",
      "TestNewHTTPBasicAuth",
      "TestNewHTTPBearerToken",
      "TestNewHTTPBearerTokenFile",
      "TestNewHTTPCACert",
      "TestNewHTTPClientCert",
      "TestNewHTTPWithBadServerName",
      "TestNewHTTPWithServerName",
      "TestNewScrapePool",
      "TestOnlyProviderStaleTargetsAreDropped",
      "TestOnlyStaleTargetsAreDropped",
      "TestPickSchema",
      "TestPopulateLabels",
      "TestPromTextToProto",
      "TestProviderStaleTargetsAreDropped",
      "TestReusableConfig",
      "TestReuseCacheRace",
      "TestReuseScrapeCache",
      "TestScrapeAddFast",
      "TestScrapeAppendMetadataUpdate",
      "TestScrapeAppendWithParseError",
      "TestScrapeLoopAppend",
      "TestScrapeLoopAppendCacheEntryButErrNotFound",
      "TestScrapeLoopAppendEmptyWithNoContentType",
      "TestScrapeLoopAppendExemplar",
      "TestScrapeLoopAppendExemplarSeries",
      "TestScrapeLoopAppendFailsWithNoContentType",
      "TestScrapeLoopAppendForConflictingPrefixedLabels",
      "TestScrapeLoopAppendGracefullyIfAmendOrOutOfOrderOrOutOfBounds",
      "TestScrapeLoopAppendNoStalenessIfTimestamp",
      "TestScrapeLoopAppendSampleLimit",
      "TestScrapeLoopAppendStaleness",
      "TestScrapeLoopAppendStalenessIfTrackTimestampStaleness",
      "TestScrapeLoopCache",
      "TestScrapeLoopCacheMemoryExhaustionProtection",
      "TestScrapeLoopCompression",
      "TestScrapeLoopDiscardDuplicateLabels",
      "TestScrapeLoopDiscardUnnamedMetrics",
      "TestScrapeLoopFailLegacyUnderUTF8",
      "TestScrapeLoopFailWithInvalidLabelsAfterRelabel",
      "TestScrapeLoopForcedErr",
      "TestScrapeLoopLabelLimit",
      "TestScrapeLoopMetadata",
      "TestScrapeLoopOutOfBoundsTimeError",
      "TestScrapeLoopRun",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrape",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrapeForTimestampedMetrics",
      "TestScrapeLoopRunCreatesStaleMarkersOnParseFailure",
      "TestScrapeLoopRunReportsTargetDownOnInvalidUTF8",
      "TestScrapeLoopRunReportsTargetDownOnScrapeError",
      "TestScrapeLoopSeriesAdded",
      "TestScrapeLoopSeriesAddedDuplicates",
      "TestScrapeLoopStop",
      "TestScrapeLoopStopBeforeRun",
      "TestScrapeLoop_ChangingMetricString",
      "TestScrapeLoop_DiscardTimestamps",
      "TestScrapeLoop_HistogramBucketLimit",
      "TestScrapeLoop_RespectTimestamps",
      "TestScrapePoolAppender",
      "TestScrapePoolRaces",
      "TestScrapePoolReload",
      "TestScrapePoolReloadPreserveRelabeledIntervalTimeout",
      "TestScrapePoolScrapeAfterReload",
      "TestScrapePoolScrapeLoopsStarted",
      "TestScrapePoolStop",
      "TestScrapePoolTargetLimit",
      "TestScrapeReportLimit",
      "TestScrapeReportMetadataUpdate",
      "TestScrapeReportSingleAppender",
      "TestScrapeUTF8",
      "TestSetOffsetSeed",
      "TestSetOptionsHandlingStaleness",
      "TestStorageHandlesOutOfOrderTimestamps",
      "TestTargetDisappearsAfterProviderRemoved",
      "TestTargetLabels",
      "TestTargetOffset",
      "TestTargetScrapeConfigWithLabels",
      "TestTargetScrapeIntervalAndTimeoutRelabel",
      "TestTargetScrapeScrapeCancel",
      "TestTargetScrapeScrapeNotFound",
      "TestTargetScraperBodySizeLimit",
      "TestTargetScraperScrapeOK",
      "TestTargetURL",
      "TestTargetsFromGroup",
      "TestTargetsFromGroupWithLabelKeepDrop",
      "TestTypeUnitReLabel"
    ],
    "github.com/prometheus/prometheus/scrape/target.go": [
      "TestAcceptHeader",
      "TestBucketLimitAppender",
      "TestCheckAddError",
      "TestConvertClassicHistogramsToNHCB",
      "TestDiscoveredLabelsUpdate",
      "TestDroppedTargetsList",
      "TestIsSeriesPartOfFamily",
      "TestLeQuantileReLabel",
      "TestManagerApplyConfig",
      "TestManagerCTZeroIngestion",
      "TestManagerCTZeroIngestionHistogram",
      "TestManagerScrapePools",
      "TestManagerTargetsUpdates",
      "TestMaxSchemaAppender",
      "TestNativeHistogramMaxSchemaSet",
      "TestNewClientWithBadTLSConfig",
      "TestNewHTTPBasicAuth",
      "TestNewHTTPBearerToken",
      "TestNewHTTPBearerTokenFile",
      "TestNewHTTPCACert",
      "TestNewHTTPClientCert",
      "TestNewHTTPWithBadServerName",
      "TestNewHTTPWithServerName",
      "TestNewScrapePool",
      "TestOnlyProviderStaleTargetsAreDropped",
      "TestOnlyStaleTargetsAreDropped",
      "TestPickSchema",
      "TestPopulateLabels",
      "TestPromTextToProto",
      "TestProviderStaleTargetsAreDropped",
      "TestReusableConfig",
      "TestReuseCacheRace",
      "TestReuseScrapeCache",
      "TestScrapeAddFast",
      "TestScrapeAppendMetadataUpdate",
      "TestScrapeAppendWithParseError",
      "TestScrapeLoopAppend",
      "TestScrapeLoopAppendCacheEntryButErrNotFound",
      "TestScrapeLoopAppendEmptyWithNoContentType",
      "TestScrapeLoopAppendExemplar",
      "TestScrapeLoopAppendExemplarSeries",
      "TestScrapeLoopAppendFailsWithNoContentType",
      "TestScrapeLoopAppendForConflictingPrefixedLabels",
      "TestScrapeLoopAppendGracefullyIfAmendOrOutOfOrderOrOutOfBounds",
      "TestScrapeLoopAppendNoStalenessIfTimestamp",
      "TestScrapeLoopAppendSampleLimit",
      "TestScrapeLoopAppendStaleness",
      "TestScrapeLoopAppendStalenessIfTrackTimestampStaleness",
      "TestScrapeLoopCache",
      "TestScrapeLoopCacheMemoryExhaustionProtection",
      "TestScrapeLoopCompression",
      "TestScrapeLoopDiscardDuplicateLabels",
      "TestScrapeLoopDiscardUnnamedMetrics",
      "TestScrapeLoopFailLegacyUnderUTF8",
      "TestScrapeLoopFailWithInvalidLabelsAfterRelabel",
      "TestScrapeLoopForcedErr",
      "TestScrapeLoopLabelLimit",
      "TestScrapeLoopMetadata",
      "TestScrapeLoopOutOfBoundsTimeError",
      "TestScrapeLoopRun",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrape",
      "TestScrapeLoopRunCreatesStaleMarkersOnFailedScrapeForTimestampedMetrics",
      "TestScrapeLoopRunCreatesStaleMarkersOnParseFailure",
      "TestScrapeLoopRunReportsTargetDownOnInvalidUTF8",
      "TestScrapeLoopRunReportsTargetDownOnScrapeError",
      "TestScrapeLoopSeriesAdded",
      "TestScrapeLoopSeriesAddedDuplicates",
      "TestScrapeLoopStop",
      "TestScrapeLoopStopBeforeRun",
      "TestScrapeLoop_ChangingMetricString",
      "TestScrapeLoop_DiscardTimestamps",
      "TestScrapeLoop_HistogramBucketLimit",
      "TestScrapeLoop_RespectTimestamps",
      "TestScrapePoolAppender",
      "TestScrapePoolRaces",
      "TestScrapePoolReload",
      "TestScrapePoolReloadPreserveRelabeledIntervalTimeout",
      "TestScrapePoolScrapeAfterReload",
      "TestScrapePoolScrapeLoopsStarted",
      "TestScrapePoolStop",
      "TestScrapePoolTargetLimit",
      "TestScrapeReportLimit",
      "TestScrapeReportMetadataUpdate",
      "TestScrapeReportSingleAppender",
      "TestScrapeUTF8",
      "TestSetOffsetSeed",
      "TestSetOptionsHandlingStaleness",
      "TestStorageHandlesOutOfOrderTimestamps",
      "TestTargetDisappearsAfterProviderRemoved",
      "TestTargetLabels",
      "TestTargetOffset",
      "TestTargetScrapeConfigWithLabels",
      "TestTargetScrapeIntervalAndTimeoutRelabel",
      "TestTargetScrapeScrapeCancel",
      "TestTargetScrapeScrapeNotFound",
      "TestTargetScraperBodySizeLimit",
      "TestTargetScraperScrapeOK",
      "TestTargetURL",
      "TestTargetsFromGroup",
      "TestTargetsFromGroupWithLabelKeepDrop",
      "TestTypeUnitReLabel"
    ],
    "github.com/prometheus/prometheus/storage/buffer.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/errors.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/fanout.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/generic.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/interface.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/lazy.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/memoized_iterator.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/merge.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/noop.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/remote/azuread/azuread.go": [
      "TestAzureAd",
      "TestAzureAdConfig",
      "TestTokenProvider"
    ],
    "github.com/prometheus/prometheus/storage/remote/chunked.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/client.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/codec.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/dial_context.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/ewma.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/intern.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/max_timestamp.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/metadata_watcher.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/context.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/helper.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/histograms.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/metrics_to_prw.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/number_data_points.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/otlp_to_openmetrics_metadata.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/otlptranslator/prometheusremotewrite/timeseries.go": [
      "TestConvertBucketsLayout",
      "TestConvertExplicitHistogramBucketsToNHCBLayout",
      "TestCreateAttributes",
      "TestEveryNTimes",
      "TestExponentialToNativeHistogram",
      "TestFromMetrics",
      "TestGetPromExemplars",
      "TestHistogramToCustomBucketsHistogram",
      "TestPrometheusConverter_AddHistogramDataPoints",
      "TestPrometheusConverter_AddSummaryDataPoints",
      "TestPrometheusConverter_addCustomBucketsHistogramDataPoints",
      "TestPrometheusConverter_addExponentialHistogramDataPoints",
      "TestPrometheusConverter_addGaugeNumberDataPoints",
      "TestPrometheusConverter_addSumNumberDataPoints",
      "TestTemporality",
      "TestTranslatorMetricFromOtelMetric",
      "Test_convertTimeStamp"
    ],
    "github.com/prometheus/prometheus/storage/remote/queue_manager.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/read.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/read_handler.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/stats.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/storage.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/write.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/remote/write_handler.go": [
      "TestBasicContentNegotiation",
      "TestBuildTimeSeries",
      "TestCalculateDesiredShards",
      "TestCalculateDesiredShardsDetail",
      "TestChunkedReaderCanReadFromChunkedWriter",
      "TestChunkedReader_CorruptedFrame",
      "TestChunkedReader_Overflow",
      "TestChunkedSeries",
      "TestChunkedSeriesIterator",
      "TestChunkedSeriesSet",
      "TestClientCustomHeaders",
      "TestClientRetryAfter",
      "TestCommitErr_V1Message",
      "TestCommitErr_V2Message",
      "TestConcreteSeriesClonesLabels",
      "TestConcreteSeriesIterator_FloatAndHistogramSamples",
      "TestConcreteSeriesIterator_FloatSamples",
      "TestConcreteSeriesIterator_HistogramSamples",
      "TestConcreteSeriesSet",
      "TestDecodeWriteRequest",
      "TestDecodeWriteV2Request",
      "TestDialContextWithRandomConnections",
      "TestDisableReshardOnRetry",
      "TestDropOldTimeSeries",
      "TestExternalLabelsQuerierAddExternalLabels",
      "TestFilterExternalLabels",
      "TestFromQueryResultWithDuplicates",
      "TestHistogramFixtureValid",
      "TestIgnoreExternalLabels",
      "TestIntern",
      "TestIntern_DeleteRef",
      "TestIntern_MultiRef",
      "TestIntern_MultiRef_Concurrent",
      "TestIsSampleOld",
      "TestMergeLabels",
      "TestMetadataDelivery",
      "TestNegotiateResponseType",
      "TestNoDuplicateReadConfigs",
      "TestOTLPDelta",
      "TestOTLPWriteHandler",
      "TestOutOfOrderExemplar_V1Message",
      "TestOutOfOrderHistogram_V1Message",
      "TestOutOfOrderSample_V1Message",
      "TestProcessExternalLabels",
      "TestQueueFilledDeadlock",
      "TestQueueManagerMetrics",
      "TestQueue_FlushAndShutdownDoesNotDeadlock",
      "TestReadClient",
      "TestReleaseNoninternedString",
      "TestRemoteWriteHandlerHeadersHandling_V1Message",
      "TestRemoteWriteHandlerHeadersHandling_V2Message",
      "TestRemoteWriteHandler_V1Message",
      "TestRemoteWriteHandler_V2Message",
      "TestReshard",
      "TestReshardPartialBatch",
      "TestReshardRaceWithStop",
      "TestRetryAfterDuration",
      "TestSampleAndChunkQueryableClient",
      "TestSampleDelivery",
      "TestSampleDeliveryOrder",
      "TestSampleDeliveryTimeout",
      "TestSampledReadEndpoint",
      "TestSendSamplesWithBackoffWithSampleAgeLimit",
      "TestSeriesReset",
      "TestSeriesSetFilter",
      "TestShouldReshard",
      "TestShutdown",
      "TestStorageLifecycle",
      "TestStoreHTTPErrorHandling",
      "TestStreamReadEndpoint",
      "TestStreamResponse",
      "TestUpdateRemoteReadConfigs",
      "TestValidateLabelsAndMetricName",
      "TestWALMetadataDelivery",
      "TestWatchScrapeManager_NotReady",
      "TestWatchScrapeManager_ReadyForCollection",
      "TestWriteStorageApplyConfig_Idempotent",
      "TestWriteStorageApplyConfig_Lifecycle",
      "TestWriteStorageApplyConfig_NoDuplicateWriteConfigs",
      "TestWriteStorageApplyConfig_PartialUpdate",
      "TestWriteStorageApplyConfig_RestartOnNameChange",
      "TestWriteStorageApplyConfig_UpdateExternalLabels",
      "TestWriteStorageApplyConfig_UpdateWithRegisterer",
      "TestWriteStorageApplyConfigsDuringCommit",
      "TestWriteV2RequestFixture"
    ],
    "github.com/prometheus/prometheus/storage/secondary.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/storage/series.go": [
      "TestBufferedSeriesIterator",
      "TestBufferedSeriesIteratorMixedFloatsAndHistograms",
      "TestBufferedSeriesIteratorMixedHistograms",
      "TestBufferedSeriesIteratorNoBadAt",
      "TestChainSampleIterator",
      "TestChainSampleIteratorHistogramCounterResetHint",
      "TestChainSampleIteratorNextImmediatelyFailingIterator",
      "TestChainSampleIteratorSeek",
      "TestChainSampleIteratorSeekFailingIterator",
      "TestChainSampleIteratorSeekHistogramCounterResetHint",
      "TestChunkSeriesSetToSeriesSet",
      "TestCompactingChunkSeriesMerger",
      "TestCompactingChunkSeriesMergerHistogramCounterResetHint",
      "TestConcatenatingChunkIterator",
      "TestConcatenatingChunkSeriesMerger",
      "TestErrDuplicateSampleForTimestamp",
      "TestFanoutErrors",
      "TestFanout_SelectSorted",
      "TestHistogramSeriesToChunks",
      "TestListSeriesIterator",
      "TestMemoizedSeriesIterator",
      "TestMergeChunkQuerierWithNoVerticalChunkSeriesMerger",
      "TestMergeQuerierWithChainMerger",
      "TestMergeQuerierWithSecondaries_ErrorHandling",
      "TestMockSeries",
      "TestSampleRing",
      "TestSampleRingAtFloatHistogram",
      "TestSampleRingMixed"
    ],
    "github.com/prometheus/prometheus/template/template.go": [
      "TestTemplateExpansion",
      "Test_floatToTime"
    ],
    "github.com/prometheus/prometheus/tracing/tracing.go": [
      "TestInstallingNewTracerProvider",
      "TestReinstallingTracerProvider",
      "TestReinstallingTracerProviderWithTLS",
      "TestTracerProviderShutdown",
      "TestUninstallingTracerProvider"
    ],
    "github.com/prometheus/prometheus/tsdb/agent/db.go": [
      "TestCommit",
      "TestDBAllowOOOSamples",
      "TestDBCreatedTimestampSamplesIngestion",
      "TestDBOutOfOrderTimeWindow",
      "TestDB_InvalidSeries",
      "TestFullTruncateWAL",
      "TestNoDeadlock",
      "TestPartialTruncateWAL",
      "TestRollback",
      "TestStorage_DuplicateExemplarsIgnored",
      "TestStripeSeries_Get",
      "TestUnsupportedFunctions",
      "TestWALReplay",
      "Test_ExistingWAL_NextRef",
      "Test_validateOptions"
    ],
    "github.com/prometheus/prometheus/tsdb/agent/series.go": [
      "TestCommit",
      "TestDBAllowOOOSamples",
      "TestDBCreatedTimestampSamplesIngestion",
      "TestDBOutOfOrderTimeWindow",
      "TestDB_InvalidSeries",
      "TestFullTruncateWAL",
      "TestNoDeadlock",
      "TestPartialTruncateWAL",
      "TestRollback",
      "TestStorage_DuplicateExemplarsIgnored",
      "TestStripeSeries_Get",
      "TestUnsupportedFunctions",
      "TestWALReplay",
      "Test_ExistingWAL_NextRef",
      "Test_validateOptions"
    ],
    "github.com/prometheus/prometheus/tsdb/block.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/blockwriter.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/bstream.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/chunk.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/float_histogram.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/histogram.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/histogram_meta.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/varbit.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunkenc/xor.go": [
      "TestAtFloatHistogram",
      "TestBstreamReader",
      "TestBstream_Reset",
      "TestBucketIterator",
      "TestChunk",
      "TestCompareSpansAndInsert",
      "TestFirstFloatHistogramExplicitCounterReset",
      "TestFirstHistogramExplicitCounterReset",
      "TestFloatHistogramAppendOnlyErrors",
      "TestFloatHistogramChunkAppendable",
      "TestFloatHistogramChunkAppendableGauge",
      "TestFloatHistogramChunkAppendableWithEmptySpan",
      "TestFloatHistogramChunkBucketChanges",
      "TestFloatHistogramChunkSameBuckets",
      "TestFloatHistogramUniqueCustomValuesAfterNext",
      "TestFloatHistogramUniqueSpansAfterNext",
      "TestHistogramAppendOnlyErrors",
      "TestHistogramChunkAppendable",
      "TestHistogramChunkAppendableGauge",
      "TestHistogramChunkAppendableWithEmptySpan",
      "TestHistogramChunkBucketChanges",
      "TestHistogramChunkSameBuckets",
      "TestHistogramCustomValuesInternedAfterNextWithAtFloatHistogram",
      "TestHistogramCustomValuesInternedAfterNextWithAtHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtFloatHistogram",
      "TestHistogramUniqueSpansAfterNextWithAtHistogram",
      "TestPool",
      "TestSpansFromBidirectionalCompareSpans",
      "TestVarbitInt",
      "TestVarbitUint",
      "TestWriteReadHistogramChunkLayout"
    ],
    "github.com/prometheus/prometheus/tsdb/chunks/chunk_write_queue.go": [
      "TestChunkDiskMapper_Truncate",
      "TestChunkDiskMapper_Truncate_PreservesFileSequence",
      "TestChunkDiskMapper_Truncate_WriteQueueRaceCondition",
      "TestChunkDiskMapper_WriteChunk_Chunk_IterateChunks",
      "TestChunkWriteQueue_GettingChunkFromQueue",
      "TestChunkWriteQueue_HandlerErrorViaCallback",
      "TestChunkWriteQueue_WrappingAroundSizeLimit",
      "TestChunkWriteQueue_WritingThroughQueue",
      "TestHeadReadWriter_ReadRepairOnEmptyLastFile",
      "TestHeadReadWriter_TruncateAfterFailedIterateChunks",
      "TestQueuePopAfterCloseReturnsAllElements",
      "TestQueuePopBlocksOnEmptyQueue",
      "TestQueuePopUnblocksOnClose",
      "TestQueuePushBlocksOnFullQueue",
      "TestQueuePushPopManyGoroutines",
      "TestQueuePushPopSingleGoroutine",
      "TestQueueSegmentIsKeptEvenIfEmpty",
      "TestReaderWithInvalidBuffer",
      "TestWriterWithDefaultSegmentSize"
    ],
    "github.com/prometheus/prometheus/tsdb/chunks/chunks.go": [
      "TestChunkDiskMapper_Truncate",
      "TestChunkDiskMapper_Truncate_PreservesFileSequence",
      "TestChunkDiskMapper_Truncate_WriteQueueRaceCondition",
      "TestChunkDiskMapper_WriteChunk_Chunk_IterateChunks",
      "TestChunkWriteQueue_GettingChunkFromQueue",
      "TestChunkWriteQueue_HandlerErrorViaCallback",
      "TestChunkWriteQueue_WrappingAroundSizeLimit",
      "TestChunkWriteQueue_WritingThroughQueue",
      "TestHeadReadWriter_ReadRepairOnEmptyLastFile",
      "TestHeadReadWriter_TruncateAfterFailedIterateChunks",
      "TestQueuePopAfterCloseReturnsAllElements",
      "TestQueuePopBlocksOnEmptyQueue",
      "TestQueuePopUnblocksOnClose",
      "TestQueuePushBlocksOnFullQueue",
      "TestQueuePushPopManyGoroutines",
      "TestQueuePushPopSingleGoroutine",
      "TestQueueSegmentIsKeptEvenIfEmpty",
      "TestReaderWithInvalidBuffer",
      "TestWriterWithDefaultSegmentSize"
    ],
    "github.com/prometheus/prometheus/tsdb/chunks/head_chunks.go": [
      "TestChunkDiskMapper_Truncate",
      "TestChunkDiskMapper_Truncate_PreservesFileSequence",
      "TestChunkDiskMapper_Truncate_WriteQueueRaceCondition",
      "TestChunkDiskMapper_WriteChunk_Chunk_IterateChunks",
      "TestChunkWriteQueue_GettingChunkFromQueue",
      "TestChunkWriteQueue_HandlerErrorViaCallback",
      "TestChunkWriteQueue_WrappingAroundSizeLimit",
      "TestChunkWriteQueue_WritingThroughQueue",
      "TestHeadReadWriter_ReadRepairOnEmptyLastFile",
      "TestHeadReadWriter_TruncateAfterFailedIterateChunks",
      "TestQueuePopAfterCloseReturnsAllElements",
      "TestQueuePopBlocksOnEmptyQueue",
      "TestQueuePopUnblocksOnClose",
      "TestQueuePushBlocksOnFullQueue",
      "TestQueuePushPopManyGoroutines",
      "TestQueuePushPopSingleGoroutine",
      "TestQueueSegmentIsKeptEvenIfEmpty",
      "TestReaderWithInvalidBuffer",
      "TestWriterWithDefaultSegmentSize"
    ],
    "github.com/prometheus/prometheus/tsdb/chunks/queue.go": [
      "TestChunkDiskMapper_Truncate",
      "TestChunkDiskMapper_Truncate_PreservesFileSequence",
      "TestChunkDiskMapper_Truncate_WriteQueueRaceCondition",
      "TestChunkDiskMapper_WriteChunk_Chunk_IterateChunks",
      "TestChunkWriteQueue_GettingChunkFromQueue",
      "TestChunkWriteQueue_HandlerErrorViaCallback",
      "TestChunkWriteQueue_WrappingAroundSizeLimit",
      "TestChunkWriteQueue_WritingThroughQueue",
      "TestHeadReadWriter_ReadRepairOnEmptyLastFile",
      "TestHeadReadWriter_TruncateAfterFailedIterateChunks",
      "TestQueuePopAfterCloseReturnsAllElements",
      "TestQueuePopBlocksOnEmptyQueue",
      "TestQueuePopUnblocksOnClose",
      "TestQueuePushBlocksOnFullQueue",
      "TestQueuePushPopManyGoroutines",
      "TestQueuePushPopSingleGoroutine",
      "TestQueueSegmentIsKeptEvenIfEmpty",
      "TestReaderWithInvalidBuffer",
      "TestWriterWithDefaultSegmentSize"
    ],
    "github.com/prometheus/prometheus/tsdb/chunks/samples.go": [
      "TestChunkDiskMapper_Truncate",
      "TestChunkDiskMapper_Truncate_PreservesFileSequence",
      "TestChunkDiskMapper_Truncate_WriteQueueRaceCondition",
      "TestChunkDiskMapper_WriteChunk_Chunk_IterateChunks",
      "TestChunkWriteQueue_GettingChunkFromQueue",
      "TestChunkWriteQueue_HandlerErrorViaCallback",
      "TestChunkWriteQueue_WrappingAroundSizeLimit",
      "TestChunkWriteQueue_WritingThroughQueue",
      "TestHeadReadWriter_ReadRepairOnEmptyLastFile",
      "TestHeadReadWriter_TruncateAfterFailedIterateChunks",
      "TestQueuePopAfterCloseReturnsAllElements",
      "TestQueuePopBlocksOnEmptyQueue",
      "TestQueuePopUnblocksOnClose",
      "TestQueuePushBlocksOnFullQueue",
      "TestQueuePushPopManyGoroutines",
      "TestQueuePushPopSingleGoroutine",
      "TestQueueSegmentIsKeptEvenIfEmpty",
      "TestReaderWithInvalidBuffer",
      "TestWriterWithDefaultSegmentSize"
    ],
    "github.com/prometheus/prometheus/tsdb/compact.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/db.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/errors/errors.go": [
      "TestMultiError_As",
      "TestMultiError_Is"
    ],
    "github.com/prometheus/prometheus/tsdb/exemplar.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/dir.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/dir_unix.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/direct_io.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/direct_io_unsupported.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/fileutil.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/flock.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/flock_unix.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/mmap.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/mmap_unix.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/preallocate.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/preallocate_darwin.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/fileutil/sync_darwin.go": [
      "TestLocking"
    ],
    "github.com/prometheus/prometheus/tsdb/head.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/head_append.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/head_other.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/head_read.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/head_wal.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/index/index.go": [
      "TestBigEndian",
      "TestChunksRefOrdering",
      "TestChunksTimeOrdering",
      "TestDecbufUvarintWithInvalidBuffer",
      "TestDecoder_Postings_WrongInput",
      "TestFindIntersectingPostings",
      "TestIndexRW_Create_Open",
      "TestIndexRW_Postings",
      "TestIntersect",
      "TestIntersectWithMerge",
      "TestListPostings",
      "TestMemPostingsStats",
      "TestMemPostings_Delete",
      "TestMemPostings_PostingsForAllLabelValues",
      "TestMemPostings_PostingsForLabelMatching",
      "TestMemPostings_PostingsForLabelMatchingHonorsContextCancel",
      "TestMemPostings_addFor",
      "TestMemPostings_ensureOrder",
      "TestMergedPostings",
      "TestMergedPostingsSeek",
      "TestMultiIntersect",
      "TestMultiMerge",
      "TestNewFileReaderErrorNoOpenFiles",
      "TestPersistence_index_e2e",
      "TestPostingsMany",
      "TestPostingsStats",
      "TestPostingsStats2",
      "TestPostingsWithIndexHeap",
      "TestReader_LabelNamesForHonorsContextCancel",
      "TestReader_PostingsForAllLabelValues",
      "TestReader_PostingsForLabelMatching",
      "TestRemovedNextStackoverflow",
      "TestRemovedPostings",
      "TestRemovedPostingsSeek",
      "TestSymbols",
      "TestWithoutPostings",
      "TestWriter_ShouldReturnErrorOnSeriesWithDuplicatedLabelNames"
    ],
    "github.com/prometheus/prometheus/tsdb/index/postings.go": [
      "TestBigEndian",
      "TestChunksRefOrdering",
      "TestChunksTimeOrdering",
      "TestDecbufUvarintWithInvalidBuffer",
      "TestDecoder_Postings_WrongInput",
      "TestFindIntersectingPostings",
      "TestIndexRW_Create_Open",
      "TestIndexRW_Postings",
      "TestIntersect",
      "TestIntersectWithMerge",
      "TestListPostings",
      "TestMemPostingsStats",
      "TestMemPostings_Delete",
      "TestMemPostings_PostingsForAllLabelValues",
      "TestMemPostings_PostingsForLabelMatching",
      "TestMemPostings_PostingsForLabelMatchingHonorsContextCancel",
      "TestMemPostings_addFor",
      "TestMemPostings_ensureOrder",
      "TestMergedPostings",
      "TestMergedPostingsSeek",
      "TestMultiIntersect",
      "TestMultiMerge",
      "TestNewFileReaderErrorNoOpenFiles",
      "TestPersistence_index_e2e",
      "TestPostingsMany",
      "TestPostingsStats",
      "TestPostingsStats2",
      "TestPostingsWithIndexHeap",
      "TestReader_LabelNamesForHonorsContextCancel",
      "TestReader_PostingsForAllLabelValues",
      "TestReader_PostingsForLabelMatching",
      "TestRemovedNextStackoverflow",
      "TestRemovedPostings",
      "TestRemovedPostingsSeek",
      "TestSymbols",
      "TestWithoutPostings",
      "TestWriter_ShouldReturnErrorOnSeriesWithDuplicatedLabelNames"
    ],
    "github.com/prometheus/prometheus/tsdb/index/postingsstats.go": [
      "TestBigEndian",
      "TestChunksRefOrdering",
      "TestChunksTimeOrdering",
      "TestDecbufUvarintWithInvalidBuffer",
      "TestDecoder_Postings_WrongInput",
      "TestFindIntersectingPostings",
      "TestIndexRW_Create_Open",
      "TestIndexRW_Postings",
      "TestIntersect",
      "TestIntersectWithMerge",
      "TestListPostings",
      "TestMemPostingsStats",
      "TestMemPostings_Delete",
      "TestMemPostings_PostingsForAllLabelValues",
      "TestMemPostings_PostingsForLabelMatching",
      "TestMemPostings_PostingsForLabelMatchingHonorsContextCancel",
      "TestMemPostings_addFor",
      "TestMemPostings_ensureOrder",
      "TestMergedPostings",
      "TestMergedPostingsSeek",
      "TestMultiIntersect",
      "TestMultiMerge",
      "TestNewFileReaderErrorNoOpenFiles",
      "TestPersistence_index_e2e",
      "TestPostingsMany",
      "TestPostingsStats",
      "TestPostingsStats2",
      "TestPostingsWithIndexHeap",
      "TestReader_LabelNamesForHonorsContextCancel",
      "TestReader_PostingsForAllLabelValues",
      "TestReader_PostingsForLabelMatching",
      "TestRemovedNextStackoverflow",
      "TestRemovedPostings",
      "TestRemovedPostingsSeek",
      "TestSymbols",
      "TestWithoutPostings",
      "TestWriter_ShouldReturnErrorOnSeriesWithDuplicatedLabelNames"
    ],
    "github.com/prometheus/prometheus/tsdb/isolation.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/ooo_head.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/ooo_head_read.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/ooo_isolation.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/querier.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/record/record.go": [
      "TestRecord_Corrupted",
      "TestRecord_EncodeDecode",
      "TestRecord_MetadataDecodeUnknownExtraFields",
      "TestRecord_Type"
    ],
    "github.com/prometheus/prometheus/tsdb/repair.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/testutil.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/tombstones/tombstones.go": [
      "TestAddingNewIntervals",
      "TestDeletingTombstones",
      "TestMemTombstonesConcurrency",
      "TestTombstonesGetWithCopy",
      "TestTruncateBefore",
      "TestWriteAndReadbackTombstones"
    ],
    "github.com/prometheus/prometheus/tsdb/tsdbblockutil.go": [
      "TestAbortBlockCompactions",
      "TestAddDuplicateLabelName",
      "TestAddExemplar",
      "TestAmendHistogramDatapointCausesError",
      "TestAppendEmptyLabelsIgnored",
      "TestAppendHistogram",
      "TestAppendingDifferentEncodingToSameSeries",
      "TestBlockBaseSeriesSet",
      "TestBlockClosingBlockedDuringRemoteRead",
      "TestBlockIndexReader_PostingsForLabelMatching",
      "TestBlockMetaMustNeverBeVersion2",
      "TestBlockQuerier",
      "TestBlockQuerierAndBlockChunkQuerier",
      "TestBlockQuerierDelete",
      "TestBlockQuerierReturnsSortedLabelValues",
      "TestBlockQuerier_AgainstHeadWithOpenChunks",
      "TestBlockQuerier_TrimmingDoesNotModifyOriginalTombstoneIntervals",
      "TestBlockRanges",
      "TestBlockSize",
      "TestBlockWriter",
      "TestCancelCompactions",
      "TestChunkAtBlockBoundary",
      "TestChunkNotFoundHeadGCRace",
      "TestChunkQuerierOOOQuery",
      "TestChunkQuerierReadWriteRace",
      "TestChunkQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestChunkQueryOOOHeadDuringTruncate",
      "TestChunkReader_ConcurrentReads",
      "TestChunkSnapshot",
      "TestChunkSnapshotReplayBug",
      "TestChunkSnapshotTakenAfterIncompleteSnapshot",
      "TestChunkWriter_ReadAfterWrite",
      "TestCircularExemplarStorage_Concurrent_AddExemplar_Resize",
      "TestClose",
      "TestCompactBlockMetas",
      "TestCompactEmptyResultBlockWithTombstone",
      "TestCompactHead",
      "TestCompactHeadWithDeletion",
      "TestCompactionFailWillCleanUpTempDir",
      "TestCompaction_populateBlock",
      "TestComputeChunkEndTime",
      "TestCorrectNumTombstones",
      "TestCorruptedChunk",
      "TestCreateBlock",
      "TestCuttingNewHeadChunks",
      "TestDBAppenderAddRef",
      "TestDBCannotSeePartialCommits",
      "TestDBPanicOnMmappingHeadChunk",
      "TestDBQueryDoesntSeeAppendsAfterCreation",
      "TestDBReadOnly",
      "TestDBReadOnlyClosing",
      "TestDBReadOnly_FlushWAL",
      "TestDBReadOnly_Querier_NoAlteration",
      "TestDB_LabelNames",
      "TestDB_Snapshot",
      "TestDB_SnapshotWithDelete",
      "TestDB_Snapshot_ChunksOutsideOfCompactedRange",
      "TestDB_e2e",
      "TestDB_reloadOrder",
      "TestDataAvailableOnlyAfterCommit",
      "TestDataMissingOnQueryDuringCompaction",
      "TestDataNotAvailableAfterRollback",
      "TestDelayedCompaction",
      "TestDelayedCompactionDoesNotBlockUnrelatedOps",
      "TestDeleteCompactionBlockAfterFailedReload",
      "TestDeleteSimple",
      "TestDeleteUntilCurMax",
      "TestDelete_e2e",
      "TestDeletedIterator",
      "TestDeletedIterator_WithSeek",
      "TestDeletedSamplesAndSeriesStillInWALAfterCheckpoint",
      "TestDisableAutoCompactions",
      "TestDiskFillingUpAfterDisablingOOO",
      "TestDuplicateNaNDatapointNoAmendError",
      "TestEmptyLabelsetCausesError",
      "TestErrReuseAppender",
      "TestGCChunkAccess",
      "TestGCSeriesAccess",
      "TestGaugeFloatHistogramWALAndChunkHeader",
      "TestGaugeHistogramWALAndChunkHeader",
      "TestGenerateCompactionDelay",
      "TestHeadAppendHistogramAndCommitConcurrency",
      "TestHeadAppender_AppendCT",
      "TestHeadAppender_AppendFloatWithSameTimestampAsPreviousHistogram",
      "TestHeadAppender_AppendHistogramCTZeroSample",
      "TestHeadCompactableDoesNotCompactEmptyHead",
      "TestHeadCompactionWhileAppendAndCommitExemplar",
      "TestHeadCompactionWithHistograms",
      "TestHeadDeleteSeriesWithoutSamples",
      "TestHeadDeleteSimple",
      "TestHeadDetectsDuplicateSampleAtSizeLimit",
      "TestHeadExemplars",
      "TestHeadIndexReader_PostingsForLabelMatching",
      "TestHeadInit_DiscardChunksWithUnsupportedEncoding",
      "TestHeadLabelNamesValuesWithMinMaxRange",
      "TestHeadLabelNamesWithMatchers",
      "TestHeadLabelValuesWithMatchers",
      "TestHeadMinOOOTimeUpdate",
      "TestHeadMintAfterTruncation",
      "TestHeadReadWriterRepair",
      "TestHeadSeriesChunkRace",
      "TestHeadShardedPostings",
      "TestHead_ActiveAppenders",
      "TestHead_CanGarbagecollectSeriesCreatedWithoutSamples",
      "TestHead_HighConcurrencyReadAndWrite",
      "TestHead_KeepSeriesInWALCheckpoint",
      "TestHead_LogRollback",
      "TestHead_RaceBetweenSeriesCreationAndGC",
      "TestHead_ReadWAL",
      "TestHead_ReturnsSortedLabelValues",
      "TestHead_Truncate",
      "TestHead_UnknownWALRecord",
      "TestHead_WALMultiRef",
      "TestHistogramAppendAndQuery",
      "TestHistogramCounterResetHeader",
      "TestHistogramInWALAndMmapChunk",
      "TestHistogramMetrics",
      "TestHistogramStaleSample",
      "TestIndexOverwrite",
      "TestInitializeHeadTimestamp",
      "TestInterleavedInOrderAndOOOHistogramCompactionWithCounterResets",
      "TestIsQuerierCollidingWithTruncation",
      "TestIsolation",
      "TestIsolationAppendIDZeroIsNoop",
      "TestIsolationLowWatermarkMonotonous",
      "TestIsolationRollback",
      "TestIsolationWithoutAdd",
      "TestIteratorSeekIntoBuffer",
      "TestLabelNamesWithMatchers",
      "TestLabelValuesWithMatchers",
      "TestLeveledCompactor_plan",
      "TestLockfile",
      "TestMemSeriesIsolation",
      "TestMemSeries_append",
      "TestMemSeries_appendHistogram",
      "TestMemSeries_append_atVariableRate",
      "TestMemSeries_chunk",
      "TestMemSeries_truncateChunks",
      "TestMemSeries_truncateChunks_scenarios",
      "TestMergeQuerierConcurrentSelectMatchers",
      "TestMetadataAssertInMemoryData",
      "TestMetadataCheckpointingOnlyKeepsLatestEntry",
      "TestMetadataInWAL",
      "TestMmapPanicAfterMmapReplayCorruption",
      "TestMultipleEncodingsCommitOrder",
      "TestNativeHistogramFlag",
      "TestNewCompactorFunc",
      "TestNewWalSegmentOnTruncate",
      "TestNoEmptyBlocks",
      "TestNoGapAfterRestartWithOOO",
      "TestNoPanicAfterWALCorruption",
      "TestNoPanicFor0Tombstones",
      "TestNoPanicOnTSDBOpenError",
      "TestNonDuplicateNaNDatapointsCausesAmendError",
      "TestNotMatcherSelectsLabelsUnsetSeries",
      "TestOOOAppendAndQuery",
      "TestOOOAppendWithNoSeries",
      "TestOOOChunks_ToEncodedChunks",
      "TestOOOCompaction",
      "TestOOOCompactionFailure",
      "TestOOOCompactionWithDisabledWriteLog",
      "TestOOOCompactionWithNormalCompaction",
      "TestOOODisabled",
      "TestOOOHeadChunkReader_Chunk",
      "TestOOOHeadChunkReader_Chunk_ConsistentQueryResponseDespiteOfHeadExpanding",
      "TestOOOHeadChunkReader_LabelValues",
      "TestOOOHeadIndexReader_Series",
      "TestOOOHistogramCompactionWithCounterResets",
      "TestOOOHistogramCounterResetHeaders",
      "TestOOOInsert",
      "TestOOOInsertDuplicate",
      "TestOOOInterleavedImplicitCounterResets",
      "TestOOOIsolation",
      "TestOOOMmapCorruption",
      "TestOOOMmapReplay",
      "TestOOONativeHistogramsSettings",
      "TestOOONativeHistogramsWithCounterResets",
      "TestOOOQueryAfterRestartWithSnapshotAndRemovedWBL",
      "TestOOOWALWrite",
      "TestOneCheckpointPerCompactCall",
      "TestOpen_VariousBlockStates",
      "TestOutOfOrderRuntimeConfig",
      "TestOutOfOrderSamplesMetric",
      "TestOutOfOrderSamplesMetricNativeHistogramOOODisabled",
      "TestOverlappingBlocksDetectsAllOverlaps",
      "TestPanicOnApplyConfig",
      "TestPopulateWithDelSeriesIterator_DoubleSeek",
      "TestPopulateWithDelSeriesIterator_NextWithMinTime",
      "TestPopulateWithDelSeriesIterator_SeekInCurrentChunk",
      "TestPopulateWithDelSeriesIterator_SeekWithMinTime",
      "TestPopulateWithTombSeriesIterators",
      "TestPostingsCardinalityStats",
      "TestPostingsForMatcher",
      "TestPostingsForMatchers",
      "TestQuerierIndexQueriesRace",
      "TestQuerierOOOQuery",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingIterators",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterRetrievingQuerier",
      "TestQuerierShouldNotFailIfOOOCompactionOccursAfterSelecting",
      "TestQuerierWithBoundaryChunks",
      "TestQuerier_ShouldNotPanicIfHeadChunkIsTruncatedWhileReadingQueriedChunks",
      "TestQueryHistogramFromBlocksWithCompaction",
      "TestQueryOOOHeadDuringTruncate",
      "TestQueryWithDeletedHistograms",
      "TestQueryWithOneChunkCompletelyDeleted",
      "TestRangeForTimestamp",
      "TestRangeWithFailedCompactionWontGetSelected",
      "TestReadIndexFormatV1",
      "TestReader_PostingsForLabelMatchingHonorsContextCancel",
      "TestRemoveSeriesAfterRollbackAndTruncate",
      "TestRepairBadIndexVersion",
      "TestReplayAfterMmapReplayError",
      "TestResize",
      "TestRetentionDurationMetric",
      "TestSelectExemplar",
      "TestSelectExemplar_DuplicateSeries",
      "TestSelectExemplar_MultiSeries",
      "TestSelectExemplar_TimeRange",
      "TestSetCompactionFailed",
      "TestSizeRetention",
      "TestSizeRetentionMetric",
      "TestSkippingInvalidValuesInSameTxn",
      "TestSnapshotAheadOfWALError",
      "TestSnapshotError",
      "TestSortMetaByMinTimeAndMinRef",
      "TestSparseHistogramSpaceSavings",
      "TestSplitByRange",
      "TestStorageOverflow",
      "TestStripeSeries_gc",
      "TestStripeSeries_getOrSet",
      "TestTimeRetention",
      "TestTombstoneClean",
      "TestTombstoneCleanFail",
      "TestTombstoneCleanResultEmptyBlock",
      "TestUncommittedSamplesNotLostOnTruncate",
      "TestValidateExemplar",
      "TestWALFlushedOnDBClose",
      "TestWALReplayRaceOnSamplesLoggedBeforeSeries",
      "TestWALSampleAndExemplarOrder",
      "TestWALSegmentSizeOptions",
      "TestWBLAndMmapReplay",
      "TestWBLCorruption",
      "TestWBLReplay",
      "TestWaitForPendingReadersInTimeRange",
      "TestWalRepair_DecodingError",
      "TestWblRepair_DecodingError",
      "TestWblReplayAfterOOODisableAndRestart"
    ],
    "github.com/prometheus/prometheus/tsdb/wlog/checkpoint.go": [
      "TestCheckpoint",
      "TestCheckpointNoTmpFolderAfterError",
      "TestCheckpointSeriesReset",
      "TestCompression",
      "TestCorruptAndCarryOn",
      "TestDeleteCheckpoints",
      "TestLastCheckpoint",
      "TestLiveReaderCorrupt_RecordTooLongAndShort",
      "TestLiveReaderCorrupt_ShortFile",
      "TestLogPartialWrite",
      "TestReadCheckpoint",
      "TestReadCheckpointMultipleSegments",
      "TestReadToEndNoCheckpoint",
      "TestReadToEndWithCheckpoint",
      "TestReader",
      "TestReaderData",
      "TestReaderFuzz",
      "TestReaderFuzz_Live",
      "TestReader_Live",
      "TestRun_AvoidNotifyWhenBehind",
      "TestRun_StartupTime",
      "TestSegmentMetric",
      "TestTailSamples",
      "TestWALRepair_ReadingError"
    ],
    "github.com/prometheus/prometheus/tsdb/wlog/live_reader.go": [
      "TestCheckpoint",
      "TestCheckpointNoTmpFolderAfterError",
      "TestCheckpointSeriesReset",
      "TestCompression",
      "TestCorruptAndCarryOn",
      "TestDeleteCheckpoints",
      "TestLastCheckpoint",
      "TestLiveReaderCorrupt_RecordTooLongAndShort",
      "TestLiveReaderCorrupt_ShortFile",
      "TestLogPartialWrite",
      "TestReadCheckpoint",
      "TestReadCheckpointMultipleSegments",
      "TestReadToEndNoCheckpoint",
      "TestReadToEndWithCheckpoint",
      "TestReader",
      "TestReaderData",
      "TestReaderFuzz",
      "TestReaderFuzz_Live",
      "TestReader_Live",
      "TestRun_AvoidNotifyWhenBehind",
      "TestRun_StartupTime",
      "TestSegmentMetric",
      "TestTailSamples",
      "TestWALRepair_ReadingError"
    ],
    "github.com/prometheus/prometheus/tsdb/wlog/reader.go": [
      "TestCheckpoint",
      "TestCheckpointNoTmpFolderAfterError",
      "TestCheckpointSeriesReset",
      "TestCompression",
      "TestCorruptAndCarryOn",
      "TestDeleteCheckpoints",
      "TestLastCheckpoint",
      "TestLiveReaderCorrupt_RecordTooLongAndShort",
      "TestLiveReaderCorrupt_ShortFile",
      "TestLogPartialWrite",
      "TestReadCheckpoint",
      "TestReadCheckpointMultipleSegments",
      "TestReadToEndNoCheckpoint",
      "TestReadToEndWithCheckpoint",
      "TestReader",
      "TestReaderData",
      "TestReaderFuzz",
      "TestReaderFuzz_Live",
      "TestReader_Live",
      "TestRun_AvoidNotifyWhenBehind",
      "TestRun_StartupTime",
      "TestSegmentMetric",
      "TestTailSamples",
      "TestWALRepair_ReadingError"
    ],
    "github.com/prometheus/prometheus/tsdb/wlog/watcher.go": [
      "TestCheckpoint",
      "TestCheckpointNoTmpFolderAfterError",
      "TestCheckpointSeriesReset",
      "TestCompression",
      "TestCorruptAndCarryOn",
      "TestDeleteCheckpoints",
      "TestLastCheckpoint",
      "TestLiveReaderCorrupt_RecordTooLongAndShort",
      "TestLiveReaderCorrupt_ShortFile",
      "TestLogPartialWrite",
      "TestReadCheckpoint",
      "TestReadCheckpointMultipleSegments",
      "TestReadToEndNoCheckpoint",
      "TestReadToEndWithCheckpoint",
      "TestReader",
      "TestReaderData",
      "TestReaderFuzz",
      "TestReaderFuzz_Live",
      "TestReader_Live",
      "TestRun_AvoidNotifyWhenBehind",
      "TestRun_StartupTime",
      "TestSegmentMetric",
      "TestTailSamples",
      "TestWALRepair_ReadingError"
    ],
    "github.com/prometheus/prometheus/tsdb/wlog/wlog.go": [
      "TestCheckpoint",
      "TestCheckpointNoTmpFolderAfterError",
      "TestCheckpointSeriesReset",
      "TestCompression",
      "TestCorruptAndCarryOn",
      "TestDeleteCheckpoints",
      "TestLastCheckpoint",
      "TestLiveReaderCorrupt_RecordTooLongAndShort",
      "TestLiveReaderCorrupt_ShortFile",
      "TestLogPartialWrite",
      "TestReadCheckpoint",
      "TestReadCheckpointMultipleSegments",
      "TestReadToEndNoCheckpoint",
      "TestReadToEndWithCheckpoint",
      "TestReader",
      "TestReaderData",
      "TestReaderFuzz",
      "TestReaderFuzz_Live",
      "TestReader_Live",
      "TestRun_AvoidNotifyWhenBehind",
      "TestRun_StartupTime",
      "TestSegmentMetric",
      "TestTailSamples",
      "TestWALRepair_ReadingError"
    ],
    "github.com/prometheus/prometheus/util/almost/almost.go": [
      "TestEqual"
    ],
    "github.com/prometheus/prometheus/util/compression/buffers.go": [
      "TestEncodeDecode"
    ],
    "github.com/prometheus/prometheus/util/compression/compression.go": [
      "TestEncodeDecode"
    ],
    "github.com/prometheus/prometheus/util/convertnhcb/convertnhcb.go": [
      "TestNHCBConvert"
    ],
    "github.com/prometheus/prometheus/util/fmtutil/format.go": [
      "TestMetricTextToWriteRequestErrorParsingFloatValue",
      "TestMetricTextToWriteRequestErrorParsingMetricType",
      "TestParseAndPushMetricsTextAndFormat"
    ],
    "github.com/prometheus/prometheus/util/httputil/compression.go": [
      "TestCORSHandler",
      "TestCompressionHandler_Deflate",
      "TestCompressionHandler_Gzip",
      "TestCompressionHandler_PlainText"
    ],
    "github.com/prometheus/prometheus/util/httputil/context.go": [
      "TestCORSHandler",
      "TestCompressionHandler_Deflate",
      "TestCompressionHandler_Gzip",
      "TestCompressionHandler_PlainText"
    ],
    "github.com/prometheus/prometheus/util/httputil/cors.go": [
      "TestCORSHandler",
      "TestCompressionHandler_Deflate",
      "TestCompressionHandler_Gzip",
      "TestCompressionHandler_PlainText"
    ],
    "github.com/prometheus/prometheus/util/junitxml/junitxml.go": [
      "TestJunitOutput"
    ],
    "github.com/prometheus/prometheus/util/logging/dedupe.go": [
      "TestDedupe",
      "TestDedupeConcurrent",
      "TestJSONFileLogger_basic",
      "TestJSONFileLogger_parallel"
    ],
    "github.com/prometheus/prometheus/util/logging/file.go": [
      "TestDedupe",
      "TestDedupeConcurrent",
      "TestJSONFileLogger_basic",
      "TestJSONFileLogger_parallel"
    ],
    "github.com/prometheus/prometheus/util/netconnlimit/netconnlimit.go": [
      "TestSharedLimitListenerClose",
      "TestSharedLimitListenerConcurrency"
    ],
    "github.com/prometheus/prometheus/util/notifications/notifications.go": [
      "TestMaxSubscribers",
      "TestMultipleSubscribers",
      "TestNotificationLifecycle",
      "TestSubscriberReceivesNotifications",
      "TestUnsubscribe"
    ],
    "github.com/prometheus/prometheus/util/stats/query_stats.go": [
      "TestQueryStatsWithSpanTimers",
      "TestQueryStatsWithTimersAndSamples",
      "TestTimerGroup",
      "TestTimerGroupNewTimer"
    ],
    "github.com/prometheus/prometheus/util/stats/timer.go": [
      "TestQueryStatsWithSpanTimers",
      "TestQueryStatsWithTimersAndSamples",
      "TestTimerGroup",
      "TestTimerGroupNewTimer"
    ],
    "github.com/prometheus/prometheus/util/strutil/quote.go": [
      "TestLink",
      "TestSanitizeFullLabelName",
      "TestSanitizeLabelName",
      "TestUnquote"
    ],
    "github.com/prometheus/prometheus/util/strutil/strconv.go": [
      "TestLink",
      "TestSanitizeFullLabelName",
      "TestSanitizeLabelName",
      "TestUnquote"
    ],
    "github.com/prometheus/prometheus/web/api/v1/api.go": [
      "TestAdminEndpoints",
      "TestApiStatusCodes",
      "TestEndpoints",
      "TestExtractQueryOpts",
      "TestGetGlobalURL",
      "TestGetSeries",
      "TestJsonCodec_Encode",
      "TestLabelNames",
      "TestMIMEType_Satisfies",
      "TestMIMEType_String",
      "TestOptionsMethod",
      "TestParseDuration",
      "TestParseTime",
      "TestParseTimeParam",
      "TestQueryExemplars",
      "TestRespondError",
      "TestRespondSuccess",
      "TestRespondSuccess_DefaultCodecCannotEncodeResponse",
      "TestReturnAPIError",
      "TestStats",
      "TestTSDBStatus"
    ],
    "github.com/prometheus/prometheus/web/api/v1/codec.go": [
      "TestAdminEndpoints",
      "TestApiStatusCodes",
      "TestEndpoints",
      "TestExtractQueryOpts",
      "TestGetGlobalURL",
      "TestGetSeries",
      "TestJsonCodec_Encode",
      "TestLabelNames",
      "TestMIMEType_Satisfies",
      "TestMIMEType_String",
      "TestOptionsMethod",
      "TestParseDuration",
      "TestParseTime",
      "TestParseTimeParam",
      "TestQueryExemplars",
      "TestRespondError",
      "TestRespondSuccess",
      "TestRespondSuccess_DefaultCodecCannotEncodeResponse",
      "TestReturnAPIError",
      "TestStats",
      "TestTSDBStatus"
    ],
    "github.com/prometheus/prometheus/web/api/v1/json_codec.go": [
      "TestAdminEndpoints",
      "TestApiStatusCodes",
      "TestEndpoints",
      "TestExtractQueryOpts",
      "TestGetGlobalURL",
      "TestGetSeries",
      "TestJsonCodec_Encode",
      "TestLabelNames",
      "TestMIMEType_Satisfies",
      "TestMIMEType_String",
      "TestOptionsMethod",
      "TestParseDuration",
      "TestParseTime",
      "TestParseTimeParam",
      "TestQueryExemplars",
      "TestRespondError",
      "TestRespondSuccess",
      "TestRespondSuccess_DefaultCodecCannotEncodeResponse",
      "TestReturnAPIError",
      "TestStats",
      "TestTSDBStatus"
    ],
    "github.com/prometheus/prometheus/web/api/v1/translate_ast.go": [
      "TestAdminEndpoints",
      "TestApiStatusCodes",
      "TestEndpoints",
      "TestExtractQueryOpts",
      "TestGetGlobalURL",
      "TestGetSeries",
      "TestJsonCodec_Encode",
      "TestLabelNames",
      "TestMIMEType_Satisfies",
      "TestMIMEType_String",
      "TestOptionsMethod",
      "TestParseDuration",
      "TestParseTime",
      "TestParseTimeParam",
      "TestQueryExemplars",
      "TestRespondError",
      "TestRespondSuccess",
      "TestRespondSuccess_DefaultCodecCannotEncodeResponse",
      "TestReturnAPIError",
      "TestStats",
      "TestTSDBStatus"
    ],
    "github.com/prometheus/prometheus/web/federate.go": [
      "TestAgentAPIEndPoints",
      "TestDebugHandler",
      "TestFederation",
      "TestFederationWithNativeHistograms",
      "TestFederation_NotReady",
      "TestHTTPMetrics",
      "TestHandleMultipleQuitRequests",
      "TestMultipleListenAddresses",
      "TestReadyAndHealthy",
      "TestRoutePrefix",
      "TestShutdownWithStaleConnection"
    ],
    "github.com/prometheus/prometheus/web/web.go": [
      "TestAgentAPIEndPoints",
      "TestDebugHandler",
      "TestFederation",
      "TestFederationWithNativeHistograms",
      "TestFederation_NotReady",
      "TestHTTPMetrics",
      "TestHandleMultipleQuitRequests",
      "TestMultipleListenAddresses",
      "TestReadyAndHealthy",
      "TestRoutePrefix",
      "TestShutdownWithStaleConnection"
    ]
  }
}